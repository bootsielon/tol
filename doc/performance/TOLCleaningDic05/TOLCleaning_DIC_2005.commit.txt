cvs -d :ext:vdebuen@cvs.tol-project.org:/home/cvsroot/tolp -z4 commit -m "Changed memory trace handling" bbasic/atm.cpp
cvs -d :ext:vdebuen@cvs.tol-project.org:/home/cvsroot/tolp -z4 commit -m "Now BText doesn't inherites from BAtom. To insert strings in lists BObject will be used." bbasic/dir.cpp 
cvs -d :ext:vdebuen@cvs.tol-project.org:/home/cvsroot/tolp -z4 commit -m "Now BText doesn't inherites from BAtom. To insert strings in lists BObject will be used." bbasic/dirtext.cpp 
cvs -d :ext:vdebuen@cvs.tol-project.org:/home/cvsroot/tolp -z4 commit -m "Now BText doesn't inherites from BAtom. To insert strings in lists BObject will be used." bbasic/opt.cpp 
cvs -d :ext:vdebuen@cvs.tol-project.org:/home/cvsroot/tolp -z4 commit -m "Now BText doesn't inherites from BAtom. To insert strings in lists BObject will be used." bbasic/opttext.cpp
cvs -d :ext:vdebuen@cvs.tol-project.org:/home/cvsroot/tolp -z4 commit -m "New controls about number of errors and warnings exported to TOL user" bbasic/out.cpp
cvs -d :ext:vdebuen@cvs.tol-project.org:/home/cvsroot/tolp -z4 commit -m "New access functions to miliseconds and string formated of process elapsed timebbasic/tol_btimer.h" bbasic/timer.cpp
cvs -d :ext:vdebuen@cvs.tol-project.org:/home/cvsroot/tolp -z4 commit -m "Constant factor 2 for Add reallocation replaced by ReallocMarginFactor defined as 1.2" bbasic/tol_barray.h 
cvs -d :ext:vdebuen@cvs.tol-project.org:/home/cvsroot/tolp -z4 commit -m "Virtual methods IsDeadObj and System are been downloaded from BSyntaxObject to this level to allow a best memory tracing" bbasic/tol_batom.h
cvs -d :ext:vdebuen@cvs.tol-project.org:/home/cvsroot/tolp -z4 commit -m "Now BText doesn't inherites from BAtom. To insert strings in lists BObject will be used." bbasic/tol_bdir.h
cvs -d :ext:vdebuen@cvs.tol-project.org:/home/cvsroot/tolp -z4 commit -m "Now BText doesn't inherites from BAtom. To insert strings in lists BObject will be used." bbasic/tol_bopt.h
cvs -d :ext:vdebuen@cvs.tol-project.org:/home/cvsroot/tolp -z4 commit -m "Now BText doesn't inherites from BAtom. To insert strings in lists BObject will be used." bbasic/tol_btext.h
cvs -d :ext:vdebuen@cvs.tol-project.org:/home/cvsroot/tolp -z4 commit -m "Now BText doesn't inherites from BAtom. To insert strings in lists BObject will be used." bbasic/txt.cpp
cvs -d :ext:vdebuen@cvs.tol-project.org:/home/cvsroot/tolp -z4 commit -m "BText::defectSize_ = 0 instead of old unused value of 64, due to constant 1 was used" bbasic/txt.cpp 
cvs -d :ext:vdebuen@cvs.tol-project.org:/home/cvsroot/tolp -z4 commit -m "Fixed invalid memory access in ARMAAutoCovarianzeVector function, when no AR is defined and number of required autocovariances is less or equal than MA degree that could cause random secondary effects, even system crashes." bmath/bstat/barma.cpp
cvs -d :ext:vdebuen@cvs.tol-project.org:/home/cvsroot/tolp -z4 commit -m "Frequency(...) must divide in just n parts instead of n+1" bmath/bstat/stat.cpp
cvs -d :ext:vdebuen@cvs.tol-project.org:/home/cvsroot/tolp -z4 commit -m "New BData class inherited from BArray<BDat> to control Time Series used volume" bmath/mathobjects/dat.cpp
cvs -d :ext:vdebuen@cvs.tol-project.org:/home/cvsroot/tolp -z4 commit -m "New BData class inherited from BArray<BDat> to control Time Series used volume" bmath/mathobjects/tol_bdat.h
cvs -d :ext:vdebuen@cvs.tol-project.org:/home/cvsroot/tolp -z4 commit -m "Now BText doesn't inherites from BAtom. To insert strings in lists BObject will be used." bparser/par.cpp
cvs -d :ext:vdebuen@cvs.tol-project.org:/home/cvsroot/tolp -z4 commit -m "New IsAutoContens() method of grammars to be used in futurebtol/bgrammar/str.cpp : " btol/bgrammar/graacc.cpp
cvs -d :ext:vdebuen@cvs.tol-project.org:/home/cvsroot/tolp -z4 commit -m "Unused class BSyntaxImage and related functions has been eliminated \n Unparsing is used just in Evaluate(BText expression) instead of Evaluate(BTree tree) to savememory and process time." btol/bgrammar/graimp.cpp
cvs -d :ext:vdebuen@cvs.tol-project.org:/home/cvsroot/tolp -z4 commit -m "Unused class BSyntaxImage and related functions has been eliminated " btol/bgrammar/met.cpp
cvs -d :ext:vdebuen@cvs.tol-project.org:/home/cvsroot/tolp -z4 commit -m "Fixed forbidden accesses to code->Contens() for non BUSerFunction objects" btol/bgrammar/met.cpp :
cvs -d :ext:vdebuen@cvs.tol-project.org:/home/cvsroot/tolp -z4 commit -m "When BuildingMethod() is false Mode() must be equal to so.Mode() to match \n New BOperator::AddSystemOperator() to control different creating processes of built-in and user functions that were never deleted internally" btol/bgrammar/opr.cpp
cvs -d :ext:vdebuen@cvs.tol-project.org:/home/cvsroot/tolp -z4 commit -m "New bool BuildingMethod() function to special treatment of overloading of method's functions \n Unused class BSyntaxImage and related functions has been eliminated " btol/bgrammar/syn.cpp
cvs -d :ext:vdebuen@cvs.tol-project.org:/home/cvsroot/tolp -z4 commit -m "BSyntaxObject Mode constants are moved to tol_bsyntax.h \n Old BSyntaxObject tolPath_ is restricted to BSetFromFile to be used in new method ParentPath() to access to path of the file where the object was created in. New BSynObjOptInfo class to optional storement of name_, description_, localName_ and parent_ in BSyntaxObject just when needed. Changed memory trace handling \n BGraConstant<Any> modifications of name, description or value are disabled" btol/bgrammar/tol_bgencon.h
cvs -d :ext:vdebuen@cvs.tol-project.org:/home/cvsroot/tolp -z4 commit -m "BRenContens<Any>::New(const BText& name, BSyntaxObject* obj) method will call BCopyContens<Any>::New when obj were a System variable to avoid involuntary constant objects modifications \n Boolean members system_, released_, calculated_, and calculating_ are compacted in a protected bit-struct flags_ member at BSyntaxObject using just a byte all together \n Class BRenamed is eliminated, BRenamedGen is renamed as BRefObject. In BTmpObject args_ member is now a BList* instead of a BSet and a short card_, and BSyntaxObject** array_ are used to accelerate accesses to arguments. \n New template classes has been inserted in *Contens* template hierarchy. A new template BGraContensBase<Any> without contens_ to save memory when is this member is not needed and allowing virtual access to it. A \n New template BGraContensFND<Any,Name_,Description_> usefull to returned objects by built-in functions saving memory in each instance. \n A new temlpate BCopyContens<Any> to use instead of BRenContens<Any> to low size types as Real, Complex, Date, Text, Polyn, Ration. This objects copy the contens of referenced object and try to destroy it. If isn't posible, destroying will be delayed to the live end of encapsulating object. \n BGraConstant<Any> modifications of name, description or value are disabled" btol/bgrammar/tol_bgenobj.h
cvs -d :ext:vdebuen@cvs.tol-project.org:/home/cvsroot/tolp -z4 commit -m "BRenContens<Any>::New(const BText& name, BSyntaxObject* obj) method will call BCopyContens<Any>::New when obj were a System variable to avoid involuntary constant objects modifications \n Boolean members system_, released_, calculated_, and calculating_ are compacted in a protected bit-struct flags_ member at BSyntaxObject using just a byte all together \n Class BRenamed is eliminated, BRenamedGen is renamed as BRefObject. In BTmpObject args_ member is now a BList* instead of a BSet and a short card_, and BSyntaxObject** array_ are used to accelerate accesses to arguments. \n New template classes has been inserted in *Contens* template hierarchy. A new template BGraContensBase<Any> without contens_ to save memory when is this member is not needed and allowing virtual access to it. A \n New template BGraContensFND<Any,Name_,Description_> usefull to returned objects by built-in functions saving memory in each instance. \n A new temlpate BCopyContens<Any> to use instead of BRenContens<Any> to low size types as Real, Complex, Date, Text, Polyn, Ration. This objects copy the contens of referenced object and try to destroy it. If isn't posible, destroying will be delayed to the live end of encapsulating object. \n BGraConstant<Any> modifications of name, description or value are disabled" btol/bgrammar/tol_bgentmp.h
cvs -d :ext:vdebuen@cvs.tol-project.org:/home/cvsroot/tolp -z4 commit -m "BRenContens<Any>::New(const BText& name, BSyntaxObject* obj) method will call BCopyContens<Any>::New when obj were a System variable to avoid involuntary constant objects modifications \n Class BRenamed is eliminated, BRenamedGen is renamed as BRefObject. In BTmpObject args_ member is now a BList* instead of a BSet and a short card_, and BSyntaxObject** array_ are used to accelerate accesses to arguments. \n New template classes has been inserted in *Contens* template hierarchy. A new template BGraContensBase<Any> without contens_ to save memory when is this member is not needed and allowing virtual access to it. A \n New template BGraContensFND<Any,Name_,Description_> usefull to returned objects by built-in functions saving memory in each instance. \n A new temlpate BCopyContens<Any> to use instead of BRenContens<Any> to low size types as Real, Complex, Date, Text, Polyn, Ration. This objects copy the contens of referenced object and try to destroy it. If isn't posible, destroying will be delayed to the live end of encapsulating object. \n New IsAutoContens() method of grammars to be used in futurebtol/bgrammar/str.cpp : " btol/bgrammar/tol_bgrammar.h
cvs -d :ext:vdebuen@cvs.tol-project.org:/home/cvsroot/tolp -z4 commit -m "Unused class BSyntaxImage and related functions has been eliminated \n Unused class BSyntaxImage and related functions has been eliminated " btol/bgrammar/tol_bmethod.h
cvs -d :ext:vdebuen@cvs.tol-project.org:/home/cvsroot/tolp -z4 commit -m "New BOperator::AddSystemOperator() to control different creating processes of built-in and user functions that were never deleted internally" btol/bgrammar/tol_boper.h
cvs -d :ext:vdebuen@cvs.tol-project.org:/home/cvsroot/tolp -z4 commit -m "New bool BuildingMethod() function to special treatment of overloading of method's functions \n BField inherites from BObject instead of BSyntaxObject" btol/bgrammar/tol_bstruct.h
cvs -d :ext:vdebuen@cvs.tol-project.org:/home/cvsroot/tolp -z4 commit -m "Unused class BSyntaxImage and related functions has been eliminated " btol/bgrammar/tol_bsyntax.h
cvs -d :ext:vdebuen@cvs.tol-project.org:/home/cvsroot/tolp -z4 commit -m "Boolean members system_, released_, calculated_, and calculating_ are compacted in a protected bit-struct flags_ member at BSyntaxObject using just a byte all together \n BSyntaxObject Mode constants are moved to tol_bsyntax.h \n BSyntaxObject::flags_.system_ is set to true for all BSyntaxObjects until TOLHasBeenInitialized() return true, when InitGrammars ends \n Old BSyntaxObject tolPath_ is restricted to BSetFromFile to be used in new method ParentPath() to access to path of the file where the object was created in. New BSynObjOptInfo class to optional storement of name_, description_, localName_ and parent_ in BSyntaxObject just when needed. Changed memory trace handling \n Fixed forbidden accesses to code->Contens() for non BUSerFunction objects" btol/bgrammar/txthash.cpp : 
cvs -d :ext:vdebuen@cvs.tol-project.org:/home/cvsroot/tolp -z4 commit -m "When BuildingMethod() is false Mode() must be equal to so.Mode() to match \n BList* outLst_ and inLst_ are eliminated from BModel to apply new BSerieTable advantages" btol/bmodel/foread.cpp
cvs -d :ext:vdebuen@cvs.tol-project.org:/home/cvsroot/tolp -z4 commit -m "BList* outLst_ and inLst_ are eliminated from BModel to apply new BSerieTable advantages" btol/bmodel/modcalc.cpp
cvs -d :ext:vdebuen@cvs.tol-project.org:/home/cvsroot/tolp -z4 commit -m "BList* outLst_ and inLst_ are eliminated from BModel to apply new BSerieTable advantages" btol/bmodel/model.cpp
cvs -d :ext:vdebuen@cvs.tol-project.org:/home/cvsroot/tolp -z4 commit -m "BList* outLst_ and inLst_ are eliminated from BModel to apply new BSerieTable advantages" btol/bmodel/tol_bmodel.h
cvs -d :ext:vdebuen@cvs.tol-project.org:/home/cvsroot/tolp -z4 commit -m "Internal BCode::operator_ is changed from BUserFunction* to BStandardOperator*" btol/code_type/cod.cpp
cvs -d :ext:vdebuen@cvs.tol-project.org:/home/cvsroot/tolp -z4 commit -m "btol/code_type/tol_bcodgra.h : \n BUserFunCode::Mode() is changed to BOBJECTMODE instead of BUSERFUNMODE that is reserved to internal operators and unused class BCodeCreator has been eliminated \n Internal BCode::operator_ is changed from BUserFunction* to BStandardOperator*" btol/code_type/tol_bcode.h
cvs -d :ext:vdebuen@cvs.tol-project.org:/home/cvsroot/tolp -z4 commit -m "btol/code_type/tol_bcodgra.h : \n BUserFunCode::Mode() is changed to BOBJECTMODE instead of BUSERFUNMODE that is reserved to internal operators and unused class BCodeCreator has been eliminated \n BCmpConstant* i_ is changed to BParamCmp" btol/complex_type/cmpgra.cpp
cvs -d :ext:vdebuen@cvs.tol-project.org:/home/cvsroot/tolp -z4 commit -m "Boolean members system_, released_, calculated_, and calculating_ are compacted in a protected bit-struct flags_ member at BSyntaxObject using just a byte all together" btol/lang/language.cpp 
cvs -d :ext:vdebuen@cvs.tol-project.org:/home/cvsroot/tolp -z4 commit -m "New controls about number of errors and warnings exported to TOL user" btol/real_type/datgra.cpp
cvs -d :ext:vdebuen@cvs.tol-project.org:/home/cvsroot/tolp -z4 commit -m "Dating_->nRefs_ is not touched by BTimeSerie because is non needed feature. Unused hashDat_ member has been eliminated" btol/serie_type/tol_btmser.h
cvs -d :ext:vdebuen@cvs.tol-project.org:/home/cvsroot/tolp -z4 commit -m "Dating_->nRefs_ is not touched by BTimeSerie because is non needed feature. Unused hashDat_ member has been eliminated" btol/serie_type/tsrgra.cpp
cvs -d :ext:vdebuen@cvs.tol-project.org:/home/cvsroot/tolp -z4 commit -m "BData data_ is now really protected eliminating GetDataBuffer() access. New BTimeSerie member functions PutBufDat to change a dat, or Realloc, Alloc and Delete to manage memory" btol\bdb\bdb.cpp
cvs -d :ext:vdebuen@cvs.tol-project.org:/home/cvsroot/tolp -z4 commit -m "At BSet class BList* element_ is eliminated. \n When a list is needed a copy is available through ToList(). \n Access to BSet BTmpObject<Any>::Args() must be replaced by BList* ArgList() or DupArgList(). New class BGraContensFNDSet<BSet, Name_, Description_> inherited from BGraContensFND<Any,Name_,Description_> to allow special constructors of bulit-in functions returned sets. \n BSet constructor from BList* and operator= to BList* are eliminated to replace in this case by PutElement or RobElement. \n Allocation methods: DeleteBuffer() method is renamed as Delete(). ReallocBuffer is renamed as Realloc and protected and is added a new protected Alloc method and the only one public will be PrepareStore, in order to avoid invalid memory accesses. \n BData data_ is now really protected eliminating GetDataBuffer() access. New BTimeSerie member functions PutBufDat to change a dat, or Realloc, Alloc and Delete to manage memory" btol\bdb\bdspool.cpp
cvs -d :ext:vdebuen@cvs.tol-project.org:/home/cvsroot/tolp -z4 commit -m "BSerieGroup and BSerieTable use now a BArray<BUserTimeSerie*> instead of a BSet to store Series in order to avoid secondary effects of references over them. \n Now the only one creator for BSerieGroup and BSerieTable has no arguments. Then you can add a Serie, a BList*, a BSet or another BSerieGroup or BSerieTable. After you can use BSerieGroup to prepare operations between series or test dating and date bounds of a collection of series or you can fill a BSerieTable with data from collected series. \n At BSet class BList* element_ is eliminated. \n When a list is needed a copy is available through ToList(). \n Access to BSet BTmpObject<Any>::Args() must be replaced by BList* ArgList() or DupArgList(). New class BGraContensFNDSet<BSet, Name_, Description_> inherited from BGraContensFND<Any,Name_,Description_> to allow special constructors of bulit-in functions returned sets. \n BSet constructor from BList* and operator= to BList* are eliminated to replace in this case by PutElement or RobElement. \n Allocation methods: DeleteBuffer() method is renamed as Delete(). ReallocBuffer is renamed as Realloc and protected and is added a new protected Alloc method and the only one public will be PrepareStore, in order to avoid invalid memory accesses. \n At BSet class BList* element_ is eliminated. " btol\bgrammar\graimp.cpp
cvs -d :ext:vdebuen@cvs.tol-project.org:/home/cvsroot/tolp -z4 commit -m "When a list is needed a copy is available through ToList(). \n Access to BSet BTmpObject<Any>::Args() must be replaced by BList* ArgList() or DupArgList(). New class BGraContensFNDSet<BSet, Name_, Description_> inherited from BGraContensFND<Any,Name_,Description_> to allow special constructors of bulit-in functions returned sets. \n BSet constructor from BList* and operator= to BList* are eliminated to replace in this case by PutElement or RobElement. \n Allocation methods: DeleteBuffer() method is renamed as Delete(). ReallocBuffer is renamed as Realloc and protected and is added a new protected Alloc method and the only one public will be PrepareStore, in order to avoid invalid memory accesses. \n At BSet class BList* element_ is eliminated. " btol\bgrammar\spfuninst.cpp
cvs -d :ext:vdebuen@cvs.tol-project.org:/home/cvsroot/tolp -z4 commit -m "When a list is needed a copy is available through ToList(). \n Access to BSet BTmpObject<Any>::Args() must be replaced by BList* ArgList() or DupArgList(). New class BGraContensFNDSet<BSet, Name_, Description_> inherited from BGraContensFND<Any,Name_,Description_> to allow special constructors of bulit-in functions returned sets. \n BSet constructor from BList* and operator= to BList* are eliminated to replace in this case by PutElement or RobElement. \n Allocation methods: DeleteBuffer() method is renamed as Delete(). ReallocBuffer is renamed as Realloc and protected and is added a new protected Alloc method and the only one public will be PrepareStore, in order to avoid invalid memory accesses. \n Access to BSyntaxObject or inherited boolean members system_, released_, calculated_, and calculating_ must be changed to flags_.* or BSyntaxObject::Put* functions" btol\bgrammar\tol_bgencon.h
cvs -d :ext:vdebuen@cvs.tol-project.org:/home/cvsroot/tolp -z4 commit -m "Access to BSyntaxObject or inherited boolean members system_, released_, calculated_, and calculating_ must be changed to flags_.* or BSyntaxObject::Put* functions" btol\bgrammar\tol_bgenobj.h
cvs -d :ext:vdebuen@cvs.tol-project.org:/home/cvsroot/tolp -z4 commit -m "Access to BSet BTmpObject<Any>::Args() must be replaced by BList* ArgList() or DupArgList()" btol\bgrammar\tol_bgentmp.h
cvs -d :ext:vdebuen@cvs.tol-project.org:/home/cvsroot/tolp -z4 commit -m "Access to BSet BTmpObject<Any>::Args().Card() must be replaced by NumArgs()" btol\bgrammar\tol_bgentmp.h:
cvs -d :ext:vdebuen@cvs.tol-project.org:/home/cvsroot/tolp -z4 commit -m "Access to BSyntaxObject or inherited boolean members system_, released_, calculated_, and calculating_ must be changed to flags_.* or BSyntaxObject::Put* functions" btol\bgrammar\tol_bsyntax.h
cvs -d :ext:vdebuen@cvs.tol-project.org:/home/cvsroot/tolp -z4 commit -m "At BSet class BList* element_ is eliminated. " btol\bmodel\aia.cpp
cvs -d :ext:vdebuen@cvs.tol-project.org:/home/cvsroot/tolp -z4 commit -m "When a list is needed a copy is available through ToList(). \n Access to BSet BTmpObject<Any>::Args() must be replaced by BList* ArgList() or DupArgList(). New class BGraContensFNDSet<BSet, Name_, Description_> inherited from BGraContensFND<Any,Name_,Description_> to allow special constructors of bulit-in functions returned sets. \n BSet constructor from BList* and operator= to BList* are eliminated to replace in this case by PutElement or RobElement. \n Allocation methods: DeleteBuffer() method is renamed as Delete(). ReallocBuffer is renamed as Realloc and protected and is added a new protected Alloc method and the only one public will be PrepareStore, in order to avoid invalid memory accesses. \n BSerieGroup and BSerieTable use now a BArray<BUserTimeSerie*> instead of a BSet to store Series in order to avoid secondary effects of references over them. " btol\bmodel\estim.cpp
cvs -d :ext:vdebuen@cvs.tol-project.org:/home/cvsroot/tolp -z4 commit -m "Now the only one creator for BSerieGroup and BSerieTable has no arguments. Then you can add a Serie, a BList*, a BSet or another BSerieGroup or BSerieTable. After you can use BSerieGroup to prepare operations between series or test dating and date bounds of a collection of series or you can fill a BSerieTable with data from collected series. \n At BSet class BList* element_ is eliminated. \n When a list is needed a copy is available through ToList(). \n Access to BSet BTmpObject<Any>::Args() must be replaced by BList* ArgList() or DupArgList(). New class BGraContensFNDSet<BSet, Name_, Description_> inherited from BGraContensFND<Any,Name_,Description_> to allow special constructors of bulit-in functions returned sets. \n BSet constructor from BList* and operator= to BList* are eliminated to replace in this case by PutElement or RobElement. \n Allocation methods: DeleteBuffer() method is renamed as Delete(). ReallocBuffer is renamed as Realloc and protected and is added a new protected Alloc method and the only one public will be PrepareStore, in order to avoid invalid memory accesses. \n At BSet class BList* element_ is eliminated. " btol\bmodel\foread.cpp
cvs -d :ext:vdebuen@cvs.tol-project.org:/home/cvsroot/tolp -z4 commit -m "When a list is needed a copy is available through ToList(). \n Access to BSet BTmpObject<Any>::Args() must be replaced by BList* ArgList() or DupArgList(). New class BGraContensFNDSet<BSet, Name_, Description_> inherited from BGraContensFND<Any,Name_,Description_> to allow special constructors of bulit-in functions returned sets. \n BSet constructor from BList* and operator= to BList* are eliminated to replace in this case by PutElement or RobElement. \n Allocation methods: DeleteBuffer() method is renamed as Delete(). ReallocBuffer is renamed as Realloc and protected and is added a new protected Alloc method and the only one public will be PrepareStore, in order to avoid invalid memory accesses. \n BSerieGroup and BSerieTable use now a BArray<BUserTimeSerie*> instead of a BSet to store Series in order to avoid secondary effects of references over them. " btol\bmodel\modcalc.cpp
cvs -d :ext:vdebuen@cvs.tol-project.org:/home/cvsroot/tolp -z4 commit -m "Now the only one creator for BSerieGroup and BSerieTable has no arguments. Then you can add a Serie, a BList*, a BSet or another BSerieGroup or BSerieTable. After you can use BSerieGroup to prepare operations between series or test dating and date bounds of a collection of series or you can fill a BSerieTable with data from collected series. \n At BSet class BList* element_ is eliminated. \n When a list is needed a copy is available through ToList(). \n Access to BSet BTmpObject<Any>::Args() must be replaced by BList* ArgList() or DupArgList(). New class BGraContensFNDSet<BSet, Name_, Description_> inherited from BGraContensFND<Any,Name_,Description_> to allow special constructors of bulit-in functions returned sets. \n BSet constructor from BList* and operator= to BList* are eliminated to replace in this case by PutElement or RobElement. \n Allocation methods: DeleteBuffer() method is renamed as Delete(). ReallocBuffer is renamed as Realloc and protected and is added a new protected Alloc method and the only one public will be PrepareStore, in order to avoid invalid memory accesses. \n At BSet class BList* element_ is eliminated. " btol\bmodel\model.cpp
cvs -d :ext:vdebuen@cvs.tol-project.org:/home/cvsroot/tolp -z4 commit -m "When a list is needed a copy is available through ToList(). \n Access to BSet BTmpObject<Any>::Args() must be replaced by BList* ArgList() or DupArgList(). New class BGraContensFNDSet<BSet, Name_, Description_> inherited from BGraContensFND<Any,Name_,Description_> to allow special constructors of bulit-in functions returned sets. \n BSet constructor from BList* and operator= to BList* are eliminated to replace in this case by PutElement or RobElement. \n Allocation methods: DeleteBuffer() method is renamed as Delete(). ReallocBuffer is renamed as Realloc and protected and is added a new protected Alloc method and the only one public will be PrepareStore, in order to avoid invalid memory accesses. \n BData data_ is now really protected eliminating GetDataBuffer() access. New BTimeSerie member functions PutBufDat to change a dat, or Realloc, Alloc and Delete to manage memory" btol\bmodel\modprev.cpp
cvs -d :ext:vdebuen@cvs.tol-project.org:/home/cvsroot/tolp -z4 commit -m "BSerieGroup and BSerieTable use now a BArray<BUserTimeSerie*> instead of a BSet to store Series in order to avoid secondary effects of references over them. " btol\bmodel\tol_bmodel.h
cvs -d :ext:vdebuen@cvs.tol-project.org:/home/cvsroot/tolp -z4 commit -m "Now the only one creator for BSerieGroup and BSerieTable has no arguments. Then you can add a Serie, a BList*, a BSet or another BSerieGroup or BSerieTable. After you can use BSerieGroup to prepare operations between series or test dating and date bounds of a collection of series or you can fill a BSerieTable with data from collected series. \n Access to BSet BTmpObject<Any>::Args().Card() must be replaced by NumArgs()" btol\bmonte\mc-integrator.cpp
cvs -d :ext:vdebuen@cvs.tol-project.org:/home/cvsroot/tolp -z4 commit -m "Access to BSyntaxObject or inherited boolean members system_, released_, calculated_, and calculating_ must be changed to flags_.* or BSyntaxObject::Put* functions \n At BSet class BList* element_ is eliminated. \n When a list is needed a copy is available through ToList(). \n Access to BSet BTmpObject<Any>::Args() must be replaced by BList* ArgList() or DupArgList(). New class BGraContensFNDSet<BSet, Name_, Description_> inherited from BGraContensFND<Any,Name_,Description_> to allow special constructors of bulit-in functions returned sets. \n BSet constructor from BList* and operator= to BList* are eliminated to replace in this case by PutElement or RobElement. \n Allocation methods: DeleteBuffer() method is renamed as Delete(). ReallocBuffer is renamed as Realloc and protected and is added a new protected Alloc method and the only one public will be PrepareStore, in order to avoid invalid memory accesses. \n Access to BSyntaxObject or inherited boolean members system_, released_, calculated_, and calculating_ must be changed to flags_.* or BSyntaxObject::Put* functions" btol\cseries_type\ctsrgra.cpp
cvs -d :ext:vdebuen@cvs.tol-project.org:/home/cvsroot/tolp -z4 commit -m "BSerieGroup and BSerieTable use now a BArray<BUserTimeSerie*> instead of a BSet to store Series in order to avoid secondary effects of references over them. " btol\matrix_type\matgra.cpp
cvs -d :ext:vdebuen@cvs.tol-project.org:/home/cvsroot/tolp -z4 commit -m "Now the only one creator for BSerieGroup and BSerieTable has no arguments. Then you can add a Serie, a BList*, a BSet or another BSerieGroup or BSerieTable. After you can use BSerieGroup to prepare operations between series or test dating and date bounds of a collection of series or you can fill a BSerieTable with data from collected series. \n Access to BSet BTmpObject<Any>::Args() must be replaced by BList* ArgList() or DupArgList() \n Access to BSet BTmpObject<Any>::Args().Card() must be replaced by NumArgs() \n BSystem* objects that shouldn't be system constants are changed to BUser* to inherite from BGraContens<Any> instead of undeletable system class BGraConstant<Any> \n At BSet class BList* element_ is eliminated. \n When a list is needed a copy is available through ToList(). \n Access to BSet BTmpObject<Any>::Args() must be replaced by BList* ArgList() or DupArgList(). New class BGraContensFNDSet<BSet, Name_, Description_> inherited from BGraContensFND<Any,Name_,Description_> to allow special constructors of bulit-in functions returned sets. \n BSet constructor from BList* and operator= to BList* are eliminated to replace in this case by PutElement or RobElement. \n Allocation methods: DeleteBuffer() method is renamed as Delete(). ReallocBuffer is renamed as Realloc and protected and is added a new protected Alloc method and the only one public will be PrepareStore, in order to avoid invalid memory accesses. \n Access to BSyntaxObject or inherited boolean members system_, released_, calculated_, and calculating_ must be changed to flags_.* or BSyntaxObject::Put* functions" btol\matrix_type\multimin.cpp
cvs -d :ext:vdebuen@cvs.tol-project.org:/home/cvsroot/tolp -z4 commit -m "At BSet class BList* element_ is eliminated. \n When a list is needed a copy is available through ToList(). \n Access to BSet BTmpObject<Any>::Args() must be replaced by BList* ArgList() or DupArgList(). New class BGraContensFNDSet<BSet, Name_, Description_> inherited from BGraContensFND<Any,Name_,Description_> to allow special constructors of bulit-in functions returned sets. \n BSet constructor from BList* and operator= to BList* are eliminated to replace in this case by PutElement or RobElement. \n Allocation methods: DeleteBuffer() method is renamed as Delete(). ReallocBuffer is renamed as Realloc and protected and is added a new protected Alloc method and the only one public will be PrepareStore, in order to avoid invalid memory accesses. \n At BSet class BList* element_ is eliminated. " btol\polynomial_type\polgra.cpp
cvs -d :ext:vdebuen@cvs.tol-project.org:/home/cvsroot/tolp -z4 commit -m "When a list is needed a copy is available through ToList(). \n Access to BSet BTmpObject<Any>::Args() must be replaced by BList* ArgList() or DupArgList(). New class BGraContensFNDSet<BSet, Name_, Description_> inherited from BGraContensFND<Any,Name_,Description_> to allow special constructors of bulit-in functions returned sets. \n BSet constructor from BList* and operator= to BList* are eliminated to replace in this case by PutElement or RobElement. \n Allocation methods: DeleteBuffer() method is renamed as Delete(). ReallocBuffer is renamed as Realloc and protected and is added a new protected Alloc method and the only one public will be PrepareStore, in order to avoid invalid memory accesses. \n Access to BSet BTmpObject<Any>::Args().Card() must be replaced by NumArgs()" btol\real_type\armseval.cpp
cvs -d :ext:vdebuen@cvs.tol-project.org:/home/cvsroot/tolp -z4 commit -m "BSerieGroup and BSerieTable use now a BArray<BUserTimeSerie*> instead of a BSet to store Series in order to avoid secondary effects of references over them. " btol\real_type\datgra.cpp
cvs -d :ext:vdebuen@cvs.tol-project.org:/home/cvsroot/tolp -z4 commit -m "Now the only one creator for BSerieGroup and BSerieTable has no arguments. Then you can add a Serie, a BList*, a BSet or another BSerieGroup or BSerieTable. After you can use BSerieGroup to prepare operations between series or test dating and date bounds of a collection of series or you can fill a BSerieTable with data from collected series. \n BSystem* objects that shouldn't be system constants are changed to BUser* to inherite from BGraContens<Any> instead of undeletable system class BGraConstant<Any> \n Access to BSet BTmpObject<Any>::Args().Card() must be replaced by NumArgs()" btol\real_type\datgrapr.cpp
cvs -d :ext:vdebuen@cvs.tol-project.org:/home/cvsroot/tolp -z4 commit -m "Access to BSet BTmpObject<Any>::Args().Card() must be replaced by NumArgs()" btol\real_type\datgrast.cpp
cvs -d :ext:vdebuen@cvs.tol-project.org:/home/cvsroot/tolp -z4 commit -m "At BSet class BList* element_ is eliminated. \n When a list is needed a copy is available through ToList(). \n Access to BSet BTmpObject<Any>::Args() must be replaced by BList* ArgList() or DupArgList(). New class BGraContensFNDSet<BSet, Name_, Description_> inherited from BGraContensFND<Any,Name_,Description_> to allow special constructors of bulit-in functions returned sets. \n BSet constructor from BList* and operator= to BList* are eliminated to replace in this case by PutElement or RobElement. \n Allocation methods: DeleteBuffer() method is renamed as Delete(). ReallocBuffer is renamed as Realloc and protected and is added a new protected Alloc method and the only one public will be PrepareStore, in order to avoid invalid memory accesses. \n Access to BSet BTmpObject<Any>::Args().Card() must be replaced by NumArgs()" btol\real_type\datgrav.cpp
cvs -d :ext:vdebuen@cvs.tol-project.org:/home/cvsroot/tolp -z4 commit -m "BSerieGroup and BSerieTable use now a BArray<BUserTimeSerie*> instead of a BSet to store Series in order to avoid secondary effects of references over them. " btol\real_type\datgsrst.cpp
cvs -d :ext:vdebuen@cvs.tol-project.org:/home/cvsroot/tolp -z4 commit -m "Now the only one creator for BSerieGroup and BSerieTable has no arguments. Then you can add a Serie, a BList*, a BSet or another BSerieGroup or BSerieTable. After you can use BSerieGroup to prepare operations between series or test dating and date bounds of a collection of series or you can fill a BSerieTable with data from collected series. \n BSystem* objects that shouldn't be system constants are changed to BUser* to inherite from BGraContens<Any> instead of undeletable system class BGraConstant<Any> \n BData data_ is now really protected eliminating GetDataBuffer() access. New BTimeSerie member functions PutBufDat to change a dat, or Realloc, Alloc and Delete to manage memory" btol\serie_type\srg.cpp
cvs -d :ext:vdebuen@cvs.tol-project.org:/home/cvsroot/tolp -z4 commit -m "BSerieGroup and BSerieTable use now a BArray<BUserTimeSerie*> instead of a BSet to store Series in order to avoid secondary effects of references over them. \n Now the only one creator for BSerieGroup and BSerieTable has no arguments. Then you can add a Serie, a BList*, a BSet or another BSerieGroup or BSerieTable. After you can use BSerieGroup to prepare operations between series or test dating and date bounds of a collection of series or you can fill a BSerieTable with data from collected series. \n BData data_ is now really protected eliminating GetDataBuffer() access. New BTimeSerie member functions PutBufDat to change a dat, or Realloc, Alloc and Delete to manage memory" btol\serie_type\tol_btmser.h:
cvs -d :ext:vdebuen@cvs.tol-project.org:/home/cvsroot/tolp -z4 commit -m "BData data_ is now really protected eliminating GetDataBuffer() access. New BTimeSerie member functions PutBufDat to change a dat, or Realloc, Alloc and Delete to manage memory" btol\serie_type\tol_btsrgrp.h
cvs -d :ext:vdebuen@cvs.tol-project.org:/home/cvsroot/tolp -z4 commit -m "BSerieGroup and BSerieTable use now a BArray<BUserTimeSerie*> instead of a BSet to store Series in order to avoid secondary effects of references over them. \n Now the only one creator for BSerieGroup and BSerieTable has no arguments. Then you can add a Serie, a BList*, a BSet or another BSerieGroup or BSerieTable. After you can use BSerieGroup to prepare operations between series or test dating and date bounds of a collection of series or you can fill a BSerieTable with data from collected series. \n BData data_ is now really protected eliminating GetDataBuffer() access. New BTimeSerie member functions PutBufDat to change a dat, or Realloc, Alloc and Delete to manage memory" btol\serie_type\tsr.cpp:
cvs -d :ext:vdebuen@cvs.tol-project.org:/home/cvsroot/tolp -z4 commit -m "Access to BSyntaxObject or inherited boolean members system_, released_, calculated_, and calculating_ must be changed to flags_.* or BSyntaxObject::Put* functions" btol\serie_type\tsrgra.cpp
cvs -d :ext:vdebuen@cvs.tol-project.org:/home/cvsroot/tolp -z4 commit -m "BData data_ is now really protected eliminating GetDataBuffer() access. New BTimeSerie member functions PutBufDat to change a dat, or Realloc, Alloc and Delete to manage memory" btol\serie_type\tsrgra.cpp:
cvs -d :ext:vdebuen@cvs.tol-project.org:/home/cvsroot/tolp -z4 commit -m "BSerieGroup and BSerieTable use now a BArray<BUserTimeSerie*> instead of a BSet to store Series in order to avoid secondary effects of references over them. " btol\serie_type\tsrgrai.cpp
cvs -d :ext:vdebuen@cvs.tol-project.org:/home/cvsroot/tolp -z4 commit -m "Now the only one creator for BSerieGroup and BSerieTable has no arguments. Then you can add a Serie, a BList*, a BSet or another BSerieGroup or BSerieTable. After you can use BSerieGroup to prepare operations between series or test dating and date bounds of a collection of series or you can fill a BSerieTable with data from collected series. \n BData data_ is now really protected eliminating GetDataBuffer() access. New BTimeSerie member functions PutBufDat to change a dat, or Realloc, Alloc and Delete to manage memory" btol\serie_type\tsrgrav.cpp:
cvs -d :ext:vdebuen@cvs.tol-project.org:/home/cvsroot/tolp -z4 commit -m "At BSet class BList* element_ is eliminated. " btol\set_type\set.cpp
cvs -d :ext:vdebuen@cvs.tol-project.org:/home/cvsroot/tolp -z4 commit -m "When a list is needed a copy is available through ToList(). \n Access to BSet BTmpObject<Any>::Args() must be replaced by BList* ArgList() or DupArgList(). New class BGraContensFNDSet<BSet, Name_, Description_> inherited from BGraContensFND<Any,Name_,Description_> to allow special constructors of bulit-in functions returned sets. \n BSet constructor from BList* and operator= to BList* are eliminated to replace in this case by PutElement or RobElement. \n Allocation methods: DeleteBuffer() method is renamed as Delete(). ReallocBuffer is renamed as Realloc and protected and is added a new protected Alloc method and the only one public will be PrepareStore, in order to avoid invalid memory accesses. \n BData data_ is now really protected eliminating GetDataBuffer() access. New BTimeSerie member functions PutBufDat to change a dat, or Realloc, Alloc and Delete to manage memory" btol\set_type\setgra.cpp
cvs -d :ext:vdebuen@cvs.tol-project.org:/home/cvsroot/tolp -z4 commit -m "Access to BSet BTmpObject<Any>::Args() must be replaced by BList* ArgList() or DupArgList() \n Access to BSet BTmpObject<Any>::Args().Card() must be replaced by NumArgs() \n Access to BSyntaxObject or inherited boolean members system_, released_, calculated_, and calculating_ must be changed to flags_.* or BSyntaxObject::Put* functions \n At BSet class BList* element_ is eliminated. \n When a list is needed a copy is available through ToList(). \n Access to BSet BTmpObject<Any>::Args() must be replaced by BList* ArgList() or DupArgList(). New class BGraContensFNDSet<BSet, Name_, Description_> inherited from BGraContensFND<Any,Name_,Description_> to allow special constructors of bulit-in functions returned sets. \n BSet constructor from BList* and operator= to BList* are eliminated to replace in this case by PutElement or RobElement. \n Allocation methods: DeleteBuffer() method is renamed as Delete(). ReallocBuffer is renamed as Realloc and protected and is added a new protected Alloc method and the only one public will be PrepareStore, in order to avoid invalid memory accesses. \n At BSet class BList* element_ is eliminated. " btol\set_type\tol_bset.h
cvs -d :ext:vdebuen@cvs.tol-project.org:/home/cvsroot/tolp -z4 commit -m "When a list is needed a copy is available through ToList(). \n Access to BSet BTmpObject<Any>::Args() must be replaced by BList* ArgList() or DupArgList(). New class BGraContensFNDSet<BSet, Name_, Description_> inherited from BGraContensFND<Any,Name_,Description_> to allow special constructors of bulit-in functions returned sets. \n BSet constructor from BList* and operator= to BList* are eliminated to replace in this case by PutElement or RobElement. \n Allocation methods: DeleteBuffer() method is renamed as Delete(). ReallocBuffer is renamed as Realloc and protected and is added a new protected Alloc method and the only one public will be PrepareStore, in order to avoid invalid memory accesses. \n Access to BSyntaxObject or inherited boolean members system_, released_, calculated_, and calculating_ must be changed to flags_.* or BSyntaxObject::Put* functions" btol\set_type\tol_bsetgra.h:
cvs -d :ext:vdebuen@cvs.tol-project.org:/home/cvsroot/tolp -z4 commit -m "BSerieGroup and BSerieTable use now a BArray<BUserTimeSerie*> instead of a BSet to store Series in order to avoid secondary effects of references over them. " btol\text_type\txtgra.cpp
cvs -d :ext:vdebuen@cvs.tol-project.org:/home/cvsroot/tolp -z4 commit -m "Now the only one creator for BSerieGroup and BSerieTable has no arguments. Then you can add a Serie, a BList*, a BSet or another BSerieGroup or BSerieTable. After you can use BSerieGroup to prepare operations between series or test dating and date bounds of a collection of series or you can fill a BSerieTable with data from collected series. \n BSystem* objects that shouldn't be system constants are changed to BUser* to inherite from BGraContens<Any> instead of undeletable system class BGraConstant<Any> \n At BSet class BList* element_ is eliminated. \n When a list is needed a copy is available through ToList(). \n Access to BSet BTmpObject<Any>::Args() must be replaced by BList* ArgList() or DupArgList(). New class BGraContensFNDSet<BSet, Name_, Description_> inherited from BGraContensFND<Any,Name_,Description_> to allow special constructors of bulit-in functions returned sets. \n BSet constructor from BList* and operator= to BList* are eliminated to replace in this case by PutElement or RobElement. \n Allocation methods: DeleteBuffer() method is renamed as Delete(). ReallocBuffer is renamed as Realloc and protected and is added a new protected Alloc method and the only one public will be PrepareStore, in order to avoid invalid memory accesses. \n Access to BSet BTmpObject<Any>::Args().Card() must be replaced by NumArgs()" btol\timeset_type\tmsgrav.cpp
cvs -d :ext:vdebuen@cvs.tol-project.org:/home/cvsroot/tolp -z4 commit -m "Revisited commands and user help for interactive console mode of tol.exe" lang/language.cpp
cvs -d :ext:vdebuen@cvs.tol-project.org:/home/cvsroot/tolp -z4 commit -m "BGraConstant<Any> modifications of name, description or value are disabled \n BRenContens<Any>::New(const BText& name, BSyntaxObject* obj) method will call BCopyContens<Any>::New when obj were a System variable to avoid involuntary constant objects modifications \n BSyntaxObject::flags_.system_ is set to true for all BSyntaxObjects until TOLHasBeenInitialized() return true, when InitGrammars ends \n Class BRenamed is eliminated, BRenamedGen is renamed as BRefObject. In BTmpObject args_ member is now a BList* instead of a BSet and a short card_, and BSyntaxObject** array_ are used to accelerate accesses to arguments. \n New template classes has been inserted in *Contens* template hierarchy. A new template BGraContensBase<Any> without contens_ to save memory when is this member is not needed and allowing virtual access to it. A \n New template BGraContensFND<Any,Name_,Description_> usefull to returned objects by built-in functions saving memory in each instance. \n A new temlpate BCopyContens<Any> to use instead of BRenContens<Any> to low size types as Real, Complex, Date, Text, Polyn, Ration. This objects copy the contens of referenced object and try to destroy it. If isn't posible, destroying will be delayed to the live end of encapsulating object. \n BSerieGroup and BSerieTable use now a BArray<BUserTimeSerie*> instead of a BSet to store Series in order to avoid secondary effects of references over them. " lang\language.cpp
cvs -d :ext:vdebuen@cvs.tol-project.org:/home/cvsroot/tolp -z4 commit -m "Now the only one creator for BSerieGroup and BSerieTable has no arguments. Then you can add a Serie, a BList*, a BSet or another BSerieGroup or BSerieTable. After you can use BSerieGroup to prepare operations between series or test dating and date bounds of a collection of series or you can fill a BSerieTable with data from collected series. \n Access to BSet BTmpObject<Any>::Args().Card() must be replaced by NumArgs() \n Access to BSyntaxObject or inherited boolean members system_, released_, calculated_, and calculating_ must be changed to flags_.* or BSyntaxObject::Put* functions \n BSystem* objects that shouldn't be system constants are changed to BUser* to inherite from BGraContens<Any> instead of undeletable system class BGraConstant<Any> \n At BSet class BList* element_ is eliminated. \n When a list is needed a copy is available through ToList(). \n Access to BSet BTmpObject<Any>::Args() must be replaced by BList* ArgList() or DupArgList(). New class BGraContensFNDSet<BSet, Name_, Description_> inherited from BGraContensFND<Any,Name_,Description_> to allow special constructors of bulit-in functions returned sets. \n BSet constructor from BList* and operator= to BList* are eliminated to replace in this case by PutElement or RobElement. \n Allocation methods: DeleteBuffer() method is renamed as Delete(). ReallocBuffer is renamed as Realloc and protected and is added a new protected Alloc method and the only one public will be PrepareStore, in order to avoid invalid memory accesses. \n BSyntaxObject Mode constants are moved to tol_bsyntax.h" tol_bcommon.h
 