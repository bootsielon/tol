2008-03-03 Jorge <josp@tol-project.org>
	* bmath/gsl_ext/rcmnorm.cpp: DUMP_MATRIX("B = ", B);
	DUMP_VECTOR("b = ", b);
	* bmath/gsl_ext/test_rcmnorm.tol: using SubDiag, W does not need
	to be a column vector.
	* btol/matrix_type/matgra.cpp: in GibbsConstrainedMNormal & family
	diagonal matrices such as D or W can be given as a column vector,
	row vector or square matrix. If given as a square matrix only the
	diagonal elements are accessed. Bug
	http://bugs.tol-project.org/show_bug.cgi?id=561.
	* btol/matrix_type/tol_gslmat.h: overloaded bmat_to_gsl convert
	from matrix to vector provide a way to access first row, first
	column or diagonal.
	* btol/set_type/tol_bsetgra.h: Tcl_EvalEx accept a Set as a Tcl
	command.
	* btol/set_type/setgra.cpp: Tcl_EvalEx
	* stdlib/math/optim/LP/tolRglpk.R: removing print(Rglpk_args)
	
2007-06-02 Daniel Rus <danirus@tol-project.org>
	* btol/matrix_type/matgra.cpp: Fix bug 498

2007-06-01 Daniel Rus <danirus@tol-project.org>
	* btol/matrix_type/matgra.cpp: Fix bug 497
	
2007-05-03 Daniel Rus Morales <danirus@tol-project.org>
	* configure.in: new option --with-hashmap=<model>, where <model> may 
	be: msvc, google, gcc and icc.
	* common-build: adds --with-hasmap=google (recommended, needs 
	sparsehash deb package)
	* btol/bgrammar/Makefile.am: adds sources: tol_bnameblock.h and 
	nameblock.cpp
	* btol/bgrammar/ext.cpp: fix Tol dyn ext loader to the new API 
	provided by BSymbolTable.
	* tol/Makefile.am: comments header precompilation targets.
	
2007-03-26 Jorge <josp@tol-project.org>
	* config.jam: new rule to define version numbers for
	modules (API:MINOR:RELEASE)
	* Jamroot: using configure version : dbdrivers : 0 ;
	* btol/bdb/Jamfile: <define>DB_MODULES_SONAME=$(api_ver:E="0")	
	* dbdrivers/Jamfile: tag rule now include in the name the API
	version number.
	
2007-03-09 Daniel Rus Morales <danirus@tol-project.org>
	* configure.in:
	* Makefile.am:
	Change the name of Tol shared library to be able to keep several copies
	of different releases of Tol in the same host. The name used until now
	was: libtol.la, and from now on the new name is: libtol1.1.5.la, and 
	so on.
	
	* initLibrary/Makefile.am:
	* initLibrary/*/*.am:
	New steps for packaging the InitLibrary, centralized in its Makefile.am
	and several *.Mkf.am files distributed under each initLib directory.
	
2007-03-08 Jorge <josp@tol-project.org>
	* config.jam: changed semantic of 'enable' rule in order to deal
	better with build variants related to the differentes values an
	enabled feature can have. In this way we can have differents
	compilation corresponding to differents features values without
	need of recompilation. Now --with can deal with different names of
	the libraries. Enhanced rules documentation.
	
	* prj-config.jam.tpl : template configuration file. What is
	configured inside this file can be overwritten via command line
	options.

	* Jamroot :
	* dbdrivers/Jamfile:
	updated to new changes in config.jam
	
        * configure.in,Makefile.am : initLibrary==>stdlib

2007-03-06 Daniel Rus <danirus@tol-project.org>
	* dbdrivers/libtolmysql.c: the MYSQL_TYPE_NEWDECIMAL is only available
	for MYSQL_VERSION_ID numbers equal or greater than 50024. That means
	we can compile using different MySQL clients (under deb distros, 
	from libmysqlclient12 to libmysqlclient15).

2007-03-06 Daniel Rus <danirus@tol-project.org>
	* dbdrivers/libtolodbc.c:
	* dbdrivers/libtolmysql.c:
	* dbdrivers/libtolpgsql.c: no longer need to include tol/config.h.
	A long time ago that those files are independent from tol source 
	headers.

2007-03-05 Daniel Rus <danirus@tol-project.org>
	* dbdrivers/*: From now on the Tol Database Drivers project will have 
	an independent build process, altought integrated with the Tol cvs 
	module.

2007-02-27 Daniel Rus <danirus@tol-project.org>
	* dbdrivers/libtolodbc.c:
	* dbdrivers/libtolmysql.c:
	* dbdrivers/libtolpgsql.c:
	* btol/bdb/bdspool.cpp: 4 methods have changed to fix a non reported 
	bug: Tol should manage NULL numeric database values as Unknown.
	bdspool.cpp:DBGetReal must return a BDat::Unknown() value in cases 
	where a NULL value is returned from a Database.
	libtolodbc.c:odbc_GetAsReal, libtolmysql.c:mysql_GetAsReal, and 
	libtolpgsql.c:postgres_GetAsReal now return an int value of '2' in 
	case of a NULL value was red from the current result set.

2007-02-01 Jorge <josp@tol-project.org>
	* bbasic/dtealgeb.cpp: type missmatch between format specifier and
	argument to sscanf. Tanks to intel compiler for rising this kind
	of runtime bug as a warning at compile time. Check for "Unknown"
	instead of "Unknonw".
	
2007-01-25  Jorge <josp@tol-project.org>
	* set_type/setgra.cpp: fixing description of Tcl_Eval: 1 ==>
	success, 2 ==> fail

2007-01-22  Victor <vdebuen@tol-project.org>
  * OIS/oisapitol.cpp,
    OIS/oisloader.cpp,
    OIS/oisxml.cpp,
    OIS/tol_ois.h,
    OIS/tol_oisloader.h:
     New OIS version 02.02 compatible with 02.01
     Adding control_.typeSizes_ with information about type sizes in bytes that are 
     used in binary mode and could depend on compiler options, operative system or machine
     Eliminating info_ feature that is not working some months ago and is not needed
2007-01-15  Victor <vdebuen@tol-project.org>
  * OIS/ois.cpp,
    OIS/oisapitol.cpp,
    OIS/oiscompress.cpp,
    OIS/oisindex.cpp,
    OIS/oisloader.cpp,
    OIS/oisxml.cpp,
    OIS/tol_ois.h:
     New OIS version 02.01 with cross-platform compatibility (linux&windows) but without backward compatibility
  * win-VC8/tollib.vcproj,
    win-VC8/tolcon.vcproj,
    win-VC8/libtolmysql/libtolmysql.vcproj,
    win-VC8/libtolodbc/libtolodbc.vcproj,
    win-VC8/libtolpgsql/libtolpgsql.vcproj,
    toltcl/win-vc8/toltcl.vcproj:
     Structure page size is set to 4 to be compatible with GCC defaults    
  * btol/serie_type/tsrgra.cpp:
     Warning message for BSI deprecated
  * btol/matrix_type/matgra.cpp:
     Warning message for BBM deprecated
2007-01-12  Victor <vdebuen@tol-project.org>
  * OIS/oisstream_zip.cpp
     Eliminating assert in BZipStream::Flush()
  * bbasic/tol_memhandler.h
     Changing wrong preprocessor define for header controlling
  * bbasic/tol_bfsmem.h:
     gcc needs specify this-> to access methods in templates
  * bbasic/bfsmem.cpp:
     Eliminating useless assertions
  * Jamroot,
    init.cpp,
    OIS/ois.cpp,
    OIS/oisapitol.cpp,
    OIS/oiscompress.cpp,
    OIS/oiscreator.cpp,
    OIS/oisindex.cpp,
    OIS/oisinteractive.cpp,
    OIS/oisloader.cpp,
    OIS/oisxml.cpp,
    OIS/tol_ois.h,
    btol/bgrammar/graimp.cpp,
    btol/bgrammar/oprimp.cpp,
    btol/bgrammar/syn.cpp,
    btol/bgrammar/tol_bgenobj.h,
    btol/bgrammar/tol_bsyntax.h,
    btol/serie_type/tol_btsrgra.h,
    btol/set_type/setgrainc.cpp,
    btol/timeset_type/tol_btmsgra.h,
    lang/language.cpp,
    win-VC8/config.h:
     Eliminating  __USE_OIS__ due to OIS is now mandatory
  * win-VC8/config.h:
     Enabling BFSMEM pool
2007-01-11  Victor <vdebuen@tol-project.org>
  * btol/bgrammar/grastk.cpp:
     BFSMEM allows to ensure that an object is alive before to handle with it
2007-01-11  Victor <vdebuen@tol-project.org>
  * bbasic/tol_bcore.h: 
     New virtual method IsAssigned() if BFSMEM is defined
  * bbasic/bfsmem.cpp,
    bbasic/tol_bfsmem.h:
     These changes only affect if BFSMEM is defined
     Allowing IsAssigned method in release version
     Vectorial macroes are moved to BText methods.
  * btol/serie_type/tol_btmser.h
     These changes only affect if BFSMEM is defined
     New member BTimeSerie::incRefDating_ to ensure that dating_ has been modified by incrementing its number of reference
  * btol/serie_type/tsr.cpp:
     BFSMEM can avoid memory leaks related to local dating_ in circumstances like detected in bugs 224, 428, 444, 456
  * btol/timeset_type/tol_btmsgra.h:
     Using DeclareClassNewDelete in some classes (only affect if BFSMEM is defined)
     Setting some virtual methods in protected mode to be coherent with basic BTimeSet class
2007-01-11  Victor <vdebuen@tol-project.org>
  * bbasic/tol_btext.h,
    bbasic/txt.cpp,
    bbasic/txtalgeb.cpp:
     Vectorial memory methods are moved from tol_btext.h to txt.cpp
     Enhanced assertions
     Avoiding use of PutLength when unneeded
     Using memcpy instead of strcpy or strncpy
     Avoiding circular references in Copy and Concat methods
  * btol/bgrammar/spfuninst.cpp:
     Avoiding circular references in BText manipulations
  * bbasic/timer.cpp,
    btol/real_type/datgra.cpp:
     Cleaning abuse o macroes about CLOCKS_PER_SEC
2007-01-10  Victor <vdebuen@tol-project.org>
  * initLibrary/tol_tests/_testFunc.tol:
     In unix OS's, CPU's clock is counted for each process without considering 
     the time consumed by its own child process. So, time elapsed while a 
     Real System(...) call is not counted and we must to use the returned time 
     in metric->ElapsedSeconds
2007-01-09  Victor <vdebuen@tol-project.org>
  * btol/timeset_type/tms.cpp:
     Fixed bug in BTimeSet::CalcHashBetween due to linux compilers gcc and intel 
     seems not initialize static variables in mthod function
2007-01-02  Victor <vdebuen@tol-project.org>
  * OIS/oiscreator.cpp:
     Sends an error when cannot create an OIS image
     allSourcePath_.AddUniqueSorted must be called after object has been checked
  * bbasic/timer.cpp:
     Fixed a bug in BTimer::TimeToDate with invalid time values
  * bbasic/dir.cpp:
     Fixed bug in windows implementation of GetStandardAbsolutePath when path is an emty string.
2006-12-22  Victor <vdebuen@tol-project.org>
  * initLibrary/tol_tests/_testConfig.tol,
    initLibrary/tol_tests/_testFunc.tol:
     TestResultRoot and MyTOLSessionPath must be a function to not be stored in OIS
  * OIS/oisxml.cpp:
     Eliminating useness calls to GetStandardAbsolutePath  at line 170  and tolSources_.AllocBuffer(m) at line 446 
  * OIS/oisloader.cpp:
     Restoring lost else in  BOisLoader::CheckUpdatedSource
  * OIS/tol_oisloader.h:
     BTOLDependency::bytes_ must be BINT64
  * OIS/oiscreator.cpp:
     BOisCreator::Write uses GetStandardAbsolutePath(v->SourcePath()) to ensure path uniqueness
2006-12-21  Victor <vdebuen@tol-project.org>
  * bbasic/txt.cpp,
    bbasic/txtalgeb.cpp,
    bbasic/tol_btext.h:
     New methods AllocItems and FreeItems to isolate buffer_ access and to prepare for FSMEM debugging methods. 
     InitBuffer is now a class method in order to use them.
     BText::defectSize_  is set 16 to minimize reallocations
2006-12-20  Victor <vdebuen@tol-project.org>
  * bbasic/tol_bdir.h,
    bbasic/dir.cpp:
     New function RemoveLastSlash
  * OIS/ois.cpp:
     BOis::SetModulePath should  remove last slash in absPath and connection_ just if exists
  * OIS/oiscompress.cpp,
    OIS/oisloader.cpp,
    OIS/tol_oiscreator.h,
    OIS/tol_oisloader.h:
     Some detection of image corruption 
  * bbasic/bfsmem.cpp,
    bbasic/tol_bfsmem.h,
    bbasic/tol_memhandler.h:
     Allowing vectorial use of FSMEM
2006-12-19  Victor <vdebuen@tol-project.org>
  * btol/bgrammar/graacc.cpp:
     Allowing user to define functions returning Anything and call it anywhere
  * btol/bgrammar/graimp.cpp
     Fixed bug 148 in debug mode. Changing a very short and unusual char buffer[50] by usual BText concatenation to generate the error message.
  * btol/bgrammar/tol_bsyntax.h:
     Updating to new FSMEM API when enabled
  * btol/serie_type/tsr.cpp:
     Fixed bug 341 in debug mode.  Eliminated the assert(!dating_) in BTimeSerie::PutDating because dating_ could be not null in a PutValue expression
  * bbasic/tol_bfsmem.h:
     New method BPage::IsAssigned 
  * bbasic/bfsmem.cpp:
     New method BPage::IsAssigned using bit access
     New macroes for DEBUG configuration
2006-12-18  Victor <vdebuen@tol-project.org>
  * OIS/ois.cpp,
    OIS/oisloader.cpp,
    oisxml.cpp,
    OIS/tol_ois.h,
    OIS/tol_oisloader.h:
     Changing struct types by class ones with explicit default constructor and destroyer
  * bbasic/tol_bfsmem.h,
    bbasic/bfsmem.cpp:
     Using BPage** instead of BArray<BPage*>  to leave a more clean class because only reallocation feature of BArray was used.
  * btol/bgrammar/oprimp.cpp:
     Functions that returns Anything can returns no object without send any error message
  * btol/bgrammar/spfuninst.cpp:
     Enabling extended type messages in Write and WriteLn with an optional argument 
  * initLibrary/_general.tol
     New user functions Error and Warning .
2006-12-15  Victor <vdebuen@tol-project.org>
  * OIS/oisxml.cpp:
     Fixed a bug in linux due to  two BText's were passed as %s instead of calling explicitly to String()  method
  * btol/bdb/dbtol.cpp,
    win-VC8/tolcon.vcproj,
    win-VC8/config.h,
    win-VC8/win_tolinc.h:
     Cleaning definition of some configuration macroes
  * OIS/oisstream_zip.cpp,
     btol/matrix_type/multimin.cpp,
     File config.h must be included before use macroes
2006-12-14  Victor <vdebuen@tol-project.org>
  * tol/init.cpp,
    tol/tol_bcommon.h,
    bbasic/tol_bfsmem.h,
    bbasic/bfsmem.cpp,
    bbasic/tol_batom.h,
    bbasic/tol_bdate.h,
    bbasic/tol_bdir.h, 
    bbasic/tol_blist.h,
    bbasic/tol_bobject.h,
    bbasic/tol_bopt.h,
    bbasic/tol_bseed.h,
    bbasic/tol_list.h,
    bbasic/tol_tree.h,
    bparser/tol_btoken.h,
    btol/bgrammar/tol_bgencon.h,
    btol/bgrammar/tol_bgrastk.h,
    btol/bgrammar/tol_boper.h,
    btol/bgrammar/tol_bstruct.h,
    btol/bgrammar/tol_btxthash.h,
    btol/bmodel/aia.cpp,
    btol/bmodel/tol_baia.h,
    btol/code_type/tol_bcodgra.h,
    btol/complex_type/cmpgra.cpp,
    btol/real_type/datgralg.cpp,
    btol/serie_type/tol_btsrgra.h,
    btol/serie_type/tol_btsrgrai.h,
    btol/serie_type/tol_btsrgrav.h,
    btol/set_type/setgra.cpp,
    btol/set_type/tol_bsetgra.h,
    btol/timeset_type/tol_btmsgra.h,
    btol/timeset_type/tol_btmsgrav.h,
    win-VC8/config.h:
     Preparing for a New Optional Memory Handler that is still disabled.
  * OIS/oiscreator.cpp,
    OIS/oisloader.cpp,
    btol/timeset_type/tms.cpp,
    btol/timeset_type/tmsgra.cpp,
    btol/timeset_type/tmsgrav.cpp,
    btol/timeset_type/tol_btmset.h,
    btol/timeset_type/tol_btmsgra.h,
    btol/timeset_type/tol_btmsgrav.h,
     Enhanced TimeSet cache
  * btol/bgrammar/gra.cpp 
     using NDEBUG instead of _DEBUG
2006-12-12 Jorge  <josp@tol-project.org>
	* btol/Makefile.am: ctime related files are only processed if CTIME is set.
	* configure.in: AM_CONDITIONAL associated to --enable-TC
	* set_type/setgra.cpp,
	  set_type/setgrainc.cpp: ctime headers should only be included if __USE_TC__ is defined.
2006-12-11  Victor <vdebuen@tol-project.org>
  * OIS/oiscreator.cpp:
     Using CZipException to try ZipArchive operations and catch possible fails to close the archive and send a message to the end user.
2006-12-05  Victor <vdebuen@tol-project.org>
  * btol/real_type/datgrav.cpp,
    OIS/tol_oiscreator.h,
    OIS/oiscreator.cpp,
    OIS/oisloader.cpp:
     Fixed bug 222
  * btol/serie_type/tsrgrav.cpp: Fixed bug 457
  * bgrammar/spfuninst.cpp: Enhanced error message in function EvIf
2006-12-04  Victor <vdebuen@tol-project.org>
  * bmath/mathobjects/dat.cpp: Fixed reopened bug 19
2006-12-01  Victor <vdebuen@tol-project.org>
  * btol/timeset_type/tms.cpp,
    btol/timeset_type/tol_btmset.h,
    btol/timeset_type/tol_btmsgra.h,
    btol/timeset_type/tol_btmsgrav.h:
     First steps to get a best handling with aborted calculations in empty and bounded TimeSet's.
  * bgrammar/spfuninst.cpp:
     Enhanced error message in function EvElement
  * bparser/par.cpp:
     Fixed bug 232. Precedence of TYPE tokens is set to 9 instead of 4 to be upper than relational operators ==, !=, etc that have 8 order of precedence.
  * btol/bgrammar/oprimp.cpp: 
     Fixed bug 234. List of arguments must be replaced by its own Cdr() only if the token is a SEPARATOR
  * btol/set_type/setgra.cpp:
     Fixed bug 454. In BSetFor at line 1109 variable 'en' must be 'es' to avoid access to non initialized variable.
  * btol/text_type/txtgra.cpp:
     New built-in function GetDumpFile returning the default dump file path
  * btol/bgrammar/spfuninst.cpp:
     Fixing bug 442. The new behaviour acts in direct order and  reaking references 
     in each step by copying partial results instead of drive in reverse order and using 
     incremental references.
2006-11-30  Victor <vdebuen@tol-project.org>
  * bbasic/txtalgeb.cpp:
     BText::Copy methods must do PutLength(0) when copied string is empty.
  * btol/serie_type/srg.cpp:
     Fixed bug 450. 
     Function ReadBDTFile cell methods has been rewritten using direct character scaning instead of sscanf.
     Better format error reporting
2006-11-29  Victor <vdebuen@tol-project.org>
  * bmath/blinalg/mfastpro.cpp,
    btol/matrix_type/matgra.cpp,
    btol/matrix_type/tol_diagmat.hpp,
    btol/matrix_type/tol_ltrimat.hpp,
    btol/matrix_type/tol_mat.hpp,
    btol/matrix_type/tol_matopr.hpp,
    btol/matrix_type/tol_symmat.hpp,
    btol/matrix_type/tol_utrimat.hpp:
     Fixing bug 445. When a forbidden matrix operation is detected the Unknown Matrix 0x0 will be returned
  * btol/bmodel/aia.cpp:
     Fixed bug 451
  * bbasic/dir.cpp,
    bbasic/tol_bdir.h:
     Time fields are now of type time_t instead of int or BInt
     New functions SetFileTime and ReplaceSlash
  * bbasic/timer.cpp,
    bbasic/tol_btimer.h:  
     New function BTimer::DateToTime
  * bbasic/txtalgeb.cpp,
    bbasic/tol_btext.h:  
     Enhancement of BText::BeginWith and BText::EndAt
  * OIS/tol_oisloader.h:  
     CheckUpdateSource renamed as CheckUpdatedSource
  * OIS/oisloader.cpp:  
     Moving BOisLoader::CheckUpdateSource from oiscompress.cpp 
     Checking tasks written in BOisLoader::XMLReadHeader() are moved to BOisLoader::CheckUpdatedSource 
  * OIS/oiscreator.cpp:
     Moving BOisCreator::WriteSource from oiscompress.cpp
     Fix error in RemoveSource that can cause duplication of files into a .oza
  * OIS/oisxml.cpp:
     Checking tasks written in BOisLoader::XMLReadHeader() are moved to BOisLoader::CheckUpdatedSource 
  * OIS/ois.cpp:
     Fix error in RemoveImage that can cause duplication of files into a .oza
  * OIS/oiscompress.cpp:
     Moving BOisCreator::WriteSource and BOisLoader::CheckUpdateSource to oiscreator.cpp and oisloader.cpp files
  * OIS/tol_oisstream.h:
     Field BDate BStream::time_ is now handled as time_t     
     New member function PutTime and field index_
  * OIS/tol_oisstream_dir.h:
     New member function PutTime
  * OIS/tol_oisstream_zip.h:
     New member function PutTime
  * OIS/oisstream.cpp:   
     Initializes new member field index_ to -1
  * OIS/oisstream_dir.cpp   
     Field BDate BStream::time_ is now handled as time_t     
     Defining instance of new member function PutTime
  * OIS/oisstream_zip.cpp   
     Field BDate BStream::time_ is now handled as time_t     
     Defining instance of new member function PutTime (DOESN'T WORK YET ALTHOUGH ISN'T NEEDED)
  * initLibrary/tol_tests/_testFunc.tol
     If exists a global Text DupTestIndicatorPath then copies there the log of failed tests
     
2006-11-28  Victor <vdebuen@tol-project.org>
  * bbasic/dir.cpp,
    bbasic/tol_bdir.h:
     New functions GetStandardAbsolutePath and IsSlash
  * bbasic/sys.cpp:
     MkDir must remove ending slashes 
  * btol/set_type/setgrainc.cpp:
     Including file timing shows three decimals of second.
  * btol/text_type/txtgra.cpp:
     Text I2(Text eng, Text spa) becomes built-in function
  * OIS/*: New OIS version 01.09  with next features:
    -Multi-image ZipArchive
    -Including source in modules to skip unsignificant changes
    -Built-in module managing functions: Ois.UseModule, Ois.GetModulePath, Ois.RemoveModule, Ois.GetModuleTime;
    -Enhancement of BStream classes, disabling heavy messages and creating new methods: HasFile, Time, Remove
    -Ensuring Close methods calling of BOis and BStream classes
    -Archive macro-compression with ZipArchive and serialization micro-compression with BZIP2 are both enable or disable by user
  * initLibrary/_inittol.tol,
    initLibrary/_lib.tol:
     Integrates all tol files in just one to get a best OIS performance
  * initLibrary/oisfun/_ois.tol:
     Removing useness and obsolete functions and structures
  * initLibrary/oisfun/_ois_compat.tol:
     Removing Text I2(Text eng, Text spa) that becomes built-in function
  * initLibrary/tol_tests/_testFunc.tol
     Ensuring reproducibility of random seeds   
2006-11-23  Victor <vdebuen@tol-project.org>
  * bbasic/dir.cpp:
     Both slashes '/' and '\\' are treated as equal in GetAbsolutePath to avoid spureous multiple slashes generation.
  * btol/bgrammar/tol_bsyntax.h: 
     New member function BSyntax::PutConstant() to allow create system variables that could change due to different causes but user cannot directly modify them with := nor PutValue.
  * btol/set_type/setgrainc.cpp,
    OIS/*
     Data media ZIP using ZipArchive is current default archive engine for OIS modules.
     Compressed OIS images with extension .oza will be used as default instead of plain directories.
     User can view and change the default archive engine with Text Ois.DefaultArchiveEngine and Text Ois.PutDefaultArchiveEngine(Text archiveEngine).
     Static data stores will no save TOLDependencies nor TOLEnvironment sections in header.xml that are reserved for modules
     New built-in functions Ois.ModuleTime
  * initLibrary/tol_tests/_testFunc.tol
     A final report will be genarated in a file called OK.text if success, WARNING.txt if global average quality is not enougth good or FAIL.txt if global minimum quality is too low.
2006-11-20  Victor <vdebuen@tol-project.org>
  * OIS/oisstream.cpp,
    OIS/oisstream_dir.cpp,
    OIS/oisstream_zip.cpp,
    OIS/tol_oisstream.h,
    OIS/tol_oisstream_dir.h,
    OIS/tol_oisstream_zip.h,
    win-VC8/tollib.vcproj,
    win-VC8/win_tolinc.h:
     New data media ZIP using ZipArchive
  * btol/set_type/setgrainc.cpp:
     Different sizes of max line size in GetLine calls are replaced by MaxLineLength that is defined as 16384
  * bmath/mathobjects/dat.cpp
     Sorry, fixed a stupid bug in functions BDat::And, BDat::Or
2006-11-20  Victor <vdebuen@tol-project.org>
  * OIS/ois.cpp,
    OIS/oisapitol.cpp,
    OIS/oiscompress.cpp,
    OIS/oiscreator.cpp,
    OIS/oisindex.cpp,
    OIS/oisloader.cpp,
    OIS/oisxml.cpp,
    OIS/tol_ois.h,
    OIS/tol_oiscreator.h,
    OIS/tol_oisloader.h,
    OIS/oisstream.cpp,
    OIS/tol_oisstream.h,
    tol/win-VC8/win_tolinc.h,
    win-VC8/tollib.vcproj:
     BStream is now out of BOis, in new files tol_oisstream.h and oisstream.cpp, and is 
     a pure virtual  class to encapsulates all methods to access data from  different 
     media  as files, ZIP's, data bases, etc.
     New class BStreamHandler provides connection and disconnection methods to generic media.
     Standard file media  behaviour is inherited in BFileStream and BFileStreamHandler.
     Old BOis::BStream members of BOis are now BStream*  to handle with polymorphic behaviours.
  
2006-11-17  Victor <vdebuen@tol-project.org>
  * btol/real_type/tol_bdatgra.h,
    btol/real_type/datgralg.cpp:
     Rewriting boolean algebra built-in functions And,&,Or,|, Eq,NE,LE,GE,LT,GT to allow short-circuit calculations and handle with unknowns.
  * bmodel/modcalc.cpp:
     Ensuring degree structure of ARMA polynomials that could be corrupted when a coefficient becomes 0
  * bbasic/txtalgeb.cpp:
     Fixed bug in BText::Reverse() with empty strings
  * btol/bgrammar/spfuninst.cpp:
     When condition of If is unknown no branch (then nor else ones) will be evaluated
     When a condition of Case is unknown its branch will be not evaluated

2006-12-02  Jorge <josp@tol-project.org>
	* btol/matrix_type/matgra.cpp: fixing bug 448.
	
2006-11-16  Victor <vdebuen@tol-project.org>
  * OIS/tol_ois.h,
    OIS/oisxml.cpp,
    OIS/oisloader.cpp,
    OIS/ois.cpp:
     Fixing a bug in BOis::BStream::bytes_ calculation in write-mode
  * OIS/ois.cpp,
    OIS/oiscompress.cpp,
    OIS/oiscreator.cpp,
    OIS/oisindex.cpp,
    OIS/oisloader.cpp,
    OIS/oisxml.cpp,
    OIS/tol_ois.h,
    OIS/tol_oiscreator.h,
    OIS/tol_oisloader.h:
     Hiding BOis::BFile fields offset_, entries_, title_, name_ and new field bytes_ and 
     methods Bytes,Offset,Entries,Title,Name,PutEntries,IncEntries
  * bbasic/tol_btext.h,
    bbasic/txt.cpp,
    bbasic/txtalgeb.cpp:
     New methods to handle with BINT64 numbers in BText
  * OIS/ois.cpp,
    OIS/oiscompress.cpp,
    OIS/oiscreator.cpp,
    OIS/oisloader.cpp,
    OIS/oisxml.cpp,
    OIS/tol_ois.h,
    OIS/tol_oiscreator.h,
    OIS/tol_oisloader.h:
     Hiding BOis::BFile::file_ by creating all needed methods SetToNull,Close,Eof,GetChar,Write,Read,Print
     
2006-11-15  Victor <vdebuen@tol-project.org>
  * btol/text_type/txtgra.cpp,
    tol/init.cpp,
    tol/tol_init.h:
     New functions TOLSessionPath and TOLVersion
     Built-in variable Text Version has been moved to init.cpp 
  * OIS/oisloader.cpp:
     Replacing some memcpy of just one char by an standard assignation
  * bbasic/out.cpp
     Standard TOL log file start .log is moved to TOLAppDataPath/syslog
  * btol/bgrammar/spfuninst.cpp:
     If  _EXTENDED_MESSAGES_ is Defined, then  Write and WriteLn admits a 
     second optional arguemnt to specify the type of message. When some 
     tests will be passed conditional compilation will be eliminated     
     
2006-11-15  Jorge <josp@tol-project.org>
	* btol/serie_type/tol_btsrgra.h: base class take care of dating_
	release if needed.
	
2006-11-14  Victor <vdebuen@tol-project.org>
  * btol/serie_type/tol_btmser.h: A patch to minimize problems with
	the referencial integrity of the dating of a time serie. Just
	local datings will be over-referenced and no one will be
	de-referenced at destruction. Related to bug 444 (would it be 666
	istead?).
	
2006-11-13  Victor <vdebuen@tol-project.org>
  * btol/serie_type/tsr.cpp:
     A patch to minimize problems with the referencial integrity of the dating of a time serie. 
     Just local datings will be over-referenced  and no one will be de-referenced at destruction.
2006-11-13  Victor <vdebuen@tol-project.org>
  * win-VC8/tollib.vcproj,
    win-VC8/tolcon.vcproj:
     Replacing explicit use of release and debug words by reserved words 
  * tol/bbasic/dir.cpp:
     Avoiding non dangerous invalid memory access in BDir::CheckIsDir
  * bbasic/tol_bsys.h,
    bbasic/sys.cpp:
     New static BSys::TolAppData() that returns the standard system directory to store application data as log's, OIS images, tests results, ...
     New BSys::RmDir and new optional argument in MkDir(const BText& dir, bool force=false) to force building all needed sub-directories
  * OIS/ois.cpp,
    OIS/oisapitol.cpp,
    OIS/oiscreator.cpp,
    OIS/oisloader.cpp,
    OIS/oisapitol.cpp,
    OIS/oisxml.cpp,
    OIS/tol_ois.h: 
     Loading and creating messages of OIS modules are handled in OIS classes
     Using BSys::TolAppData() for log's and OIS images default root path.
     New funcions BOis::GetModulePath and built-in Ois.GetModulePath to handle with OIS images of modules created with Ois.UseModule
     Ois.UseModule is moved from setgrainc.cpp to oisapitol.cpp
     Error when creating a OIS module from a .tol file with errors. The OIS image don't will be created.
     Error when creating an empty OIS message
  * initLibrary/oisfun/_ois.tol:
     Using new built function Ois.GetModulePath to handle with OIS images of modules created with Ois.UseModule
     Loading and creating messages of OIS modules are handled in OIS classes and old WriteLn have been eliminated
     OIS module name is stored in doc->Name instead of using ToName(Ois.GetAddress("",address));
  * initLibrary/oisfun/_ois_compat.tol:   
     All messages of OIS are handled in OIS classes and old WriteLn have been eliminated 
  * btol/bgrammar/syn.cpp
     Using BSys::TolAppData() for log's    
  * btol/set_type/tol_bsetgra.h,
    btol/set_type/setgrainc.cpp:
     BSourcePath methods Mode and Find are moved from header to setgrainc.cpp
     Ois.UseModule is moved from setgrainc.cpp to oisapitol.cpp
  * btol/text_type/txtgra.cpp:
     New built-in variable TolAppDataPath that returns the standard system directory to store application data
  * initLibrary/tol_tests/_testConfig.tol
     Using TolAppDataPath to define TestResultRoot
  * initLibrary/tol_tests/_testFunc.tol
     Using TestResultRoot instead of relative ".result"
  * btol/real_type/datgrav.cpp
     MkDir forces building all needed sub-directories

2006-11-13  Jorge <josp@bayesinf.com>
	* win-VC8/.vcproj.sln: only WINODWS! new configuration Debug_DUMA
	in order to link with dumalib: http://duma.sourceforge.net/. Needs
	the environment variable DUMA_LIB:

	    $(DUMA_LIB)  location where to find compilations of dumalib.lib
	        |
	        \___ debug: dumalib.lib
	               
2006-11-12  Jorge <josp@bayesinf.com>
	* bgrammar/gra.cpp: BGrammar::instances_ is not correctly
	initialized, an auxiliary static global variable is used to
	control its initialization. This is a temporary solution until a
	better solution be implemented for all statics intialization.
	
2006-11-10  Jorge <josp@bayesinf.com>
	* bbasic/txtalgeb.cpp: Reverse made inline.
	
	* bbasic/tol_btext.h: 324: error: extra qualification 'BText::' on
	member 'BeginWith', 337: error: extra qualification 'BText::' on
	member 'EndAt', ARM-style name-injection of friend declaration not
	ANSI/C++ standard.

	* bbasic/tol_bopt.h: error: extra qualification 'BOpt::' on member
	'PutOption'.

	* bgrammar/tol_bgrammar.h: 209 error: extra qualification
	'BGrammar::' on member 'HashVar'

	* bmodel/tol_bmodel.h: 215: error: extra qualification 'BModel::'
	on member 'BModel'

	* contrib/kmlocal/KCtree.h: 86: error: extra qualification
	'KCtree::' on member 'buildKcTree'
	
	* bbasic/tol_bdate.h:
	* bdb/tol_bdb.h:
	* bgrammar/tol_bstruct.h:
	* bbasic/tol_bout.h:
	* bparser/tol_bparser.h: ARM-style name-injection of friend
	declaration not ANSI/C++ standard.
	
2006-11-08  Cesar <cperez@bayesinf.com>
	* initLibrary/_model.tol: Fixed bugs in CalcForecasting and
	SolveDifEq

2006-11-07  Victor <vdebuen@tol-project.org>
  * btol/timeset_type/tol_btmset.h,
    btol/timeset_type/tol_btmsgra.h:
     All methods of BTimeSet that could access to member should be virtual
  * btol/bmodel/modcalc.cpp:
     When a step gives worst result than previous iteration estimation of missing values must remains unchanged.
  * btol/bgrammar/tol_bsyntax.h,
    btol/bgrammar/tol_bgencon.h:
     New BSyntax::flags_.isConst_ method BSyntax::IsConstant() to avoid change protected system variables 
  * btol/bgrammar/syn.cpp:
     New BSyntax::flags_.isConst_ method BSyntax::IsConstant() to avoid change protected system variables
     Method BSyntaxObject::Identify() must try global name before local one
  * btol/serie_type/tsr.cpp,
    btol/serie_type/tol_btmser.h
     Fixed bug 444. Member dating_ increases a reference until the time series will be destroyed.
     New BTimeSerie::firstCache_ and related methods FirstCache and PutFirstCache to allow infinite time series to ensure default dates are congruent with its cached data
  * OIS/oisloader.cpp:
     New BTimeSerie::firstCache_ and related methods FirstCache and PutFirstCache to allow infinite time series to ensure default dates are congruent with its cached data
  * OIS/oisxml.cpp:
     New method BSyntax::IsConstant() to avoid change protected system variables
  * OIS/oisapitol.cpp,
    initLibrary/oisfun/_ois.tol,
    initLibrary/_inittol.tol:
     New buil-in Set Ois.DefDoc to store default information fields for auto-generated OIS images
  * OIS/oisindex.cpp:
     Solving problems in partial loading of OIS images
  * btol/real_type/datgra.cpp,
    lang/tol_blanguag.h,
    lang/language.cpp,
    tol/init.cpp:
     New function AliveObjects() to count current non dead objects
  * initLibrary/_inittol.tol:
     If OIS is not implemented it should use Include instead of Ois.UseModule
  * initLibrary/oisfun/_ois.tol,
    OIS/ois.cpp,
    OIS/oisapitol.cpp,
    OIS/tol_ois.h:
     Variable Text Ois.DefRoot and functions Text Ois.AutoPath(Text path) are now built-in
  * bbasic/dir.cpp:
     GetAbsolutePath lost last slashes
  * btol/set_type/setgrainc.cpp:
     In BSetFromFile::Open(), isOpen must be initialized to false to ensure file is open
     Built-in function Ois.UseModule must be enabled just if __USE_OIS__ is defined
2006-11-06  Jorge <josp@tol-project.org>
	* configure.in: initLibrary/tol_tests/Makefile
	* Makefile.am: -R$(CHOLMOD_LIB_DIR)
	* initLibrary/Makefile.am: tol_tests
	* initLibrary/tol_tests/Makefile.am: new file.
2006-11-06  Victor <vdebuen@tol-project.org>
	* initLibrary/oisfun/_ois.tol New functions Text Ois.AutoPath(Text
	path) and Real Ois.Store(Set data, Text path_) to handle alias
	"ois:/" that will be replaced in paths by Text Ois.DefRoot	
	* btol/set_type/setgrainc.cpp: Now, Include is able to load OIS
	images and a new built-in function Ois.UseModule avoids to call
	IncludeText to handle with OIS modules.
2006-11-02  Victor <vdebuen@tol-project.org>
  * OIS/oisxml.cpp:
     In function BOisLoader::XMLReadHeader it shouldn't modify system values
2006-11-02  Jorge <josp@tol-project.org>
	* configure.in,Makefile.am: --with-cholmod
	* tol_bcommon.h: changing to the future 1.1.5 release
	* OIS/oiscreator.cpp:
	* OIS/oisindex.cpp:	
	* OIS/oisxml.cpp: "%I64d" is not valid format type for C standard,
	it is microsoft specific. But from MSVC release 1400 "%lld" is
	valid, in fact "long long" is also valid. It is advisable to
	compile with -Wall when compiling with gcc. With -Wall option a
	warning is issued when using "%I64d" with long long variable which
	in fact should be considered an error.
	* bmath/bfunct/tol_bfunct.h: should be virtual.
	* btol/bmodel/Makefile.am: GBLA not needed.
	* lang/Makefile.am: GBLA not needed.
	* btol/serie_type/tol_btmser.h: ~BTimeSerie should be virtual.
2006-10-31  Victor <vdebuen@tol-project.org>
  * OIS/tol_oisloader.h,
    OIS/tol_ois.h:
     Comparisson functions should use adequate types
  * btol/bgrammar/str.cpp
     Fixed a bug in BStruct::BStruct when an address of a deleted BStruct is reused
2006-10-30  Victor <vdebuen@tol-project.org>
  * tol_bcommon.h,
    btol/bgrammar/tol_bsyntax.h,
    OIS/ois.cpp,
    OIS/oiscompress.cpp,
    OIS/oiscreator.cpp,
    OIS/oisindex.cpp,
    OIS/oisloader.cpp,
    OIS/tol_ois.h,
    OIS/tol_oiscreator.h,
    OIS/tol_oisloader.h:
     INT64  is replaced by BINT64 due to INT64 is already defined in windows
  * tol/initLibrary/oisfun/_ois.tol,
    tol/initLibrary/oisfun/_ois_compat.tol:
      New files to handle with TOL functions and structures of OIS API saving backward compatibility with TOL versions that don't have OIS
  * tol/initLibrary/oisfun/_ois_compat.tol,
    tol/initLibrary/_general.tol:
      Function Text I2(Text english, Text castellano) moved from _general.tol to oisfun/_ois_compat.tol
  * tol/initLibrary/_inittol.tol:
     Using Ois.AutoGen instead of Include to handle with automated OIS packages to convert InitLibrary in a Precompilated OIS Library
  * tol/win-VC8/tollib.vcproj,
    toltcl/win-vc8/toltcl.vcproj:
     OIS has been enabled in VC8
  * btol/bgrammar/graimp.cpp:
     TknCleanLocalObjectRef is now public as static BGrammar::CleanTreeCache
     Improvement of TknFind* functions
     Standard traces available in debug mode
     PutEms is called just if is defined  DO_PUT_EMS
  * btol/bgrammar/tol_bgrammar.h:
     New public static method BGrammar::CleanTreeCache
  * btol/bgrammar/oprimp.cpp:
     TknCleanLocalObjectRef is now public as static BGrammar::CleanTreeCache
  * lang/language.cpp
     Calling TknFindReport at the end of TOL session in console interactive mode for debuging
  * btol/real_type/datgra.cpp:
     If defined  BDAT_UNKNOWN_CONVERSION, there is a new built-in function called PutUnknownConversion  that allows user to specify the set  the conversion from BDat to double with value zero or NAN
  * btol/timeset_type/tms.cpp:
     Enhancement of error messages in BTimeSet::TestError
  * btol/timeset_type/tol_btmsgrav.h:
     New members in class BTmsAbortable:  static BDat GetMaxIter  and  static BDat GetOutOfRange
  * btol/timeset_type/tmsgrav.cpp:
     New exact but slow versions of inline BDate SuccSuccessor and inline BDate SuccPredecessor are added but commented to remind this problem
2006-10-26  Victor <vdebuen@tol-project.org>
  * bbasic/sys.cpp
     In WinSystem redirecting  of system errors must be used just when order begin with "cmd  "
  * tol/init.cpp:
     TOLSessionPath must refer to full executable path including file name (tol, tol.exe, tolcon, tolbase.exe,...)
2006-10-25  Jorge <josp@tol-project.org>
	* bbasic: new files unix_findexe.c and win_findexe.c to compute
	the global path of the main process.
2006-10-25  Victor <vdebuen@tol-project.org>
  * btol/bgrammar/str.cpp:
     In BStruct::BStruct the first thing to do is to insert the pointer in  statusTable_
  * btol/text_type/txtgra.cpp,
    tol/init.cpp:
      Built-in object Text TOLSessionPath moved from txtgra.cpp to init.cpp
  * lang/language.cpp,
    lang/tol_blanguag.h,
    tol/tol.cpp,
    tol/init.cpp,
    tol/tol_init.h:
      Reorganization of TOL initialization functions
2006-10-24  Victor <vdebuen@tol-project.org>
  * btol/real_type/datgrav.cpp:
     Fixed bug 112
  * btol/bgrammar/tol_bgentmp.h:
     Solving bug 441.   BTmpObject<Any>::card_ and  NumArgs must be int instead of short
  * btol/bmodel/estim.cpp:
     Enhancement of Logit description
  * lang/language.cpp:
     Avoiding secondary executions of DoInitTOL
  * btol/bgrammar/graacc.cpp,
    btol/text_type/txtgra.cpp:
     Solving bug 346
  * btol/bgrammar/str.cpp,
    btol/bgrammar/tol_bstruct.h: 
     Added a new  argument bool showError to function BStruct::Alive to enable/disable error on invalid access to structures
  * btol/set_type/set.cpp,
    btol/set_type/tol_bset.h:
     Added a new  optional argument bool showError to function BSet::Struct to enable/disable error on invalid access to structures
     Only BSet::Field member functions will enable it
  * btol/text_type/txtgra.cpp
     Built-in function StructName enables error on invalid access to structures
  * btol/text_type/txtgra.cpp
     Built-in function StructName enables error on invalid access to structures
  * bparser/par.cpp
     BParser* BParser::DefaultParser() must call  to InitDefaultParser();
2006-10-23  Victor <vdebuen@tol-project.org>
  * btol/text_type/txtgra.cpp:
     New TOL buil-in variable Text TOLSessionPath to store the path of the TOL program that is being executed in this session.
  * tol/init.cpp:
     Setting value of TOLSessionPath
  * bmath/bprdist/prd.cpp
     Variable seed_time must be scaled by 10000 before be truncated to integer to allow two different seeds in the same second.
  * bgrammar/tol_bstruct.h,
    btol/bgrammar/str.cpp,
    btol/set_type/tol_bset.h,
    btol/set_type/set.cpp:
     Fixed bug 439
  * btol/bgrammar/spfuninst.cpp: 
     Fixed bug 419
  * tol/init.cpp
     In function Initialize at line 927 InitGrammars() must be called when dialogMode (-d) is active
2006-10-20  Victor <vdebuen@tol-project.org>
  * btol/bgrammar/syn.cpp:
     Macro TRACE_MEMORY is enabled just for degug mode
  * btol/bgrammar/str.cpp:
     Fixed bug of assertion in BStruct::~BStruct  that must apply just to non System objects
  * btol/bgrammar/opr.cpp
     Function void BOperator::AddSystemOperator() can be used with non system function and PutSystem(true) is not right and also is unneeded due to system objects are now detected by its own builder. 
     Fixed bug 437. Misteriously system objects were skiped in MultyEvaluate function 
  * bbasic/txt.cpp,
    btol/serie_type/tsrgra.cpp:
      Disabling TRACE_LEVEL macroes     
2006-10-19  Victor <vdebuen@tol-project.org>
  * bbasic/txt.cpp   
     Ensuring non negative length of text length at BText::BinRead function to avoid invalid access reading corrupted files
  * btol/serie_type/tsrgra.cpp
     Avoiding some reading fails of corrupted BSI files  
2006-10-18  Victor <vdebuen@tol-project.org>
  * btol/serie_type/tsr.cpp:
     Control empty data buffer
  * btol/serie_type/tsrgrav.cpp:
     Fixed reopened bug 418
2006-10-17  Jorge <vdebuen@tol-project.org>
  * btol/set_type/Makefile.am: adding setgrainc.cpp
2006-10-16  Victor <vdebuen@tol-project.org>
  * btol/matrix_type/tol_symmat.hpp:
     Ensuring non empty matrices in Choleski function
  * btol/bgrammar/graimp.cpp,
    btol/bgrammar/oprimp.cpp,
    tol/tol_bcommon.h: 
     New macroes TRACE_LEVEL and TRACE_SHOW* to filter some debuging traces and show the rest ones
  * btol/bgrammar/syn.cpp:
     Tracing SourcePath related functions calling
  * btol/set_type/setgra.cpp,
    btol/set_type/setgrainc.cpp,
    tol/win/tollib.dsp,
    tol/win-VC8/tollib.vcproj:
     File setgra.cpp was too long and so has been divided in two files: the own setgra.cpp and a new setgrainc.cpp with all classes related to Include TOL function (BSetFromFile, BSourcePath, ...)
  * btol/set_type/setgra.cpp,
    btol/set_type/tol_bsetgra.h
     BSourcePath behaviour has been simplifyied and ensured to avoid some integrity problems. BSourcePath works as an alias for a BSetFormFile object and never will be deleted.
  * btol/serie_type/tol_btmser.h,
    btol/serie_type/tsrgra.cpp,
    btol/set_type/setgrainc.cpp:
     Fixed bug 434. BDT series is no more lazy, so file_, File() and PutFile() members has been eliminated
  * btol/bgrammar/tol_bgenobj.h:
     Ensuring non null pointers even when it must be non null by construction.
  * OIS/oiscreator.cpp: 
     system order to make directories are now in silent mode
2006-10-11  Victor <vdebuen@tol-project.org>
  * btol/bgrammar/gra.cpp
     unparseNodes_ is set to verbose mode in DEBUG version
  * btol/bgrammar/syn.cpp
     There is a lapsus in BSyntaxObject::Source that must be reverted
  * tol/init.cpp:
     Set objects must use BRenContens<BSet>::New instead of BCopyContens<BSet>::New because they could have virtual information as compiled items lists and others, that will be lost in a Copy.
2006-10-10  Victor <vdebuen@tol-project.org>
  * btol/real_type/datgrast.cpp:
     Fixed Bug 251. Now there are two new functions: SetQuantile and MatQuantile
  * bparser/fil.cpp:
     Fixed bug 207. A new variable BBool bs is created to store the current status 'bacslashed'. The initial status is false. When a backslash is found bs is switched, else if bs is true then is set to false.
  * btol/set_type/setgra.cpp:
     Fixed bug 397. When a non allowed extensions is passed to Include functions an error will be sent to the user.
     Mode std::ios::in used iin VC6 creates a new file if not exists. So, CheckIsFile must be called before to attempt to open it.
  * btol/timeset_type/tol_btmsgra.h:
     Fixed bug 196. When invalid arguments are passed to TimeSet built-in basic functions WD,M,D,H,Mi,S, then a warning will be sent and the empty TimeSet will be returned.
  * bmath/bprdist/tol_bprdist.h,
    bgsl/tolgsl_usrapi_real_build.tol,
    btol/bgsl/tolgsl_usrapi_real.cpp:
     Using BProbDist::rng() instead of BProbDist::DefaulGslRandomGenerator that must be eliminated
    bmath/mathobjects:
     Fixed bug 425. In void BComplex::PutReal(BDat x) M_PI_2 must be replaced by M_PI
  * tol/init.cpp:
     Method New for Matrix and Set types is changed from reference to copy mode.
  * bbasic/tol_batom.h,
    bbasic/atm.cpp: 
     BAtom::IncNRefs() and BAtom::DecNRefs() become virtual to allow specialization tracing in BSyntaxObject
  * bbasic/txt.cpp:
     BText::Last(BInt index) avoids access out of bounds
  * btol/bgrammar/graimp.cpp
     Fixing bug 432. In binary operators evaluation is made a previous evaluation of first argument to get its type. This object must be deleted before to make the true binary evaluation to avoid excesive references.
  * btol/bgrammar/syn.cpp,
    btol/bgrammar/tol_bsyntax.h:
     Fixing bug 432. SourcePath and GetSourcePath methods must ensure that sourcePath_ is alive
     BAtom::IncNRefs() and BAtom::DecNRefs() become virtual to allow specialization tracing in BSyntaxObject
     Optional TRACE_MEMORY methods to build a historic data base TRACE_MEMORY.log with all events for ecah object about its creation, destruction, reference incrementation and decrementation, ...
     File TRACE_MEMORY.log must be created just if needed, when EnableTraceMemory is set to true and at least a event happens 
  * btol/bgrammar/tol_bgentmp.h,
    btol/bgrammar/tol_bgencon.h:
     Optional TRACE_MEMORY events for ecah template building and destroying method
  * btol/bgrammar/spfunist
     Fixing bug 432. In EvalIf function, condition object must be deleted before to build 'then' or 'else' clauses to avoid posible excesive references.
  * btol/real_type/datgra.cpp:
     New object Real EnableTraceMemory that Enables/Disables debuging memory traces 
  * btol/set_type/setgra.cpp,
    btol/set_type/tol_bsetgra.h:
     Fixing bug 432. BSourcePath objects are stored in a static ordered array that includes also a flag to control if object is already alive.  
2006-10-05  Victor <vdebuen@tol-project.org>
  * btol/bgsl/tolgsl_usrapi_real.cpp,
    btol/bgsl/tolgsl_api_real_def.tol,
    btol/bgsl/tolgsl_api_real_build.tol,
    win/tollib.dsp:
     New package of TOL built-in functions to allow TOL users to work with GSL functions which both returning and arguments are all of numeric type.
     The C++ code has been automatically generated with TOL.  Please don't edit it. Any change should be made in TOL files.
     There are 387 new functions in this TOL user's API about these GSL chapters 
      -Special Functions
      -Random Number Distributions   
  * btol/bgsl/tolgsl_usrapi_real.xml:
     Data base of GSL functions contained in the new package of TOL built-in functions tolgsl_usrapi_real.cpp
     The format of this file is <?mso-application progid="Excel.Sheet"?> and can be edited with Excel 2003 or OpenOffice 
  * bmath/bprdist/tol_bprdist.h:
     New static gsl_rng * BProbDist::DefaulGslRandomGenerator()  to use in  btol/bgsl/tolgsl_usrapi_real.cpp    
  * btol/bgrammar/boper.h,
    btol/bgrammar/opr.cpp:
     New static BOperClassify* BOperClassify::RealArythmetic_GSL_ to reference GSL real methods
2006-10-03  Victor <vdebuen@tol-project.org>
  * btol/bdb/dbtol.cpp: New static double dbTotalCPUClock_ to store cumulative CPU clock used in all database accessing methods
  * btol/real_type/datgra.cpp: New built-in read only object Real DBTotalCPUTime (Total cumulative CPU time used in all database accesses)
  * btol/set_type/setgra.cpp: 
     Enhancement of error message in BSetEvalSet::CalcContens()
	* btol/serie_type/tsrgrai.cpp
	   New built-in TOL function Serie EvalSerie(Serie S, Code realToRealFunction)
       Returns a time serie with the same dating and dates of given one 
       applying a real to real function to each datum
	  BOperClassify::TimeSeriesAlgebra_);
	* btol/real_type/datgrapr.cpp
	   BDat type must be used instead of double to handle with unknown numbers.
  * bmath/bprdist/prd.cpp,
    bmath/bprdist/tol_bprdist.h:
     Discrete inverse distribution function must return the rounded real soultion instead of truncated one.
     Wrong parametrized distributions must return Unknown in other methods
     Methods with Unknown arguments must return Unknown.
     Enhancement of Poisson distribution error handling.
  * OIS/oisxml.cpp: 
     Difference of time between OIS source files and current file time must be taken  without sign in order to find any discrepance.
     Enhancement of showing checking traces.
2006-10-02  Victor <vdebuen@tol-project.org>
  * btol/bmodel/modcalc.cpp
     Fixed bug 430
  * bmath/mathobjects/dat.cpp,
    btol/real_type/datgralg.cpp
     Fixed bug 431
2006-09-30  Jorge <josp@tol-project.org>
  * lang/language.cpp : changed the order of search for initlibrary/_inittol:
                        - ./initlibrary/_inittol.tol
                        - TOL_LIBRARY (env)
                        - TOLINIT_LIB_DIR (configure)
2006-09-11  Victor <vdebuen@tol-project.org>
  * OIS/oisapitol.cpp,
    OIS/oisloader.cpp,
    OIS/oisxml.cpp,
    OIS/tol_oisloader.h:
     New features in order to enable/disable source files checking traces
  * bbasic/dir.cpp: 
     A hidden trace to follow directory changes
  * bmath/blinalg/svdsep.cpp: 
     Eliminated unnedeed BDAT::PutKnown calling after enhancement of NAN and IND numbers tretaed as unknown ones
  * bmath/bstat/linreg.cpp,
    bmath/bstat/logit.cpp,
    bmath/bstat/stat.cpp,
    bmath/bstat/tol_bstat.h,
    btol/bmodel/foread.cpp,
    btol/bmodel/modcalc.cpp,
    btol/bmodel/model.cpp,
    btol/matrix_type/matgra.cpp,
    btol/real_type/datgrast.cpp,
    btol/real_type/datgsrst.cpp,
    btol/serie_type/tsrgrai.cpp:
     Solving bugs in definition, naming and using of R2, Pearson, Correlation and other statistics
2006-08-24  Victor <vdebuen@tol-project.org>
  * tol/init.cpp: Initializtion traces are showd just in debug mode
  * OIS/ois.cpp
     Root is treated as absolute unix like slash (/) parsed path
     Ensured object initialization
     New options for obsolete and lost source checking
  * OIS/tol_ois.h:
     Obsolete control is moved to BOisLoader class
  * OIS/tol_oisloader.h,
    OIS/oisloader.cp,
    OIS/oisxml.cpp,
    OIS/oisapitol.cpp:
     Obsolete control is moved to BOisLoader class
     New options for obsolete and lost source checking
  * bmath/mathobjects/tol_bdat.h,
    bmath/mathobjects/dat.cpp:
     Enhancement of NAN and IND numbers tretaed as unknown ones
  * btol/bgsl/tolgsl.cpp,
    btol/bmonte/mc-integrator.cpp,
    btol/matrix_type/gibbssampler.cpp,
    btol/real_type/armseval.cpp,
    btol/real_type/datgrapr.cpp,
    btol/real_type/datgrav.cpp:
     Eliminated unnedeed BDAT::PutKnown calling after enhancement of NAN and IND numbers tretaed as unknown ones
  * btol/real_type/datgrav.cpp:
     Fixed bug in WinRmtProcessAlive: last process was unreconognized
  * initLibrary/general/_system.tol:
     Eliminates last slash to avoid invalid paths 
  * initLibrary/general/_system_test.tol:
     More tests included
2006-08-16  Victor <vdebuen@tol-project.org>
  * lang/language.cpp:
     Test of alive objects is restricted to DEBUG mode
  * bbasic/dir.cpp: 
     GetAbsolutePath returns in a standard unique way to avoid ambiguous expressions as /./ 
  * bbasic/sys.cpp:
     Fixed bugs in BSys::WinSystem.  Now showMode and wait arguments work fine and errors are redirected to a temporary file to be recovered in no waiting mode.
  * initLibrary/general/_inigeneral.tol,
    initLibrary/general/_system.tol,
    initLibrary/general/_system_test.tol:
     New _system.tol file with multiplattform functions about calling operative system and _system_test.tol to test all  them
  * OIS/ois.cpp,
    OIS/oisapitol.cpp,
    OIS/oiscompress.cpp,
    OIS/oiscreator.cpp,
    OIS/oisindex.cpp,
    OIS/oisinteractive.cpp,
    OIS/oisloader.cpp,
    OIS/oisxml.cpp,
    OIS/tol_ois.h,
    OIS/tol_oiscreator.h,
    OIS/tol_oisloader.h:
     New OIS version 01.08
     Internal code has been reorganized in a more specific set of files
     OIS header.xml has been enhanced to separate control and options
     New concept of alias for  TOL source paths to be independent of OIS builiding machine
     Ois.Create and Ois.Load and  have now a flexible optional arguments to specify any valid option
     Enhancement of TOL API messges and descriptions

2006-08-13  Victor <vdebuen@tol-project.org>
  * OIS/ois.cpp
    OIS/oiscreator.cpp
    OIS/oisloader.cpp
    OIS/tol_ois.h
    OIS/tol_oisloader.h: New OIS version 01.07 including partial loading and interactive handling with OIS stores
  * bbasic/tol_bsys.h,
    bbasic/sys.cpp: New optional argument to control waiting mode in  function BBool BSys::WinSystem  (const BText& command, BInt showMode, bool wait=BFALSE)
  * btol/real_type/datgrav.cpp: New optional argument to control waiting mode in  TOL built-in function WinSystem (Text command, Real showMode [, Real wait=FALSE])
  * lang/language.cpp: New TOL console command $OIS for interactive handling with OIS stores
  
2006-08-03  Victor <vdebuen@tol-project.org>
  * btol/bgrammar/tol_bgenobj.h:
     Old functions GetTree and PutTree of template BGraObject<...> must be renamed to GetOisTree and PutOisTree to implement virtual BSyntaxObject ones 
  * OIS/tol_ois.h: New OIS version  01.06
  * OIS/ois.cpp: Eliminated tracing log files OisLogWrite.log and OisLogRead.log
  * OIS/oiscreator.cpp:
     Fixed bug writing polynomials: buffer was deleted before saving in bool BOisCreator::Write(const BPol& x, BFile& file)
     Fixed bug of calling GetTree instead of GetOisTree
  * OIS/oisloader.cpp:
     Message advertising of bug writing polynomials before OIS version 01.06
     Fixed bug of calling PutTree instead of PutOisTree

2006-08-02  Victor <vdebuen@tol-project.org>
  * bbasic/tol_barray.h : Eliminated spureous #define BAtmArr BArray<BAtom> and commented functions
  * btol/bgrammar/tol_bgrammar.h
      Evaluate and MultyEvaluate declarations are moved here from lang/tol_language.h
  * btol/bgrammar/tol_bsyntax.h:
      offset_,Offset(),PutOffset(),GetTree() and PutTree() are renamed as oisOffset_,OisOffset(),PutOisOffset(),GetOisTree() and PutOisTree()
  * btol/bgrammar/syn.cpp  
      offset_ is renamed as oisOffset_
  * btol/bgrammar/oprimp.cpp
      PutTree is renamed as PutOisTree
  * btol/bgrammar/graimp.cpp
      PutTree is renamed as PutOisTree
      Evaluate and MultyEvaluate definitions are moved here from lang/language.cpp
  * btol/bmodel/aia.cpp : Eliminated spureous template declarations forzeDef*
  * btol/bmodel/modcalc.cpp : Eliminated maxTransferDegree_+=p_; 
  * OIS/ois.cpp
    OIS/oiscreator.cpp
    OIS/oisloader.cpp
    OIS/tol_ois.h
    OIS/tol_oisloader.h
      offset_,Offset(),PutOffset(),GetTree() and PutTree() are renamed as oisOffset_,OisOffset(),PutOisOffset(),GetOisTree() and PutOisTree()
      BOis::BOffsetObject class is moved to BOisLoader::BOffsetObject
      Eliminated class BOis::BOptions 
  * lang/tol_blanguag.h
    lang/language.cpp
    tol/tol_init.h,
    tol/init.cpp,
    tol/tol.cpp :
      All TOL initialization functions are moved from language.cpp to init.cpp, and from tol_language.h to tol_init.h
  * win-VC8/win_tolinc.h
    win-VC8/tollib.vcproj
    win-VC8/tolcon.vcproj
    win-VC8/gnutol.sln
    toltcl/win-vc8/toltcl.vcproj
    toltcl/win-vc8/toltcl.sln:
      Updating win-vc8 projects
      
2006-08-01  Victor <vdebuen@tol-project.org>
  * ois/ois.cpp
    ois/oiscreator.cpp
    ois/oisloader.cpp
    ois/tol_ois.h
    ois/tol_oiscreator.h
    ois/tol_oisloader.h: 
     OIS adapted for minimum changes in current TOL code. 
     Internal documentation is being written.
  * btol/serie_type/tol_btmser.h:
     BData& GetDataBuffer()  is needed to modify OIS loaded series
  * btol/timeset_type/tol_btmsgra.h:     
     IsBounded method is needed just if __USE_OIS is enabled
  * lang/language.cpp:
     New InitGrammars detailed traces (disabled by default)
  * bbasic/tol_batom.h: Eliminated wrong defined function PointerCmp   
  * btol/bgrammar/spfuninst.cpp: Eliminated spureous trace Std(BText("\nAdding special funcion instances "));
  * btol/bgrammar/txthash.cpp: Eliminated spureous trace
  * win/win_tolinc.h
     New alias for OIS headers
  * tol/win/tollib.dsp,
    tol/win/tolcon.dsp,
    toltcl/win/toltcl.dsp:
     Preparing for OIS (but disabled now)


2006-07-28  Victor <vdebuen@tol-project.org>
  * btol/bgrammar/tol_bsyntax.h
    btol/bgrammar/tol_bgenobj.h
    btol/bgrammar/syn.cpp
    btol/bgrammar/graimp.cpp
    btol/bgrammar/oprimp.cpp
    lang/language.cpp
    ois/ois.cpp
    ois/oiscreator.cpp
    ois/oisloader.cpp
    ois/tol_ois.h
    ois/tol_oiscreator.h
    ois/tol_oisloader.h:
   Preparing for OIS. You must declare  __USE_OIS__ to use it due iOIS is disabled by default until it will be stable.

   
2006-07-27  Victor <vdebuen@tol-project.org>

  * bmath/bprdist/tol_bprdist.h
    bmath/bprdist/prd.cpp
    bmath/bprdist/tol_bmultvar.h
    bmath/bprdist/multvar.cpp
    btol/matrix_type/matgra.cpp:
   Mejoras en la normal truncada univariante y multivariante
    
  * btol/serie_type/tsrgra.cpp, btol/bdb/bdb.cpp: member dating_ should not be used but Dating() and PutDating(...)
  * btol/bgrammar/tol_bgentmp.h: In ~BTmpObject()  it must ensure that args_ is not null before to destory it
  * btol/bgrammar/grastk.cpp: Debug Tracing enhancement
  * btol/bgrammar/oprimp.cpp, btol/bgrammar/boper.cpp : Exported classes and eliminated spureous member Expression from BUserFunction
  * bbasic/tol_batom.h : New inline function  BInt PointerCmp(const void* v1, const void* v2) to compare the address of two received pointers
  * btol/bmodel/estim.cpp : In Levinson function unknown likelihood must be treated as 0
  * btol/ratio_type/ratgra.cpp: Default polyn is 0, but default ratio  is 1/1 and casting from polyn p to ratio must be p/1
  * btol/real_type/datgrapr.cpp: Enhancement of RandIChisq description
  * btol/real_type/datgrav.cpp: Fixed bug in Polyn PutCoef
  * btol/real_type/datgsrst.cpp: Fixed bug in BDatStatistic::PutArgs about non valid ending dates
  * btol/set_type/bset.cpp, tol_bset.h BSet::Field must be const
  
    
2006-06-14  Victor <vdebuen@tol-project.org>
	* bparser/fil.cpp: casting to unsigned char in calls to tolower to avoid interruptions in Visual C++ 2005 debugging
	* btol/bgrammar/grastk.cpp: casting to char to avoid Visual C++ 2005 warnings
	* btol/bgrammar/tol_bgrammar.h: casting to int and exporting BArray<BAtom*> to avoid Visual C++ 2005 warnings
	* btol/bmodel/sparselinreg.cpp: casting to const char to avoid Visual C++ 2005 warnings
	* btol/real_type/llkarma.cpp: eliminated unused int i 
	* /btol/set_type/setgra.cpp: casting to double to avoid Visual C++ 2005 warnings

2006-07-11  Jorge <josp@tol-project.org>
	* btol/bmodel/sparselinreg.cpp: !cm->status means no error
	
2006-07-11  Jorge <josp@tol-project.org>
	* btol/bmodel/sparselinreg.cpp: fixed a bug in "scol" and "srow"
	specification. Now if sparse_regression then Xt*X is returned.
	
2006-06-11  Victor <vdebuen@tol-project.org>
	* bbasic/dtealgeb.cpp,

	* btol/timeset_type/tms.cpp: Solving bug 415: hash values must be
	real numbers instead of integer ones to handle with sub-daily
	dates
	
	* btol/timeset_type/tol_btmset.h: New cache access methods
	* btol/timeset_type/tol_btmgra.h: New IsBounded method
	* btol/timeset_type/tol_btmgrav.h,	
        * btol/timeset_type/tmsgrav.cpp: Solving bug 408: BTmsOfSerie must
	be inherited from BTmsAbortable to handle with empty time set's
	avoiding infinite cycles, in the same way that intersection or
	difference.

2006-06-01  Jorge <josp@tol-project.org>
	* btol/bgrammar/graimp.cpp: stopFlag must be set in constructor it is
	related to the strange behaviour of needing two compile request in
	tolbase
	
2006-06-01  Jorge <josp@tol-project.org>
	* lang/language.cpp: related to bug 406
	
2006-06-01  Jorge <josp@tol-project.org>
	matrix_type/gibbssampler.cpp: MH now report acceptance by block
	
2006-05-30  Jorge <josp@tol-project.org>
	* real_type/datgrapr.cpp: bug in RandIChisq: it was always computing
	with s = 1.0	
	* matrix_type/gibbsampler.cpp: 7th argument in MetropolisHastings
	must be: 0 -> non-symmetric or 1 -> symmetric
	
2006-05-15  Victor <vdebuen@tol-project.org>
    * bbasic/tol_btext.h
      bbasic/txtalgeb.cpp:
       New ReadAllToken overload to handle with scaped-quoted tokens
    * btol/set_type/setgra.cpp :
       Fixed bug 298 by calling to new ReadAllToken overload to handle with scaped-quoted tokens
    * btol/set_type/tol_bset.h,
      btol/set_type/set.cpp
       BSet::operator[] (char * name) must be const
2006-05-12  Victor <vdebuen@tol-project.org>
    * btol/timeset_type/tol_btmset.h,
      btol/timeset_type/tms.cpp:
       New BTimeSet members BTimer hashStatTimer_, int cacheCallsNumber_, bool forzeCache_ to manage when cache will be used  
       New BTimeSet members beginCache_, endCache_ to difference between empty and undefined cache
       Old static members currentCalcFirstDate_, currentCalcLastDate_ are now object members to avoid secondary effects.
       Difference has been improved to skip calculation in special circumstances related to bounded and/or cached time set's 
       GetHashBetween take a reference of BHash instead of return a copy to avoid massive array copying 
    * btol/timeset_type/tol_btmsgra.h,
      btol/timeset_type/tmsgra.cpp:
       Fixed bug in BTmsReference::GetHashBetween taht was declared no const, and ReadData, PeriodsBetween, CalcHashBetween that were not declared
       BTmsStaticCached::GetHashBetween is not needed any more.
       Fixed bug 398. In non bounded basic dating's that were limited to the closest date to the begin (1582/12/31). This was a debug test that was forgotten. Sorry.
    * btol/timeset_type/tol_btmsgrav.h
      btol/timeset_type/tmsgrav.cpp:       
       FreeCache methods has been moved to foundation class BTmsCached 
       GetHashBetween methods are replaced by CalcHashBetween ones leaving cache management to foundation class BTimeSet
       BTmsDatesOfSet inherites from public BTmsStaticCached<BTmsTemporary, -1> instead of BTmsCached
    * btol/serie_type/tsr.cpp: 
       GetHashBetween take a reference of BHash instead of return a copy to avoid massive array copying 
    * btol/serie_type/tol_btsrgra.h: 
       In class BTsrReference has been added missplaced instances of virtual methods PutDating, PutFirstDate, PutLastDate, PutData and ReadData
    * btol/serie_type/tol_btsrgrav.h
      btol/serie_type/tsrgrav.cpp: 
       Code of deprecated methods CalcObject() has been moved to class constructors
       ForzeCache is called for related tiem set's in constructors of unbounded time series (CalInd, CalVar, ...)
       GetHashBetween take a reference of BHash instead of return a copy to avoid massive array copying 
    * btol/serie_type/srg.cpp: 
       BSerieTable::Fill must difference between !firstDate_.HasValue() and !lastDate_.HasValue() to handle with semi-bounded series
       GetHashBetween take a reference of BHash instead of return a copy to avoid massive array copying 
    * bbasic/tol_btimer.h: Class must be exported to be used in BTimeSet   
    * btol/bdb/bdb.cpp,
      btol/text_type/txtgra.cpp,
      lang/language.cpp:
       GetHashBetween take a reference of BHash instead of return a copy to avoid massive array copying 
    * btol/bgrammar/graimp.cpp: Node expression is not expanded if a expression has been already set 
    * btol/bmodel/aia.cpp: AIA object's expression is set instead of description
    * btol/set_type/setgra.cpp: BSourcePath object were not destroyed
2006-05-11  Jorge <josp@tol-project.org>
    * btol/bmodel/sparselinreg.cpp: SparseLinearRegression now can
    return: SSE, SST, R2, R2_adj, Residuals, ALL (meaning all values),
    see new function description.
    * btol/set_type/setgra.cpp: Bug 187 Some errors with "Range"
    function: http://bugs.tol-project.org/show_bug.cgi?id=187
2006-05-10  Victor <vdebuen@tol-project.org>
    * btol/timeset_type/tol_btmset.h,
      btol/timeset_type/tms.cpp:
       member BTimeSet::hash_ has been changed to pure virtual Cache function
       FreeHash and HasHash moved to FreeCache and HasCache
       FreeCache has been changed to pure virtual 
       GetHashBetweenH controls elapsed time to decide to save cache or not
    * btol/timeset_type/tol_btmsgra.h,
      btol/timeset_type/tmsgra.cpp:
       New template BTmsStaticCached to inherite all basic dating's with a static cache vector and generic instantiation of GetHashBetween, Cache and FreeCache methods
       Faster implementation of Difference method for Easter and WD(·)
       classes BTmsHour, BTmsMinute and BTmsSecond has been moved from tmsgra.cpp
    * btol/timeset_type/tol_btmsgrav.h
      btol/timeset_type/tmsgrav.cpp:
       New class BTmsCached to inherite all bounded TimeSet's and operators with a non static cache and generic instantiation of Cache and FreeCache methods
    * btol\serie_type\tsr.cpp : BTimeSet methods FreeHash and HasHash moved to FreeCache and HasCache
    * lang/language.cpp : In void Initialize(int argc, char *argv[], char *env[]), all evaluations must be checked to avoid NULL pointers        
2006-05-09  Jorge <josp@tol-project.org>
    * btol/real_type/datgrapr.cpp: fixed bug 52, http://bugs.tol-project.org/show_bug.cgi?id=52. Related to DensUniform, DensGamma, DensExp.
    * btol/text_type/txtgra.cpp: #elif instead of #else if
2006-05-08  Victor <vdebuen@tol-project.org>
    * bbasic/dtealgeb.cpp: Fixed bug 312: In BDateFormat::TextToDate function, sscan format strings must specify length for integer components of dates
2006-05-08  Victor <vdebuen@tol-project.org>
    * bbasic/tol_bdate.h
      bbasic/dte.cpp
      bbasic/dtealgeb.cpp:
       The begin is set to 1582-12-31: the last day of last year before first full year of Gregorian calendar that begins at 1582-10-15. 
       Dates before this day follow julian calendar and it's too work for nothing.
       In addition, negative year were failing due to Hash and Index were not designed to do it. 
       IsTheBegin is true for all known d <= TheBegin. 
       IsTheEnd is true for all known d >= TheEnd
       BDate::Hash must difference between Unknown, TheBegin and TheEnd
       Members BDate::operator+(double) and BDate::operator-(double) must be const
    * btol/timeset_type/tol_btmset.h
       In order to detect and manage bounded timeset's tere are new BTimeSet protected virtual member methods CalcInf and CalcSup, and its correspondent public access methods Inf and Sup
       In order to improve error messages ther is a new virtual method GetIdentify 
       In order to ensure cachew optimization there is a new static method HashUsedKBytes() and its correspondent private static member hashUsedKBytes_
    * btol/timeset_type/tms.cpp    
       In order to save memory, internal method void BTimeSet::GetHashBetweenH wil not use cache that is reserved for specialized instances of virtual BTimeSet::GetHashBetween
       n-th Next and Prev must difference between Unknown, TheBegin and TheEnd
       0-th Next and Prev must ensures that the date is included
       TestCoherence has been enhanced
    * btol/timeset_type/tol_btmsgra.h
       Macro BUserTimeSet is now inherited class BUserTimeSet: public BGraObject<BTimeSet> to instance virtual method GetIdentify
    * btol/timeset_type/tmsgra.cpp
       Methods BGraObject<BTimeSet>::... cannot be called BUserTimeSet::...
       All methods must ensure that the date has value.
       In daily based classes, methods Predecessor and Prev must detect when Fraction is not null to increment a day before to operate
       CalcInf must be adapted to new Begin at 1582-12-31
       Faster methods for BTmsWeekDay successors
    * btol/timeset_type/tol_btmsgrav.h
       BTmsBinary(BUserTimeSet* a, BUserTimeSet* b) doesn't must to increase references of a nor b
       BTmsRangeSuc with from_>until_ is the empty timeset and a warning will be sent
       New private void BTmsRangeSuc::GetChildHashes to faster behaviour of methods
       class BTmsOfSerie is published here instead of tmsgrav.cpp
    * btol/timeset_type/tmsgrav.cpp
       Macro USE_CACHE_FOR_SUCC is set to 2 to get faster successors
       New macros EnsureLimitsSuccessor(dte) and EnsureLimitsPredecessor(dte) to standarize asymtotic behaviour of successors
       GetHashBetween methods must ensure that bounds are not exceeded and free child hashes allways before to return
       inline BDate SuccSuccessor/SuccPredecessor used by Succ and Range must ensure progression/regression and asymtotic behaviour
    * btol/timeset_type/dnf.cpp: Contain method must be called instead of protected method Includes
    * lang/language.cpp:  BTimeSetHashUsedKBytes changed to BTimeSet::HashUsedKBytes

2006-05-04  Jorge <josp@tol-project.org>
    * bbasic/txtalg.cpp: http://bugs.tol-project.org/cgi-bin/bugzilla/show_bug.cgi?id=387
    
2006-05-02  Victor <vdebuen@tol-project.org>
    * btol/set_type/setgra.cpp : Fixed bug 342. I don't know reason of a Stdlog function was used instead of standard one Std, but it's seams to be a forgotten trace or something thus.
    * btol/timeset_type/btmsgrav.h
      btol/timeset_type/tmsgrav.cpp:
       Enhancement of infinite cycle detection. It's non definitive but is better than previous scheme.
    * btol/bgrammar/oprimp.cpp
       Fixed bug 340: Case of non grammar defined must be processed due to non standard calls like DatCh statistics could be to forze non well defined argument lists
    * btol/serie_type/tol_btsrgra.h
       Fixed bug 340: BTsrReference must to instance virtual method void CalcObject()
    * btol/serie_type/tsrgra.cpp
       Fixed bug 340: void BUserTimeSerieDo::Do () must call to void CalcObject()
    * btol/serie_type/tsrgrav.cpp
       Fixed bug 340: Updated description of built-in function DatCh
    * btol/bgrammar/oprimp.cpp : Fixed bugd 318
2006-04-29  Victor <vdebuen@tol-project.org>
    * btol/bmodel/model.cpp
      btol/bmodel/tol_bmodel.h
       Fixed bug 383: An error will be emited if an input hasn't InputDef structure
    * lang/language.cpp
       Fixed error in dialog mode at $ALL entries
2006-04-29  Victor <vdebuen@tol-project.org>
    * btol/bgrammar/tol_bgrammar.h
      btol/bgrammar/graacc.cpp
        Fixed bug 388: Now Anything searches first by last known grammar
    * btol/matrix_type/matgra.cpp
        Enhancement of error messages and description of overloaded buil-in Matrix operators +,-,*
    * btol/timeset_type/tol_btmsgrav.h    
        BTmsBinary(BUserTimeSet* a, BUserTimeSet* b) must increase references and annotate it to decrease it at destruction time
    * btol/text_type/txtgra.cpp
        Fixed bug 384: New function PutLanguage to set the current human language of TOL messages
2006-04-28  Victor <vdebuen@tol-project.org>
    * bmath/bprdist/tol_bmultvar.h
      bmath/bprdist/multvar.cpp
      btol/matrix_type/matgra.cpp
        New overloaded instance RandTruncatedMultNormal of to handle with arbitrary decomposition of covariance matrix instead of just Choleski decomposition 
        Built-in function RandTruncatedMultNormal has been updated to this feature
2006-04-28  Victor <vdebuen@tol-project.org>
    All open bugs related to TimeSet's (32,78,110,167,202,239,271,273) has been fixed
    A lot of non reported problems has been discovered and fixed in almost all TimeSet classes thanks to massive simulation tests 
    * toldoc/time/td-diseño: Full specifications of design of daily Time Algebra
    * tol/bbasic/dte.cpp : TheBegin is now y0001m01d01 and Unknown is y0000m00d00 to avoid some incoherences
    * tol/bbasic/dtealgeb.cpp: DteDaysInMonth and HasValue methods has been enhanced
    * tol/bbasic/tol_bdate.h: IsUnknown is adapted to Unknown redefinition and operator - is now defined as const method
    * btol/timeset_type/btmset.h
      btol/timeset_type/btmsgra.h
      btol/timeset_type/btmsgrav.h
      btol/timeset_type/tms.cpp
      btol/timeset_type/tmsgra.cpp
      btol/timeset_type/tmsgrav.cpp:
        New BTimeSet::HashSucc and BTimeSet::HashPred static functions to allow binary search in hashed arrays of dates
        New currentCalcFirstDate_ and currentCalcLastDate_ to store current working dates
        Method GetHashBetween is now virtual and BTimeSet::GetHashBetweenH has been simplified
        In GetHashBetween buildingCache_ is set to BFALSE after calling to GetHashBetweenH
        In TestHashProgress function HasValue and IsUnknown has been differenced to avoid some incoherences
        New BTimeSet::TestError and BTimeSet::TestCoherence to test quality of Time Algebra
        New BTmsAbortable abstract class to handle with infinite recursive problems in Succesor and Predecessor of some methods
        Each TimeSet built-in instance has its own specific and optimiced GetHashBetween method
        Bounded TimeSet Successor and Predecessor work fine with TheBegin and TheEnd limit dates
        HasValue and IsUnknown has been differenced to avoid some incoherences in a lot of methods
        BTmsInterval::Includes mathces just for units_ dates into the interval
        Built-in functions +,-,*,Union,Intersection,Succ,Range and Periodic has been fully rewritten to use corrected and more efficient analytical methods
        New built-in TestCoherenceOfTimeSet to allows user to call internal BTimeSet::TestCoherence method in Time Algebra quality tests
    * btol/set_type/setgra.cpp : built-in funcion Set Dates(TimeSet dating, Date from, Date until) doesn't need to call FirstNoLess method
    * btol/bgrammar/tol_bspfun.h
      btol/bgrammar/spfun.cpp: a static object is used for searching to avoid millions of uneccessary objects building
    * btol/real_type/datgra.cpp
      btol/bgrammar/bgrammar.h
      btol/bgrammar/graimp.cpp: UnparseNodes allows different values and behaviours. This feature is usefull to debugging
                                   When UnparseNodes is 0 : no unparsing is done
                                   When UnparseNodes is 1 : just results of EvaluateExpr will have expression
                                   When UnparseNodes is 2 : all nodes of evaluation tree will have expression
2006-04-12  Jorge <josp@tol-project.org>
    * tol_bcommon.h: /*#define __USE_BFSMEM__*/
    * bbasic/bfsmem.cpp,
      bbasic/tol_bfsmem.h,
      bbasic/tol_blist.h,    
      bbasic/tol_list.h: static initialization of allocator must be
      controled, must be called before trying to use it. We must not
      depend on the order of initialization set by the compiler/linker.
    * bparser/tol_btoken.h: propagating the changes from tol_bfsmem.h
    * btol/bgrammar/tol_bgrastk.h,
      btol/bgrammar/tol_bsyntax.h: propagating the changes from tol_bfsmem.h
    * btol/bmodel/aia.cpp,    
      btol/bmodel/tol_baia.h: static initialization of and object        
      depending on an allocator must be done only after initializing
      the allocator.
    * lang/language.cpp: doing static initialization.
2006-04-03  Victor <vdebuen@tol-project.org>
    * btol/matrix_type/matgra.cpp,
      bparser/fil.cpp,
      bparser/scn.cpp:
      Matrix cell-to-cell product operator · is not in first 127 ASCII codes and has been changed to $*
    * btol/bgrammar/tol_boper.h,
      btol/bgrammar/tol_bstruct.h:
      Circular reference between BStruct and BNewStruct are solved 
    * btol/bgrammar/graacc.cpp,
      btol/bgrammar/tol_bgrammar.h,
      btol/bgrammar/tol_bgrastk.h,
      btol/bgrammar/grastk.cpp,
      win/win_tolinc.h,
      win/tollib.dsp ,
      win-vc7/win_tolinc.h,
      win-vc7/tollib.vcproj :
      BSackManager has been moved to new files tol_bgrastk.h and grastk.cpp
      Fixing bugs when non allowed symbols try to enter to the stack. Solution is to add to the stack but no the dictionary because searching it will be imposible and unnecessary.

2006-03-29  Victor <vdebuen@tol-project.org>
    Improvement of TOL symbols searching methods and structures:
      - Sintax tree tokens detetcs constant literals (numbers, strings and dates)
      - Sintax tree tokens store references to undeletable system objects (type names, built-in functions, ...)
      - New local stack structure with a super fast dictionary tree with cost O(1) in RAM and CPU
    * bparser/tok.cpp,
      bparser/tol_btoken.h: new members and access methods to referenced objects and its features
    * btol/bgrammar/graimp.cpp
      New functions TknFindXXX(BToken* tok) to search TOL objects using full BToken information, not only the name, avoiding a lot of repeated searches and constant creations
    * btol/bgrammar/oprimp.cpp
      Syntax tree tokens of user functions must be cleaned by calling TknCleanLocalObjectRef after evaluation to eliminate references to deleteable objects in order to allow incoherences
    * btol/bgrammar/grammar.h,
      btol/bgrammar/graacc.cpp,
      btol/bgrammar/graimp.cpp,
      btol/set_type/setgra.cpp,
      btol/bmodel/foread.cpp:
      Now FindOperand uses a flag to avoid unusefull constant searching
    * btol/bgrammar/graacc.cpp
      btol/bgrammar/grammar.h:
      New local stack handler class BStackManager with 
       - a standard stack that stores references to objetcts in reversed creating order in order to delete them at scope time.
       - and a dictionary tree which alphabet has 67 characters in order to allow super fast searching and inserting methods with just one string comparisson.
      Each dictionary node has its own stack of references of objects in reversed creating order in order to hide old objects with the same name
      Each local stack node has a reference to the dictionary node where object is located in order to avoid searching at deleting time
      Memory assignement for dictionary branches has a simple cache system to avoid fragmentation
      When a symbol is deleted its correspondent dictionary path is not deleted because it's very probable that this path were fully or partially reused in future
    * lang/language.cpp:
      BStackManager::Initialize() must be called in InitGrammars
    * btol/bdb/bdspool.cpp,
      btol/bgrammar/spfuninst.cpp,
      btol/bgrammar/gra.cpp,
      btol/real_type/datgrav.cpp
          BGrammar::DestroyStackUntil(), BGrammar::FindLocal(), BGrammar::Stack() and so on are replaced by BStackManager static members and methods
    * btol/text_type/txtgra.cpp
      Eliminating developping "beta" version identifier
2006-03-20  Victor <vdebuen@tol-project.org>
    * btol/bgrammar/oprimp.cpp: (Fixing bug 361&367) BNewStruct::BNewStruct must to decrement another reference to be deletable
    * btol/bgrammar/str.cpp: (Fixing bug 361&367) In BStruct::~BStruct() has been added the command BGrammar::DelObject(function_) to delete the creator function from hash table.
    * btol/serie_type/tsrgra.cpp: (Fixing bug 341) BUserTimeSerieDo::PutContens was not prepared to circular references
    * bbasic/txt.cpp: In BText::ReallocateBuffer calculation of nextSize has been corrected
    * bmath/bprdist/tol_bprdist.h,
      bmath/bprdist/prd.cpp: New class BTruncatedNormalDist to handle with scalar truncated normal distributed random variables 
    * bmath/bprdist/tol_bmultvar.h, 
      bmath/bprdist/multvar.cpp: New internal functions RandTruncatedMultNormal and RandTruncatedIdMultNormal to draw random multivariate truncated normal
    * bmath/bstat/logit.cpp: logit and probit Max-Likelihood estimators has been adjusted to stop when objective function doesn't improve any more.
    * btol/real_type/datgrapr.cpp: New TOL built-in functions DensTruncatedNormal, DistTruncatedNormal, DistTruncatedNormalInv
    * tol/bparser/fil.cpp,
      tol/bparser/scn.cpp: Symbol · is now accepted by parser as TOL operator
    * btol/matrix_type/matgra.cpp: 
      (Matrix,Real) arguments are allowed now for +,-,* matrix operation. You can write now Matrix A+1 but not 1+A
      Cell to cell matrix product function WeightProduct(A,B) can be written as A·B
      New TOL built-in function IfMat for vectorial boolean If operations like IfSer for Serie objects
      New TOL built-in functions f01, F01 and Inv01 implementing uncorrelated standard multinormal density, distribution and inverse function
      New TOL built-in function RandTruncatedMultNormal to draw random multivariate truncated normal
    * btol/matrix_type/tol_mat.hpp: Generic matrix functions like Name should use polymorphic access function Get(i,j) instead of operator (i,j)
    * btol/matrix_type/tol_matopr.hpp: Fixed bug and improving error messages in PivotByColumns and PivotByRows
    * btol/text_type/txtgra.cpp: improving performance of Tokenizer TOL function

2006-02-16  Jorge <josp@tol-project.org>
    * btol/bdb/bdspool.cpp
    * btol/bdb/dbtol.cpp
    * btol/bdb/tol_bdspool.h : interface for ColumnName as char*, now
    DBTable put names to the items in the Set.
    * dbdrivers/ : char* for column names instead of unsigned char*

2006-02-10  Jorge <josp@tol-project.org>
    * dbdrivers/libtolodbc.cpp: solving a bug related to field
    reporting types: SQL_DECIMAL & SQL_NUMERIC.
2006-02-10 Jaime García Calvo <jgarcia@tol-project.org>
        * tol/initLibrary/tclutils/_buttonbar.tol          
          problem with TclAddSeparator function solved
2006-02-10  Victor <vdebuen@tol-project.org>
    * btol/set_type/setgra.cpp: BSI files must use BSetFromFile Open() and Close() methods to be compatible with new BSourcePath system.
    * btol/bgrammar/oprimp.cpp,
      btol/bgrammar/syn.cpp,
      btol/bgrammar/tol_bsyntax.h,
      btol/set_type/setgra.cpp,
      btol/set_type/tol_bsetgra.h,
      btol/text_type/txtgra.cpp
      Ambiguous term ParentPath to refer the TOL file (.tol, .bdt, ...) where an object was created  is replaced by SourcePath and the asociated BSetFromFile* Parent is replaced by Source
      This change affects to built-in TOL function GetParentPath that becomes GetSourcePath.
      A new BSyntaxObject derived class called BSourcePath is used to store in the HashVar all compiled TOL source paths and its asociated BSetFromFile addresses. 
      When these one is destroyed notify to the BSourcePath in order to set to NULL the address. So referential integrity hole revealed by bug 350 has been fixed.
2006-02-09  Victor <vdebuen@tol-project.org>
    * btol/bgrammar/gra.cpp,
      btol/bgrammar/tol_bgrammar.h: (Fixed bug 352) BGrammar::sortedMethods_ must be non static. Else, missed type overloaded method can be found.
    * btol/bdb/dbtol.cpp: Debug mode skipping on line 552 extended to VC6
        * btol/bgrammar/tol_bgentmp.h: erroneous member function BRefObject<Any>::Parent has been definitively eliminated.
    * btol/bgrammar/syn.cpp,
          btol/bgrammar/tol_bsyntax.h,
      btol/bgrammar/txthash.cpp,
      btol/bgrammar/tol_btxthash.h:
          New flag isDeadObj_ to use in degun mode to filter BDeadObject messages 
    * btol/bgrammar/tol_bgencon.h,
      btol/serie_type/tol_btsrgra.h,
      btol/serie_type/tsrgrav.cpp,
      btol/timeset_type/tmsgra.cpp,
      btol/timeset_type/tol_btmsgra.h,
      btol/timeset_type/tol_btmsgrav.h:
      Explicit destroyer implementation to avoid destroying path breaks
    * btol/bgrammar/tol_bgrammar.h,
      btol/bgrammar/txthash.cpp:
          flag ishashed_ must be updated by BHashedArray::Add to ensure modification is allways ok, as for example, MakeGlobal that was losing this flag and so corrupting gloabl hash table.

2006-02-08 Jaime García Calvo <jgarcia@tol-project.org>
        * tol/initLibrary/tclutils/_buttonbar.tol 
        Compatibility with new Toolbar Functions

2006-02-06 Jorge <josp@tol-project.org>
    * Makefile.am :
    * configure.in : including contrib
    
2006-02-06 Jorge <josp@tol-project.org>
        * win/tollib.dsp : including kmlocal in compilation

        * contrib/kmlocal/KMlocal.h : bug in cl compiler, don't know how to
          deal with a simple template, so when _MSC_VER==1200 (6.0) a macro is
          defined instead of a template function.

        * contrib/kmlocal/KMeans.h: std::

    * contrib/kmlocal/KMrand.h: for (int i; // i previously defined.

        * bgrammar/opr.cpp,tol_boper.h: BOperClassify::DataMining_

        * btol/bmodel/sparselinreg.cpp: unused variables.

        * btol/set_type/kmeans.cpp: for (int i; // i previously defined.

2006-02-06 Jorge <josp@tol-project.org>
    * contrib : new directory containing external source
    code (contributions) used in TOL.
    
    * contrib/kmlocal: code to perform k-means clustering algorithm as
    described in http://www.cs.umd.edu/~mount/Projects/KMeans.

2006-02-06 Victor <vdebuen@tol-project.org> ( tol_1_1_3KPI_UF_unstable branch first step is tested ok and generic evaluation speed has been improved )
    * bbasic/atm.cpp: Disabled verbose debugging traces
    * bbasic/tol_bobject.h: New class BObjectCRef (False objects usefull for searching in sorted arrays)
    * tol/bparser/par.cpp : Function aliases like !,**,Pow,EQ,Sqrt sre resolved at parsing time to avoid repeated actions at evaluation time
    * bparser/tok.cpp, 
      bparser/tol_btoken.h: New object_ and objectClass_ members to allow reference semantical information in parsed tokens
    * btol/bgrammar/tol_bgrammar.h, 
      btol/bgrammar/gra.cpp, 
      btol/bgrammar/graacc.cpp, 
      btol/bgrammar/graimp.cpp,
      btol/bgrammar/oprimp.cpp,
      lang/language.cpp : New static arrays BGrammar::sortedGrammars_ and BGrammar::sortedMethods_ to avoid sequential searching along lists
    * btol/bgrammar/graimp.cpp,
    * btol/bgrammar/oprimp.cpp: const BText& is used instead of duplicated BText when is posible improving speed a bit
    * btol/bgrammar/tol_bgencon.h : Eliminated spureuos memeber BReferenceContens::New
    * btol/bgrammar/tol_boper.h,
      btol/bgrammar/opr.cpp : New static array BOperClassify::sortedClasses_ to avoid sequential searching along lists
    * btol/bmodel/tol_baia.h, 
      btol/bmodel/aia.cpp : New static array BOutlier::sortedOutliers_ to avoid sequential searching along lists

2006-02-03 Victor <vdebuen@tol-project.org>
    * btol/bgrammar/spfuninst.cpp
      btol/bmodel/modcalc.cpp
      btol/set_type/set.cpp
      btol/set_type/setgra.cpp
      btol/set_type/tol_bset.h:
          New method BSet::ToReversedList to avoid LstReverse calling
    * bbasic/tol_btext.h, txt.cpp, txtalgeb.cpp: Explicit inline for some BText related functions

2006-02-03 Victor <vdebuen@tol-project.org>
    * btol/set_type/setgra.cpp: Methods applying expects reversed argument list
2006-02-02 Jorge <josp@tol-project.org>
    * bbasic/tol_btext.h: rewriting StrCmp in order to try strcmp first.
    
2006-02-02 Victor <vdebuen@tol-project.org>
    */lang/language.cpp tol_blanguag.h: Functions StopFlagOn, StopFlagOff and StopFlag must be exported
2006-02-01 Victor <vdebuen@tol-project.org>
    * Massive changes are submited as described in toldoc/TOLCleaning_DIC_2005
    * Next changes are found at merging time of these massive changes
    * btol\real_type\datgra.cpp,
    * btol\bgrammar\gra.cpp,graimp.cpp,tol_bgrammar.h: 
      BGrammar::unparseNodes_ is changed from bool to BDat to be exported as user control variable
    * bmath\mathobjects\dat.cpp:
      disable unused pragma optimize for visual C
    * lang\language.cpp:
      Disabled UnparseNodes. Now, release descriptor includes date and time information
    * btol\real_type\tol_bdatgra.h
      btol\serie_type\tsrgrai.cpp: New BData type must be used instead of BArray<BDat> to handle with series data vector
    * bmath\blinalg\svdsep.cpp:
      restablished correct value of epsilon 
    * bbasic\tol_btext.h txt.cpp txtalgeb.cpp: StrCmp functions must be inline to be more efficient 
    * btol\ctime_type\bctime.cpp: 
      NOT IMPLEMENTED METHOD IN WINDOWS BCTime::fillNew, due to strptime function does not exist!
    * bmath/bfunct/tol_bfunct.h:
      In linux GCC a linker error was caused by this now eliminated line 
        template class TOL_API BArray<BDat> 

2006-01-27 Jorge <josp@tol-project.org>
    * btol/bmodel/sparselinreg.cpp: fixed a bug un srow, scol &
    triplet definition when a block is not given as a Set. More
    information is provide about error situation in the definitions of
    srow, scol & triplet. There are still more places where to insert
    'Error' messages when and erro is detected in the definition of a
    sparse matrix.
    
2006-01-19 Jorge <josp@tol-project.org>
    * btol/bmodel/sparselinreg.cpp: SparseLinearRegression now is
    based in CHOLMOD. The function is also able to run a MCMC for the
    regresion parameters and varianze.
    
2006-01-17 Jorge <josp@tol-project.org>
        * bmath/gsl_ext/rcmnorm.c : #include <gsl/gsl_randist.h>
        * btol/bgrammar/tol_bgrammar.h : tol_bext.h only if defined(__USE_EXT_LOADER__)
        * win/tollib.dsp: adding CHOLMOD and GBLA.

2005-12-26 Jorge <josp@tol-project.org>
    * bmath/csparse: Concise Sparse Matrix package. Written by Timothy
    A. Davis,http://www.cise.ufl.edu/research/sparse/beta/Dec9_2005
    * btol/bmodel/sparselinreg.cpp: Sparse Linear Regression based on
    package CSparse.
    * configure.in: including csparse in compilation.
    
2006-01-04 Jaime García Calvo <jgarcia@tol-project.org>
   * tol/initLibrary/tclutils/general/grammars/_text.tol
     Function "TxtListTcl" modified. Now Date type are allowed.

2005-12-26 Jorge <josp@tol-project.org>
    * btol/bdb/bdspool.cpp: assigning names to the first row returned
    by DBTableColumn in order to assign names to the columns when
    displayed in tolbase.
    
2005-11-24 Christian Paz <cpaz@tol-project.org>
   * btol/complex_type/cmpgra.cpp bmath/mathobjects/tol_bcomplex.h
     Exportation of ~ operator for Complex conjugated as Conj method instead of ~ operator
     Operator ~ of BComplex class was eliminated because of its use as Destructor operator in C++
     Modified to Fix Bug #338
   * bparser/fil.cpp bparser/scn.cpp
     Include in BFilter::IsSymbol Function the character ~ to be recognized by TOL Parser
     Include in defMon_ the character ~ as a Monary Token by TOL Parser
     Modified to Fix Bug #338

2005-11-21 Victor de Buen <vdebuen@tol-project.org>
   * tolp/tol/win-VC7
     tolp/toltcl/win-vc7  
     Both projects has been updated to be built using Visual C++ .NET with
     -O2 optimization options that makes faster final code

2005-11-19 Victor de Buen <vdebuen@tol-project.org>
   * bbasic/tol_barray.h, btol/matrix_type/tol_mat.hpp
     Avoiding some systems crashes when there are no enought memory t ocreate big arrays or matrices
   * bmath/blinalg/linalg.cpp
     Only some comments have been changed
   * bmath/bstat/arma.cpp
     New SchurTriangularDecomposition method and 
     Enhacement of Levinson numerical stability
   * btol/bmodel/estim.cpp
     ARMA_TACov changed to ARMATACov
     ARIMACalcResiduals changed to ARIMALevinsonEval
     New BSetARMAGohbergSemenculEval method to superfast ARMA evaluation
   * btol/bmodel/modcalc.cpp
     Only some messages have been changed
   * btol/matrix_type/matgra.cpp
     Fixed bug in DifEq without optional parameters
   * btol/set_type/setgra.cpp
     In BSetFromFile::Open() function
       Conditional compilation of __GNU2__>2 has been extended to VC7+: 
       #if ((defined(__GNUC__) && (__GNUC__>2)) || (defined(_MSC_VER) && (_MSC_VER>=1300)))
2005-11-15 Roberto Cuesta Soto <rcsoto@tol-project.org>
   * tol/initLibrary/tclutils/_chart.tol 
   * tol/initLibrary/tclutils/tabulate.tol
   Added the functions TclChartTimeSet and TclTabulateTimeSet that allow 
   to visualize and tabulate respectively a set of TimeSet

2005-10-21 Jorge <josp@tol-project.org>
   * initLibrary/general/grammars/_ratio.tol
   Function GetRatioFromLabel fixed: BinGroup fails when the part AR or 
   MA has a zero coefficient.

2005-10-21 Jorge <josp@tol-project.org>
   * tol_bcommon.h : prevent redefining macros: strcasecmp/strncasecmp

2005-10-20 josp <josp@tol-project.org>
    * btol/matrix_type/gibbssampler.cpp: fixed a bug in MH_monitor
     - when 'discard'is set to 1 the iteration over the samples was bad.
     - _out must be set to NULL when not monitor is defined.
    
2005-10-19 josp <josp@tol-project.org>
    * btol/matrix_type/gibbssampler.cpp: added a new optional
    parameter to specify a monitor of the chain. Now only a csv output
    is implemented.

    * tol_bcommon.h : defining strcasecmp/strncasecmp for windows as
    _stricmp/_strnicmp.
2005-10-17 Victor de Buen <vdebuen@tol-project.org>
    * tol_bcommon.h                     : Conditional compilation of __GNU2__>2 has been extended to VC7+: 
                                          #if ((defined(__GNUC__) && (__GNUC__>2)) || (defined(_MSC_VER) && (_MSC_VER>=1300)))
                                          Disabled paranoid warning 4018 in Visual C++ 7: '<' : no coinciden signed/unsigned
    * btol/set_type/setgra.cpp          : Conditional compilation about __GNU2__ has been extended to VC7+ and __GNU__>2: 
                                          #if ((defined(__GNUC__) && (__GNUC__>2)) || (defined(_MSC_VER) && (_MSC_VER>=1300)))
                                          Conditional compilation of UNIX has been extended to VC7+: 
                                          #if (defined(UNIX) || (defined(_MSC_VER) && (_MSC_VER>=1300)))
    * bbasic/txtalgeb.cpp,
    * bbasic/qfile.cpp                  : Conditional compilation of UNIX has been extended to VC7+: 
                                          #if (defined(UNIX) || (defined(_MSC_VER) && (_MSC_VER>=1300)))
    * btol/text_type/txtgra.cpp         : Eliminated spureous instantiation of template function (Porting to VC7)
                                          int BGraContens<BText>::Mode() const { return BOBJECTMODE; };
    * btol/bgrammar/tol_bgenobj.h       : Spureous Export flag TOL_API has been eliminated from templates BGraObject and BRenObject (Porting to VC7)
    * btol/bgrammar/tol_bgentmp.h       : Spureous Export flag TOL_API has been eliminated from templates BTmpObject (Porting to VC7)
    * bbasic/tol_barray.h               : Spureous Export flag TOL_API has been eliminated from template BArray (Porting to VC7)
    * bbasic/tol_btext.h                : Spureous Export flag TOL_API has been eliminated from template BArray forward declaration (Porting to VC7)
                                          Non referential default value "" has been replaced by BText::None() at function (Porting to VC7)
                                          friend BText TmpFileName(const BText& path=BText::None(), const BText& prefix=BText::None());
      
    * bmath/mathobjects/tol_bdat.h      : Duplicated friend operators ==,!=, <,>,<=,>= has been eliminated (Porting to VC7)
    * bmath/mathobjects/tol_bcomplex.h,
    * bmath/mathobjects/complex.cpp,
    * btol/complex_type/tol_bcmpgra.h,
    * btol/complex_type/cmpgra.cpp,
    * bmath/bfunct/nrealfun.cpp         : old friend functions RC, XY and RA are now static to BComplex class (Porting to VC7)
    * bmath/blinalg/mfastpro.cpp        : Maths functions as log or pow requires now explicit casting to double in its arguments (Porting to VC7)
    * tol/win-VC7,
    * tol/win-VC7/StdAfx.cpp,
    * tol/win-VC7/StdAfx.h,
    * tol/win-VC7/config.h,
    * tol/win-VC7/gnutol.sln,
    * tol/win-VC7/tolcon.vcproj,        
    * tol/win-VC7/toldll.cpp,
    * tol/win-VC7/tollib.vcproj,
    * tol/win-VC7/win_tolinc.h          : New directory and files to porting TOL project to MS Visual C++ 7 .NET
    
2005-10-10 Victor de Buen <vdebuen@tol-project.org>
    * btol/bmodel/modcalc.cpp: No significative change : has been deleted a previously commented line that's usefull no more. 
    * bbasic/tol_bdate.h: New 'bool BDate::IsUnknown()' member function to identify just BDate::Unknown() object. Notice that !HasValue() includes Unknown(), TheBegin(), TheEnd() and all wrong formatted dates.
    * btol/timeset_type/tmsgrav.cpp: (Fixed bug 317) in BTmsSuccessor::Includes and BTmsRangeSuc::Includes functions exceptional situations was not treated, and failed handling a finite TimeSet
    

2005-10-07 Antonio Zamorano <azamorano@tol-project.org>
        * initLibrary/general/grammar/_ratio.tol
        Added _ratio.tol

2005-10-06 Antonio Zamorano <azamorano@tol-project.org>
        * btol/bdb/bdspool.cpp
        Now prefix accepts any grammar

2005-10-05 Victor de Buen <vdebuen@tol-project.org>
    * btol/timeset_type/tmsgrav.cpp: (Fixed bug 315) At function static bool TestDatingMoving there was a mistake in last contition error, so a false error was sended to the user.
    * btol/bmodel/modcalc.cpp: (Fixed bug 206) At function BModel::InitData (line 388) has been changed test for dating compatibility to allow use different dating names or expression in output and output series.
2005-09-30 Oscar Fernández García <ofernandez@tol-project.org>
    * initLibrary/tclutils/_entry.tol
        Use of dialogs instead of modal mdi forms in functions 
        TclDialogEditSelector and TclDialogComboPlus.

2005-09-19 Victor de Buen <vdebuen@tol-project.org>
    * btol/timeset_type/tms.cpp: In function GetHashBetweenH at line 253, 
    the new cycle control used for fixing bug 305 can be used in this case:
    "Left hand hash calculation" but only for "Right hand hash" and "new hash"
    cases. Old cycle for(n=0; h<firstHash; n++) is restored.

2005-09-16 Jorge <josp@tol-project.org>
    * btol/matrix_type/gibbssampler.cpp: 
    - BUG in ~MH_workspace : WS could contain references to my local
    objects, so DecNRefs should go after releasing the workspace.
    - bad indexing in block information, it was indexed by block offset
    instead by block_id, now it's fixed.
        - another bug related to the use of blk_id and blk_start: blk_id
    is the block ordinal number while blk_start is where the block
    start inside the join vector.

2005-09-14 Victor de Buen <vdebuen@tol-project.org>
    * btol/timeset_type/tms.cpp: Solved bug 305. In BHash
    BTimeSet::GetHashBetweenH(BReal hFirst, BReal hLast) a last
    iteration of date Successor is done for nothing. When last date of
    interval is the last date of a limited TimeSet an error happens
    because Successor not exists. 
    * btol/serie_type/tsrgrav.cpp: In functions
    BTsrDatingChange::FirstDate() y LastDate() has been introduced
    explicit object "BUserTimeSerie* ser = Ser();" for get a easier
    debuging 
    * bbasic/tol_bdate.h: In BDate constructor has been eliminated
    default value for BMonth m=JANUARY, in order to avoid erroneous
    castings from number to date. 
    
2005-09-13 Oscar Fernández García <ofernandez@tol-project.org>
    * initLibrary/tclutils/_tclutils.tol
        Added function GetDirHelpSection to read from the bst of 
        help of tolbase and projects.

2005-09-07 Victor de Buen <vdebuen@tol-project.org>
    * btol/timeset_type/tms.cpp : Solve bug 301: assignation from real
    hash to date was used by error instead of PutHash in Next and Prev
    functions building dates as y19990801m01d01 that are set to
    Unknown 
    * btol/timeset_type/tms.cpp, tmsgrav.cpp : Enhancement of "Non
    progressive"-like  error messages  
    
2005-09-05 Daniel Rus <danirus@tol-project.org>
    * btol/real_type/tol_bdatgra.h, datgsrst.cpp 
    Real Built-in Statistics Operations (to use alone or in
    combination with CSeries): 
    cFirstS, cLastS, cCountS, cMaxS, cMinS, cSumS, cAvrS, cVarS,
    cStDsS, cSubSampleAvrS, cSubSampleVarS, cSubSampleStDsS, cAsimetryS,
    cKurtosisS, cMedianS, cQuantileS, cMomentS, cCenterMomentS

    * btol/cseries_type/tol_bctsrgrav.h, ctsrgrav.cpp
    * btol/cseries_type/tol_bctsrgra.h, ctsrgra.cpp
    * btol/cseries_type/tol_bcseries.h, bcseries.cpp, Makefile.am
    Cseries Built-in Functions: 
    cRand, cGaussian, cPulse, cCompens, cStep, cTrend, cLine, cCalVar,
    cCalInd, cDatCh, cInvCh, cExpand, cSubSer, Polyn:Serie, cDifEq,
    cConcat,<<, >>
    
    * btol/ctime_type/tol_bctime.h, bctime.cpp
    * btol/ctimeset_type/tol_bctmsgra.h, ctmsgra.cpp, bctimeset.cpp
    Adjustments to support those new CSeries Built-in functions

2005-09-05 Victor de Buen <vdebuen@tol-project.org>
    * btol/timeset_type/tol_btmset.h, tms.cpp, tmsgrav.cpp : In order
    to reuse previous calculations about a TimeSet between two dates,
    the cached Vector hash_ created in GetHashBetween is now available
    for functions Contain, HashSuccessor, HashPredecessor, Next and
    Prev. So after GetHashBetween will be called, all data asked
    between the cached period of dates will not be recalculated but
    the answer will be searched in cached vector hash_. HashSuccessor,
    HashPredecessor will be used by inefficient functions like Succ,
    Range, Union, Intersection, ... 
    * btol/set_type/setgra.cpp : In function BSetDates::CalcContens()
    tms->GetHashBetween is called instead of dte+=tms getting a better
    performance.

2005-08-29 Daniel Rus <danirus@tol-project.org>
    * btol/ctimeset_type/Makefile.am
    * btol/ctimeset_type/tol_bctmsgra.h, tol_bctimeset.h
    * btol/ctimeset_type/ctmsgra.cpp, ctmsbool.cpp
    * btol/real_type/datgrav.cpp

    Improvements in "CTSAll*" Tol CTimeSet variables. 
    Improvement in "succ" and "pred" methods of CTmsIntersection. 
    BCTimeSet::isCompatibleWith method must have default values for
    2nd and 3th parameters.

    CSeries version of "SerDat" and "PutSerDat" Built-In Functions of
    Tol "Real" data type.
    
2005-08-25 Daniel Rus <danirus@tol-project.org>
    * configure.in
    * tol_blanguag.h, language.cpp
    * bparser/scn.cpp
    * btol/Makefile.am
    * btol/cseries_type/*
    * btol/bgrammar/tol_boper.h, spfuninst.cpp
    First approach to CSeries -> "Continuous Time"
    Some starting files for CSeries, with the first built-in function:
    cReadYearlyTable(Text file, CTimeSet dating, Real period)

2005-08-25 Daniel Rus <danirus@tol-project.org>
    * btol/serie_type/tsrgra.cpp
    Bug fixed (not in Bugzilla)
    ReadYearlyTable doesn't released the 2nd parameter after use it.
    http://www.tol-project.org/pipermail/cvs-devel/2005-August/001834.html

2005-08-22 Daniel Rus <danirus@tol-project.org>
    * configure.in
    * tol_blanguag.h, language.cpp
    * bparser/scn.cpp
    * bbasic/tol_bexc.h, tol_btimer.h, timer.cpp, 
    * btol/Makefile.am
    * btol/ctime_type/*
    * btol/ctimeset_type/*
    * btol/text_type/txtgra.cpp
    * btol/real_type/datgrav.cpp
    * btol/set_type/setgra.cpp
    * btol/bgrammar/tol_boper.h, tol_bgencon.h, tol_bgentmp.h,
    * ...graimp.cpp, spfuninst.cpp
    * win/tol_incwin.h, win/tollib.dsp
    New Tol Types: CTime and CTimeSet -> "Continuous Time"

2005-08-11 Daniel Rus <danirus@tol-project.org>
    * configure.in, Makefile.am
    * tai/*
    * win/libtai.dsp
    Tai Library, that supports "Continuous Time"

2005-08-04 Victor de Buen <vdebuen@tol-project.org>
    * btol/dat_type/datgra.cpp 
    At line 129 in function BDatNObject::Contens() must to discount the current dead objects

2005-07-18 Daniel Rus <danirus@tol-project.org>
    * btol/set_type/setgra.cpp
    Fixed Bug 287: http://bugs.tol-project.org/show_bug.cgi?id=287

2005-07-15 Victor de Buen <vdebuen@tol-project.org>
    * language.cpp : Sorry, I left a comma at the end of line 915
    because a I did not save before to commit it

2005-07-14 Daniel Rus <danirus@tol-project.org>
    * btol/bgrammar/oprimp.cpp
    Fixed Bug 283: http://bugs.tol-project.org/show_bug.cgi?id=283    
    
2005-07-14 Victor de Buen <vdebuen@tol-project.org>
    * btol/bgrammar/spfuninst.cpp
    I forgot to disable the output in line 579 'BOut::Disable();' that
    I removed for DEBUG purposes (Solved bug 284)
    * btol/code_type/cod.cpp: In BRRCode::Evaluate argument list of
    BUserDat* uY = UDat(eval_.Evaluator(NCons(uX))); was not destroyed
    if an error happened and uY became NULL.
    * language.cpp : A new test of referential integrity has been
    added. If there are lost or not deleted objects  at the end of TOL
    execution 'void Initialize(...)' then a message is sended to the
    user.


2005-07-13 Oscar Fernández García <ofernandez@tol-project.org>
    * initLibrary/arima/_arima.tol
        Added parameter TimeSet to the function ARIMAGetGaussian.

2005-07-11 Victor de Buen <vdebuen@tol-project.org>
    * spfuninst.cpp   : uIndex, the Index to fetch an element of a Set 
    in EvElement function, must be properly destroyed after been
    evaluated.
    * spfuninst.cpp   : When the left and right sides of := are just 
    the same object no action should be executed. So has been added 
    condition (val!=result) at line 681 in PutValue(...) function
    * tol_btsrgrav.h,
    * tsrgrav.cpp     : When no ini_ argument is given to DifEq then 
    is created a new object 'ini_ = new BTsrFromReal(BDat(0.0))' that 
    must be deleted in BTsrDifEq::~BTsrDifEq()
    graimp.cpp      : When no object is created in evaluation of 
    first_arg at line 343 then it is not necessary to erase it. 
    Obviously, this happens when the number of objects 
    'BSyntaxObject::NSyntaxObject()' not changes after the evaluation.
    * txthash.cpp,
    * tol_btxthash.h  : A static counter BDeadObject::deadObjects_ 
    is added to store the amount of BDeadObject objects. The rest 
    BSyntaxObject::NSyntaxObject()-BDeadObject::DeadObjects() will 
    be used as the total number of alive objects to test the 
    existence of not deleted or lost objects.

2005-07-08 Oscar Fernández García <ofernandez@tol-project.org>
    * initLibrary/arima/_arima.tol
        Added function GetARIMAFromLabel.

2005-07-07 Oscar Fernández García <ofernandez@tol-project.org>
    * initLibrary/arima/arima.tol
        Added functions ARIMAGetGaussian and ARIMADrawACFs to 
        draw AcFs and PACFs of ARIMA models.

2005-07-07 Daniel Rus <danirus@tol-project.org>
    * btol/serie_type/tol_btmser.h
    * btol/serie_type/tsr.cpp
    * btol/set_type/setgra.cpp
    * btol/real_type/datgra.cpp
    * btol/bdb/bdspool.cpp
    Fixed Bug 281: http://bugs.tol-project.org/show_bug.cgi?id=281
    Related with Serie variables exports in BDSeries, DBSeriesColumn,
    DBSeriesTable and IncludeBDT. A new global Tol var called
    GlobalizeSeries has been created.

2005-07-06 Victor de Buen <vdebuen@tol-project.org>
    * graimp.cpp : In line 342 first_arg was created to obtain its grammar 
    but it never was deleted.

2005-07-06 Oscar Fernández García <ofernandez@tol-project.org>
        * initLibrary/general/grammars/_inigramars.tol
        * initLibrary/general/grammars/_ratio.tol
        Added this file with function GetRatioFromLabel to obtain
        a ratio from then text label of the ARIMA model.

2005-07-05 Roberto Cuesta Soto <rcsoto@tol-project.org>
        * initLibrary/tclutils/_chart.tol
        * initLibrary/tclutils/_charttest.tol
        Added function to be able to draw Serie of Autocorrelation:
          TclChartSerieAutocor

2005-06-06 Miguel Angel <maarranz@tol-project.org>
    * btol/bkfilter/LLKKFSS.h btol/bkfilter/LLKKFSS.cc
    LogLikelihood of General State Space model with Kalman Filter

2005-06-07 Jorge <josp@tol-project.org>
    * bmath/gsl_ext/gsl_linalg_ext.c,test_svd.c
    When comparing to zero do not use fcmp, use fabs instead.
    * tmvn.c gsl_mvn_init check for square matrix
    
2005-06-06 Jorge <josp@tol-project.org>
    * bmath/gsl_ext/gsl_ext.h,test_svd.c
    missing prototype of gsl_svd_pinverse.
    added a test code for gsl_svd_matrix_t
    
2005-06-06 Jorge <josp@tol-project.org>
    * bmath/gsl_ext/gsl_ext.h,gsl_linalg_ext.c
        + gsl_svd_pinverse to compute the pseudo-inverse of a matrix. It use
    a gs_svd_matrix_t workspace.
    
    + gsl_svd_set to change a previously inited gsl_svd_matrix_t
    workspace. Useful when we need to performs multiples SVD on matrices
    having the same dimensions.

2005-06-06 Miguel Angel <maarranz@tol-project.org>
    * bmath/gsl_ext/gsl_ext.h  bmath/gsl_ext/gsl_linalg_ext.c
    gsl_MatSVDdetInverse 
    Simultaneously get determinant and  inverse of a matrix 

2005-06-01 Jorge <josp@tol-project.org>
    win/tollib.dsp : including tmvnd.c in compilation.

    bmath/gsl_ext/rcmnorm.c : #include <gsl/gsl_randist.h>

2005-06-01 Jorge <josp@tol-project.org>
    * btol/real_type/datgrapr.cpp New user functions :
    
    + Real DensMultiNormal(Matrix x, Matrix mean, Matrix cov [, Real
    log=1]);

    + Real DensMultiNormalTrunc(Matrix x, Matrix mean, Matrix cov,
    Matrix xl, Matrix xu [, Real log=1]);
    
2005-06-01 Jorge <josp@tol-project.org>
    * bmath/gsl_ext/gsl_util_ext.c -- gsl_matrix_table &
    gsl_vector_table moved into this file.
    * bmath/gsl_ext/gsl_ext.h,gsl_linalg_ext.c,tmvnd.c implementation
    of:
    + gsl_svd_matrix_t - workspace to deal with SVD. gsl_svd_init &
    gsl_svd_done to init and release it.

    + gsl_mvn_workspace_t - workspace to deal with multivariate normal
    density evaluations. gsl_mvn_init & gsl_mvn_done to init and
    release it.

    + gsl_tmvn_workspace_t - workspace to deal with truncated
    multivariate normal density evaluations. gsl_tmvn_init &
    gsl_tmvn_done to init and release it.

    + gsl_log_mvn_density - evaluate the log-density of a multivariate
    normal.

    + gsl_log_tmvn_density - evaluate the log-density of a truncated
    multivariate normal.

    NOTE: the rest of the code of gsl_linalg_ext.c should use the
    previous workspace as much as possible mainly gsl_svd_matrix_t.
    
    * bmath/gsl_ext/test_mvn.c -- test code for multivariate normal
    density and truncated.
    
2005-05-30 Jorge <josp@tol-project.org>
    * btol/matrix_type/tol_gslmat.h -- functions to convert from a TOL
    column vector to a gsl_vector:
    
    bmat_to_gsl(BMatrix<BDat> & tol_mat, gsl_vector * & gsl_vec);
    gsl_to_bmat(gsl_vector * gsl_vec, BMatrix<BDat> & tol_mat);
    
    * btol/bgrammar/spfuninst.cpp -- Implementation of
    MetropolisHasting workspace.
    Anything MHWSPut(Real ID_WS, Real IdxObj, Anything NewValue)
    Anything MHWSGet(Real ID_WS, Real IdxObj)
    
    * btol/matrix_type/gibbssampler.cpp --
    Now MetropolisHasting function receive an optional argument with
    the definition of a workspace. Every chain will have a workspace
    with the same structure. In the block simulation we can access the
    workspace using the functions MHWSPut and MHWSGet. While
    performing one step for one block we can modify any element of the
    workspace, and if the block is accepted all the elements are
    accepted in other case the modified values are also rejected.
    
    * btol/real_type/datgrav.cpp -- changed default value for k
    argument in LLKNoise. Default value is 0.
    
2005-05-26 Jorge <josp@tol-project.org>
    * btol/set_type/setgra.cpp
        Change in description of LLKNoise , should be 'estimate of
    varianze ...' instead of 'sum of squared ...'
    
2005-05-26 Jorge <josp@tol-project.org>
    * btol/set_type/setgra.cpp
    LLKNoise also defined in grammar Set. In this Grammar the result
    is a set similar to [[s2,llk]], where s2 is the sum of squared
    residuals and llk is the log of the likelihood.

2005-05-25 Miguel Angel <maarranz@tol-project.org>
    * btol/real_type/llkarma
    Fixed s2 estimation and changed default value of k
    It returns estimated sigma2 as well
    
2005-05-24 Miguel Angel <maarranz@tol-project.org>
    * btol/real_type/llkarma
    Tuned function LLKNoise (needs further testing)
    * btol/matrix_type/matgra.cpp bmath/bstat/tol_bstat.h
    bmath/bstat/stat.cpp
    Eventullay fixed behavior of ACF and PACF
    
2005-05-18 Daniel Rus <danirus@tol-project.org>
        * btol/bgrammar/spfuninst.cpp
    Fixed Bug 263: http://bugs.tol-project.org/show_bug.cgi?id=263

2005-05-18 Daniel Rus <danirus@tol-project.org>
        * btol/bgrammar/tol_bgrammar.h
    * btol/bgrammar/graacc.cpp
    * btol/bmodel/model.cpp
    Fixed Bug 264: http://bugs.tol-project.org/show_bug.cgi?id=264

2005-05-19 Miguel Angel <maarranz@tol-project.org>
    * bmath/bstat/stat.cpp: fixed ACF function

2005-05-17 Miguel Angel <maarranz@tol-project.org>
    * btol/real_type/llkarma.cpp : fixed BigH and SigmaU

2005-05-17 Jorge <josp@tol-project.org>
    * btol/matrix_type/matgra.cpp: Vech operator.
    
2005-05-17 Miguel Angel <maarranz@tol-project.org>
    * tol/bmath/gsl_ext/gsl_ext.h tol/bmath/gsl_ext/gsl_linalg_ext.c
    Added gsl_vecop, the vec operator

2005-05-12 Daniel Rus <danirus@tol-project.org>
        * bbasic/dtealgeb.cpp
    Fixed Bug 259: http://bugs.tol-project.org/show_bug.cgi?id=259

2005-05-12 Daniel Rus <danirus@tol-project.org>
        * btol/set_type/ser.cpp
    Fixed Bug 254: http://bugs.tol-project.org/show_bug.cgi?id=254

2005-05-10 Miguel Angel <maarranz@tol-project.org>
    * tol/bmath/gsl_ext/gsl_ext.h tol/bmath/gsl_ext/gsl_linalg_ext.c
    Added different functions:
      gsl_rwish: generate random draws from Wishart dstribution
      gsl_riwish: generate random draws from InvWishart dstribution

2005-05-09 Jorge <josp@tol-project.org>
    * btol/matrix_type/tol_gslmat.h functions to convert bewteen BMat
    and gsl_matrix : bmat_to_gsl, gsl_to_bmat. See comments inside
    code.
    * btol/matrix_type/matgra.cpp : using previous functions.
    * win/win_tolinc.h: including new header tol_gslmat.h
    
2005-05-09 Miguel Angel <maarranz@tol-project.org>
    * tol/bmath/gsl_ext/gsl_ext.h tol/bmath/gsl_ext/gsl_linalg_ext.c
    Added different functions:
    
      + gsl_MatSVDInverse(A, Ainverse)
        Calculate the pseudo inverse of matrix using the SVD
        decomposition:  gsl_MatSVDinverse(

      + gsl_MatInverse(A, Ainverse)
           Calculate the pseudo inverse of matrix using the LU
       decomposition.
    
          + gsl_MatSVDdet 
             Returns the determinant of Matrix using the SVD decomposition 

           + gsl_Matdet 
              Returns the determinant of Matrix using the LU decomposition 

            + gsl_Solve_LU 
            Solves the systems AX=B with the LU decomposition 

    
2005-05-08 Javier Portugal <javipor@tol-project.org>
    * tol/initlibrary/general/grammars/_text.tol
    TxtListTcl returns "" instead of "{}" when recives an Empty set

2005-05-05 Jorge <josp@tol-project.org>
    * bmath/gsl_ext/Makefile.am : gsl_linalg_ext.c added
    * gsl_ext/gsl_ext.h,gsl_linalg_ext.c : implementing
    gsl_kronecker_prod following the GSL API.
    * btol/matrix_type/tol_bmatgra.h,matgra.h: KroneckerProduct moved
    to gsl_ext. API Changed and bug fixed.
    
2005-05-05 Miguel Angel <maarranz@tol-project.org>
    * btol/matrix_type/matgra.cpp btol/matrix_type/tol_bmatgra.h
    Included function KroneckerProduct

2005-04-28 Jorge <josp@tol-project.org>
        * btol/matrix_type/gibbssampler.cpp
    Changes in the format of the description of MetropolisHastings.
    
2005-04-28 Jorge <josp@tol-project.org>
        * btol/matrix_type/gibbssampler.cpp bug related to assert in
    windows. assert does not evaluate the expression when _NDEBUG is
    defined so be carefull when using assert on windows!.
    
2005-04-27  Roberto Cuesta Soto <rcsoto@tol-project.org>
        * tol/initLibrary/tclutils/_tabulate.tol
        * tol/initLibrary/tclutils/_tabulatetest.tol
        Extended the function "TclTabulateSerie" so that it allows tabular
        a set of series.
        Updated the descriptions of the functions.

2005-04-25 Miguel Angel Arranz  <maarranz@tol-project.org>
    bmath/bstat/tol_bstat.h, stat.cpp: Added paramater demean. It will
    demean by default in AutoCov and Autocor functions

2005-04-22 Oscar Fernández <ofernandez@bayesinf.com>
    * initLibrary/tclutils/_entry.tol
    * initLibrary/tclutils/_entrytest.tol
        Fixed bug when a title was not introduced on dialogs.
        Fixed bug when a return value was not sected on function 
        TclDialogComboPlus.
    * initLibrary/tclutils/_tclutils.tol
        Added default value for option -title.

2005-04-20 Jorge <josp@tol-project.org>
        * btol/matrix_type/gibbssampler.cpp: bug that happened only
    randomly (no joke!) related with the first iteration of the MH
    algorithm (valgrind is a great tool).
    
2005-04-18 Jorge <josp@tol-project.org>
        * btol/matrix_type/gibbssampler.cpp "argument" is_symmetric now is
    only needed when "type" != 0. Description fixed. Fixed a bug in
    draw_mh_generic. Directory test_MH contains the files for testing
    "Understanding MH": binormal_MH.tol for section 7.1 and ar2_MH.tol
    for section 7.2. Right now ar2_MH.tol is wrong (any volunteer to
    check it?)

2005-04-17 Jorge <josp@tol-project.org>
    * btol/real_type/datgrapr.cpp: Bug in RandGamma. Parameter b was
    considered as scale, but gsl_ran_gamma consider it as rate. rate =
    1/scale. Now RandGamma expect b as scale by default but a third
    argument could tell us that b is a rate. When b is scale the
    appropiate conversion is performed befored being passed to
    gsl_ran_gamma.
    * btol/matrix_type/test_MH/ar2_MH.tol: after applying the previous
    changes the code related to section 7.2 of UMH starts to run
    better. Needs more validation!

2005-04-16 Jorge <josp@tol-project.org>
        * btol/matrix_type/gibbssampler.cpp,
    * btol/matrix_type/test_MH/*.tol : now if, in a block definition,
    the 'symmetric' argument is 1 then there is no need to provide the
    kernel density evaluator. ar2_MH.tol still is not giving the same
    results as section 7.2. Again: (any volunteer to check it?)

2005-04-08 Jorge <josp@tol-project.org>
        * btol/matrix_type/gibbssampler.cpp new argument in position [4]
    of a block definition to provide the initial state of the block
    given as a column vector. Now the example in "Understanding MH"
    corresponding to section 7.1 has being tested. Alpha testing still
    in progress ....

2005-04-07 Jorge <josp@tol-project.org>
        * btol/matrix_type/gibbssampler.cpp implementation of
    MetropolisHastings. Testing in progress.
    
2005-03-31 Oscar Fernández <ofernandez@bayesinf.com>
    * initLibrary/tclutils/_entry.tol
        Function TclDialogComboPlus modified to return the value of any column.
    * initLibrary/tclutils/_entrytest.tol
        Added example of function TclDialogComboPlus.

2005-03-31 Jorge <josp@tol-project.org>
    * win/config.h :  #define __USE_DYNSCOPE__ 1
    
2005-03-30 Oscar Fernández <ofernandez@bayesinf.com>
    * initLibrary/tclutils/_entry.tol
    * initLibrary/tclutils/_entrytest.tol
        Added function TclDialogCombo and test for this function.

2005-03-23 Jorge <josp@tol-project.org>
    * btol/real_type/
    * llkarma.{h,cpp} LLKR new argument sigma2 in case we now it. If 0 is
    provided the it is computed from the residuals.
    * datgrav.cpp LLKNoise new argumentsigma2 (see LLKR). Fixing when
    converting coeficients from BPol to gsl_vector.

2005-03-22 Daniel Rus <danirus@tol-project.org>
    * configure.in 
    * Makefile.am 
    * btol/bdb/Makefile.am
    * dbdrivers/ <- New Directory
    
    New configure option --enable-dbdrivers force Tol to be compiled
    with support for direct access to databases. In order to acomplish
    this we can specify one of the next configure command line
    options. If you don't give such options, configure looks for the
    sources and libraries that needs to build Tol properly with DB
    Direct Access Support.

    Related configure options:
       1. Path to MySQL files:
          --with-mysql=<dir>
          --with-mysql-includes=<dir>
          --with-mysql-libraries=<dir>
       2. Path to unixODBC files: (direct ODBC connection using unixODBC)
          --with-unixodbc=<dir>
          --with-unixodbc-includes=<dir>
          --with-unixodbc-libraries=<dir>
       3. Path to iODBC files: (direct ODBC connection using iODBC)
          --with-iodbc=<dir>
          --with-iodbc-includes=<dir>
          --with-iodbc-libraries=<dir>    
    
2005-03-18 Daniel Rus <danirus@tol-project.org>
        * btol/bgrammar/str.cpp
    Fixed Bug 249: http://bugs.tol-project.org/show_bug.cgi?id=249

2005-03-11 Daniel Rus <danirus@tol-project.org>
        * btol/bgrammar/str.cpp
    Fixed Bug 246: http://bugs.tol-project.org/show_bug.cgi?id=246

2005-03-11 Daniel Rus <danirus@tol-project.org>
        * btol/bgrammar/spfuninst.cpp
    Fixed Bug 247: http://bugs.tol-project.org/show_bug.cgi?id=247

2005-03-08 Daniel Rus <danirus@tol-project.org>
    * btol/timeset_type/tmsgrav.cpp:
    Fixed Bug 186: http://bugs.tol-project.org/show_bug.cgi?id=186

2005-03-03 josp <josp@tol-project.org>
    * btol/real_type/datgrav.cpp: aditional argument k.
    
2005-03-02 josp <josp@tol-project.org>
    * bmath/gsl_ext/gsl_ext.h:
    * bmath/gsl_ext/rcmnorm.c : gsl_{vector/matrix}_table accept a
    separtor character as argument. Test in gsl_rcmnorm_draw in order
    to avoid sampling fom an invalid interval. Invalid intervals
    appears when covariances matrices are almost singular. A more
    robust solution should be found.

2005-03-01 josp <josp@tol-project.org>
        * btol/matrix_type/matgra.cpp: GibbsRectangleMNormal,
    RandRectangleMNormal to help in sampling from a multinomal
    constrained to a multidimensional rectangle.
    
2005-03-01 josp <josp@tol-project.org>
    * bmath/gsl_ext/gsl_ext.h:
    * bmath/gsl_ext/rcmnorm.c :
    gsl_check_constraints internal rutine to verify
    constraints. gsl_rcnorm now receive an argument x0 as initial
    value for the Gibbs sampler. gsl_rectangle_alloc build a
    constraint system for "rectangular" domains.
    * bmath/gsl_ext/test_rcmnorm.c : updated to changes in gsl_ext.h

2005-02-28  Javier Portugal Alonso <javipor@tol-project.org>
        * tol/initLibrary/general/grammars/_anything.tol
        * tol/initLibrary/general/grammars/_text.tol
        Added directory general with general funcions.
        Included some new text and anything functions

2005-02-28  Javier Portugal Alonso <javipor@tol-project.org>
        * tol/initLibrary/tclutils/_tclutils.tol
        * tol/initLibrary/tclutils/_char.tol
        * tol/initLibrary/tclutils/_chartest.tol
        * tol/initLibrary/tclutils/_tabulate.tol
        * tol/initLibrary/tclutils/_tabulatetest.tol
        TCL arguments are TEXT. Modified chart and table functions to use
        Text arguments. Descriptions and test revised.
    
2005-02-25 josp <josp@tol-project.org>
    * btol/real_type/llkarma.h: change in prototype, now caller must
    allocate the matrix.
        * btol/real_type/llkarma.cpp: bug in diagonal matrix initialization.

2005-02-24  Javier Portugal Alonso <javipor@tol-project.org>
        * tol/initLibrary/tclutils/_tclutils.tol
        * tol/initLibrary/tclutils/_entry.tol
          tol/initLibrary/tclutils/_entrytest.tol
        * tol/initLibrary/tclutils/_messagebox.tol
          tol/initLibrary/tclutils/_messageboxtest.tol
        Incorporated new functions to ask for a value (text, date, file or
        directory) even giving a list of values (for text values). Also
        incorporated functions to pop up a message.
        Addes some functions to manage tcl widget attributes.
        Added some test to verify the correct functionality.
    
2005-02-24 josp <josp@tol-project.org>
    * btol/matrix_type/matgra.cpp : bug in DifEq when
    X0=0 || Y0 = 0.
    * btol/real_type/Makefile.am,
    * btol/real_type/datgrav.cpp,llkarma.cpp,llkarma.h: implementing
    LLKNoise(N, pAR, pMA) -- log likelihood for a noise with arma structure.
    
2005-02-23 hamoros <hamoros@tol-project.org>
    initLibrary/tclutils/_tclutils.tol
    initLibrary/tclutils/_buttonbar.tol
    initLibrary/tclutils/_buttonbartest.tol
    initLibrary/tclutils/_chart.tol
    initLibrary/tclutils/_charttest.tol
    initLibrary/tclutils/_entry.tol
    initLibrary/tclutils/_entrytest.tol
    initLibrary/tclutils/_messagebox.tol
    initLibrary/tclutils/_messageboxtest.tol
    initLibrary/tclutils/_progressbar.tol
    initLibrary/tclutils/_progressbartest.tol
    initLibrary/tclutils/_tabulate.tol
    initLibrary/tclutils/_tabulatetest.tol
    Parameter providing method changed.
    When a parameter is required, it is passed to the function in the old
    manner. All the rest of optional paramenters are passed in a set, and
    cn be specified or not, the order also is not relevant.
2005-02-22 josp <josp@tol-project.org>
    * btol/matrix_type/matgra.cpp,
    * bmath/gsl_ext/rcmnorm.c : bug in argument checking.
    
    * bmath/bprdist/prd.cpp: working a bit more in order to reach
    randomness in seed initialization

2005-02-22 josp <josp@tol-project.org>
    * btol/text_type/txtgra.cpp: GetRandomName -- Returns the name of
    the default random generator."
    
    * bmath/bprdist/prd.cpp, tol_bprdist.h:seed for random generator is
    selected in a random way (this can be improved)

2005-02-18 josp <josp@tol-project.org>
    * win/tollib.dsp : including gsl_ext in compilation.
    
    * bmath/gsl_ext/rcmnorm.c, gsl_ext.h: new functions
    gsl_matrix_table -- write a matrix in a FILE using a table format.
    gsl_vector_table -- write a vector in a FILE using a table format
    as a row. 
    gsl_rcmnorm_last -- in order to obtain the last sample in the
    chain.    
    Added test_rcmnorm.c, test_rtnorm.c, test_rcmnorm.tol : internal
    test code.
    
    * btol/matrix_type/matgra.cpp : new user function to generate a
    markov chain for a truncated multivariate normal, the truncation
    region given by a set of linear constraints Bx <= b. The functions
    are:

    GibbsConstrainedMNormal -- to obtain the whole chain.
    
    RandConstrainedMNormal -- to obtain only the last sample in the
    chain.

    * btol/real_type/datgrapr.cpp: modified the interface of
    RandIChisq, now a scale parameter can be given to simulate a
    scaled inversed chi-squared. New user function DrawTruncatedNormal
    in order to obtain a truncated normal distributed random variable.
    
2005-02-17 josp <josp@tol-project.org>
    * bmath/gsl_ext/rcmnorm.c, gsl_ext.h: implementation of sampling
    from truncated multivariate normal where truncation is specified
    by a linear constraints system Bx <= b.  COV decomposition is done
    by Cholesky, but will be replaced by a SVD which is numerically
    more stable.
    
2005-02-10 Daniel Rus <danirus@tol-project.or>
    * btol/bgrammar/txthash.cpp
    Fixed Bug 240: http://bugs.tol-project.org/show_bug.cgi?id=240
    A collision between names in Symbol Table produces a segmentation
    fault.

2005-02-09 Daniel Rus <danirus@tol-project.org>
    * btol/real_type/datgrav.cpp
    Fixed Bug 237: http://bugs.tol-project.org/show_bug.cgi?id=237

2005-02-09 Daniel Rus <danirus@tol-project.org>
    * bmath/mathobjects/tol_bpolyn.h
    Fixed Bug 233: http://bugs.tol-project.org/show_bug.cgi?id=233

2005-02-09 josp <josp@tol-project.org>
    * bmath/gsl_ext new dir to implement new functionalities to be
    proposed to GSL.
    * bmath/gsl_ext/gsl_ext.h, rtnorm.c implementing univariate
    truncated normal.
    
2005-02-07 josp <josp@tol-project.org>
    * btol/bmonte/mc-integrator.cpp : fixed
    http://bugs.tol-project.org/show_bug.cgi?id=229
    
2005-02-01  Hugo Amorós Salvador <hamoros@tol-project.org>
        * tol/initLibrary/tclutils/_tabulate.tol
        * tol/initLibrary/tclutils/_tabulatetest.tol
        Incorporated new functions to show a table of sets, matrices and
    series. The functions are: TclTabulateSerie, TclTabulateMatrix and
    TclTabulateSet.
        Added a test to verify the correct functionality.

2005-01-31 Daniel Rus <danirus@tol-project.org>
    * tol_bcommon.h
    * btol/bgrammar/tol_bgrammar.h
    * btol/bgrammar/tol_boper.h
    * btol/bgrammar/tol_bsyntax.h
    * btol/bgrammar/tol_bstruct.h
    * btol/bgrammar/tol_bmethod.h
    * btol/bgrammar/txthash.cpp
    * btol/bgrammar/opr.cpp
    * btol/bgrammar/graimp.cpp
    * btol/bgrammar/graacc.cpp
    * btol/bgrammar/met.cpp
    * btol/code_type/tol_bcodgra.h
    * btol/code_type/codgra.cpp
    Implements enhancement 219: 
    http://bugs.tol-project.org/show_bug.cgi?id=219
    This enhancement implements a new cool feature in Tol called "User
    Function Overloading". Tol never let us create more than one user
    function with the same name. Symbols Table hasn't that
    facility. Now we can write code like this:
      _________________________________
      // Code Example 1
      Code f = FindCode("Real", "+");
      Real a = f(3,4);

      // Code Example 2
      Real a = 1;
      Real a (Real param) { param };
      Real b = a(a);
      Code a;

      // Code Example 3
      Real func (Real param) { param };
      Text func (Text param) { param };
      Real x = func(2);
      Text y = func("Servus!");

      // Code Example 4
      Serie IDelta(Serie Ser) { DifEq(1/(1-B), Ser, 0) };
      PutDescription("Something to explain this function",IDelta);

      // Code Example 5
      Text Func(Text param) { param };
      Set s = SetOfAnything(Func);

      // Code Example 6
      Set getNameSP(Text vorname, Text name) 
        { SetOfAnything(vorname, name) };
      Set getNameUK(Text vorname, Text name) 
        { SetOfAnything(name, vorname) };
      Text getNameSP(Text vorname, Text name) { vorname + " " + name };
      Text getNameUK(Text vorname, Text name) { name + ", " + vorname };
      Text names(Text vorname, Text name, Code fun) { fun(vorname, name) };

      Text aText = getNameSP("Peter", "Jackson");
      Set  aSet  = getNameSP("Peter", "Jackson");
      Text aText2 = names("Peter", "Jackson", Text getNameSP);
    

2005-01-28 josp <josp@tol-project.org>
    * btol/matrix_type/gibbssampler.cpp
    * btol/matrix_type/multimin.cpp FastEvaluator is not working due
    to the change in scope model. Now Evaluator is used again.
    * btol/bgsl/tolgsl.cpp same as before but also solve bug
    http://bugs.tol-project.org/show_bug.cgi?id=223
    
2005-01-26 josp <josp@tol-project.org>
    * bmath/bstat/arma.cpp Important comment about MatBackwardDifEq
    * btol/matrix_type/tol_mat.hpp Alloc method allocate only if it's
    necesary. Also reallocation is invoked if needed.
    * btol/serie_type/tol_btsrgrp.cpp new constructor as a helper when
    we want to build a table for only one BTimeSerie.
    * btol/set_type/set.cpp BSet::ChangeElement, DESTROY will be
    useless because car has a nRefs > 0 (SHOULD BE VERIFIED!).
    
2005-01-24  Daniel Rus <danirus@tol-project.org>
    * language.cpp
    * btol/bgrammar/spfuninst.cpp
    Resolves bug 218: http://bugs.tol-project.org/show_bug.cgi?id=218
    
    Tol ":=" operator (EvPutValue function in spfuninst.cpp) always 
    returns a BSyntaxObject that never should be appended to Console
    Objects List (MultyEvaluate function in language.cpp).
    Please read that Bug URL to get more information.

2005-01-23  Daniel Rus <danirus@tol-project.org>
    * btol/text_type/txtgra.cpp
    * btol/bgrammar/tol_boper.h
    * tolp/tol/btol/bgrammar/oprimp.cpp
    Resolves bug 215 and 216: 
    http://bugs.tol-project.org/show_bug.cgi?id=215
    http://bugs.tol-project.org/show_bug.cgi?id=216
    
    Tol "Arguments" (type Text) built-in function now can be used with
    all of its declared parameters. The funcion declaration is:
    Text Arguments(Code function 
                   [, Real numArg=0, 
                  Text infoType={"";"TYPE";"NAME"} ])
    1- Only param "function" is given -> Returns all function declared
    parameters.
    2- Also numArg and infoType is given -> Returns specific parameter
    information. i.e.:
      _______________________
      Real func(Real p1, Text p2) { 
        [...]; whatever tol code; [...] 
      };

      Text ej1 = Arguments(func); // ej1 = "(Real p1, Text p2)"
      Text ej2 = Arguments(func, 1, "TYPE"); // ej2 = "Real"
      Text ej3 = Arguments(func, 1, "NAME"); // ej3 = "p1"
      Text ej4 = Arguments(func, 2, "TYPE"); // ej4 = "Text"
      Text ej5 = Arguments(func, 2, "NAME"); // ej5 = "p2"


2005-01-23 Daniel Rus <danirus@tol-project.org>
    * btol/bgrammar/spfuninst.cpp
    * btol/bgrammar/graacc.cpp
    Resolves bug 214: http://bugs.tol-project.org/show_bug.cgi?id=214

    Tol "MakeGlobal" (type Anything) built-in function now can export 
    more than one local variable within each Local Scope:
      _______________________
      Real func(Real param) {
        Real locvar1 = 10;
        MakeGloba(locvar1);  // exporting to global scope
        Real locvar2 = 20;   // exporting to global scope
        MakeGlobal(locvar2);
        param
      };        
      Real x = 1;
      Real y = func(x);
      Real a = locvar1;  // now, after func call, locvar1 is global
      Real b = locvar2;  // now, after func call, locvar2 is global
    

2005-01-20  Hugo Amorós Salvador <hamoros@tol-project.org>
        * tol/initLibrary/_inittol.tol
        * tol/initLibrary/tclutils/_inittclutils.tol
        * tol/initLibrary/tclutils/_progressbar.tol
        * tol/initLibrary/tclutils/_progressbartest.tol
        Added a set of functions to display a progressbar in TolBase interface
    There is a test file (_progressbartest.tol) which demonstrates the use.

2005-01-19 Daniel Rus <danirus@tol-project.org>
    * btol/bgrammar/oprimp.cpp
    Improving the error message that Tol must return with code like
    this:
      _______________________
      Real func(Real param) {
        Real param = 2;
        1
      };        
      Real x = 1;
      Real y = func(x)

    Or:
      __________________________________________
      Set Include("path_to_tolfile/tolfile.tol");
      Real x = 1;
      Real y = func(x)

    Given a tolfile.tol with a definition of function "func" like the one
    given above. Now Tol returns an error message like:

    Variable 'param' already defined as parameter of the function 'func'
    File: path_to_tolfile/blablabla.tol
    

2005-01-13  Roberto Cuesta Soto <rcsoto@tol-project.org>
        * tol/initLibrary/tclutils/_chart.tol
          tol/initLibrary/tclutils/_charttest.tol
        Modified the type of the functions TclChartSerie, TclChartMatrix
        and TclChartSet, replaced Text by Set, thus to be able to control
        possible errors.
        Controlled the error when draw

2005-01-11  Roberto Cuesta Soto <rcsoto@tol-project.org>
        * tol/initLibrary/tclutils/_chart.tol
          tol/initLibrary/tclutils/_charttest.tol
        Incorporated new functions to paint sets, matrices and series.
        The functions are: TclChartSerie, TclChartMatrix and TclChartSet
        Added a test to verify the correct functionality.

2004-11-22  Jorge Suit <josp@tol-project.org>
    * btol/matrix_type/matgra.cpp
    Related to bug
    http://bugs.tol-project.org/cgi-bin/bugzilla/show_bug.cgi?id=198
    EQ = Eq in matrix.
2004-11-13  Daniel Rus <danirus@tol-project.org>
    * btol/bgrammar/spfuninst.cpp
    Solution for bug 194. Related with "EvPutName" function.
    http://bugs.tol-project.org/show_bug.cgi?id=194.    
    
2004-11-12  Manuel Balderrábano  <manuelb@tol-project.org>

    * btol/real_type/setgra.cpp, btol/bdb/dbtol.cpp:
    Added DBRTrim constant to cut out spaces on the right of
    Text fields when accessing a database. This idea comes from 
    desarrollo-tol list.

2004-11-05  <josp@tol-project.org>

    * btol/set_type/setgra.cpp:
    Fixed bug 187 in Range function
    http://bugs.tol-project.org/cgi-bin/bugzilla/show_bug.cgi?id=187
    
2004-11-04  Daniel Rus  <danirus@tol-project.org>
    * bparser/fil.cpp:
    Solution for bug 165. Visit next URL for further information.
    http://bugs.tol-project.org/show_bug.cgi?id=165.

2004-10-29  Manuel Balderrábano  <manuelb@tol-project.org>

        * btol/serie_type/tests/TestRealSerie.tol
        Added test to detect bugs 164, 173, 174, 177 and 191:
        http://bugs.tol-project.org/cgi-bin/bugzilla/show_bug.cgi?id=164
        http://bugs.tol-project.org/cgi-bin/bugzilla/show_bug.cgi?id=173
        http://bugs.tol-project.org/cgi-bin/bugzilla/show_bug.cgi?id=174
        http://bugs.tol-project.org/cgi-bin/bugzilla/show_bug.cgi?id=177
        http://bugs.tol-project.org/cgi-bin/bugzilla/show_bug.cgi?id=191

2004-10-29  Daniel Rus  <danirus@tol-project.org>

    * btol/serie_type/srg.cpp btol/serie_type/tol_btmser.h
    btol/serie_type/tol_btsrgra.h btol/serie_type/tol_btsrgrp.h
    btol/serie_type/tsrgra.cpp btol/serie_type/tsrgrai.cpp:

    Changes to resolve:
    http://bugs.tol-project.org/show_bug.cgi?id=191
    The problem was related with dating_ attribute of BTsrFromReal. I
    just implement a solution based on a new attribute for class
    BTimeSerie. This new attribute, called datingType_ can has two
    values: FIXED or VOLATILE. Using a VOLATILE dating_, Tol can
    choose the correct dating between one FIXED and one or more
    VOLATILEs. All those operations are done inside a BSerieGroup
    object.
_________________________
2004-10-28  TDT 
    Released version 1.1.2
    
2004-10-27  Manuel Balderrábano  <manuelb@tol-project.org>
  * btol/set_type/setgra.cpp: Reprogrammed IncludeBMT function due to bug #171:
  http://bugs.tol-project.org/show_bug.cgi?id=171
  Now the function is about 20 times faster, and row and column number is limited
  to the amount of memory avaliable.

2004-10-20  Manuel Balderrábano  <manuelb@tol-project.org>

    * btol/bdb/bdspool.cpp: Added a new function in response of wish given in Bug 38:
    http://bugs.tol-project.org/show_bug.cgi?id=38
    Is is named DBTableColumn, and creates a table-like set from a SQL query.
    It's behaviour is much like DBSeriesTable, but this one returns a full 
    Set instead of a Serie.

2004-10-15  Manuel Balderrábano  <manuelb@tol-project.org>

    * btol/timeset_type/tol_btmsexc.h:
    Using fully qualified names when declaring string variables solves a problem when compiling using Visual C++.

2004-10-14  Victor de Buen  <vdebuen@tol-project.org>

    * btol/date_type/tol_bdtegra.h, bmath/mathobjects/tol_bcomplex.h, bmath/mathobjects/tol_bdat.h, bmath/mathobjects/tol_bpolyn.h, btol/code_type/tol_bcodgra.h, btol/complex_type/tol_bcmpgra.h, btol/matrix_type/tol_bmatgra.h, btol/matrix_type/tol_bmatrix.h, btol/polynomial_type/polgra.cpp, btol/polynomial_type/tol_bpolgra.h, btol/ratio_type/tol_bratgra.h, btol/set_type/tol_bsetgra.h, btol/text_type/tol_btxtgra.h:
    Changes for export functions, classes and templates

2004-10-13  Daniel Rus  <danirus@tol-project.org>

    * btol/bgrammar/graimp.cpp: Resolves bug 180:
    http://bugs.tol-project.org/show_bug.cgi?id=180
    The problem was a bad behavior in the Evaluator, when a "Set Include" sentence appears in a local scope.

    * btol/set_type/setgra.cpp: Resolves bug 160:
    http://bugs.tol-project.org/show_bug.cgi?id=160
    The problem was an incrementation of number of references to "TimeSet fec".
    Now the "TimeSet fec" given in the example will be destroyed in decompilation.

    * btol/serie_type/tsrgrav.cpp:
    A little rewrite to avoid unnecessary random request in BTsrGaussian.
    (Also related with bug 170, like the last commit).

2004-10-12  Daniel Rus  <danirus@tol-project.org>

    * btol/serie_type/tol_btsrgrav.h, btol/serie_type/tsrgrav.cpp:
    A partial solution for the Bug 170:
    http://bugs.tol-project.org/show_bug.cgi?id=170
    titled: "Problems with DifEq and Estimate when using Gaussian"

    With this solution we can get a fixed Gaussian Serie, once we have defined it.
    I'll try this code (under Linux and under Windows):

    Serie ser = Gaussian(0,1,Diario);
    Real r1 = SerDat(ser, y2004m01d01);
    Real r2 = SerDat(ser, y2004m02d02);
    Real r3 = SerDat(ser, y2004m01d01);
    Real r4 = SerDat(ser, y2004m02d02);

    Serie subSer = SubSer(ser, y2000m01d01, y2000m12d31);
    Real rs1 = SerDat(subSer, y2000m01d01);
    Real rs2 = SerDat(subSer, y2000m02d02);
    Real rs3 = SerDat(subSer, y2000m01d01);
    Real rs4 = SerDat(subSer, y2000m02d02);

    And the results is on the expected way, it works properly.
    By now this is a partial solution, we have to work still with the Random Numbers Generator.

    * btol/serie_type/tsr.cpp, btol/serie_type/tsrgra.cpp:
    Resolves bug 173, 174, and 177.
    All those bugs have just been patched.
    Although I'm providing a solution for them, Tol Parser and Tol Evaluator have             design problems that are making necessary a reimplementation: Semantic analysis should be done by the Evaluator, but in fact, this work is not properly done.

2004-10-09  Daniel Rus  <danirus@tol-project.org>

    * bparser/par.cpp: Resolves bug 179:
    http://bugs.tol-project.org/show_bug.cgi?id=179

    The problem was a bad precedence value for Monary Token ! (not).
    Before the solution, with a sentence like:
    _____________________
      Real out2=!fun(0)+!fun(1)

    Tol creates a syntactical tree with bad position for token !, as you can see below:

       ----> [BINARY]=
        |----> [TYPE]Real
        | |----> [ARGUMENT]out2
        |----> [MONARY]!
          |----> [BINARY]+
            |----> [FUNCTION]fun
            | |----> [ARGUMENT](0)
            |----> [MONARY]!
              |----> [FUNCTION]fun
                |----> [ARGUMENT](1)

    Now, with that sentence, we get this syntactical tree:

       ----> [BINARY]=
        |----> [TYPE]Real
        | |----> [ARGUMENT]out2
        |----> [BINARY]+
          |----> [MONARY]!
          | |----> [FUNCTION]fun
          |   |----> [ARGUMENT](0)
          |----> [MONARY]!
            |----> [FUNCTION]fun
              |----> [ARGUMENT](1)

    Yo can see now, that monary token ! has more precedence.
    It is only a little problem in BParseMonary method.

2004-10-08  Daniel Rus  <danirus@tol-project.org>

    * btol/timeset_type/Makefile.am: Also related with bug 29.

    * win/win_tolinc.h: Also related with the resolution of bug 29.

    * btol/bgrammar/tol_boper.h, btol/timeset_type/tmsgra.cpp, btol/timeset_type/tol_btmsexc.h, btol/timeset_type/tol_btmsgra.h, tol_bcommon.h:
    Resolves the reopened bug 29:
    http://bugs.tol-project.org/show_bug.cgi?id=29

    We corrected this bug with that explicit behaviour in order to give Tol Programmers
    a fault tolerance level using WD TimeSet function.

    I've undone those changes and now WD only accepts a range from 1 to 7.

    The new description of the WD function: TimeSet WD "Returns the time set of all
    dates that are the n-th day of the week. Parameter n should be in a range between
    1 (Monday) and 7 (Sunday)."

    If we try "TimeSet ts = WD(n)" with a n-value less than 1 or greater than 7, we
    get an error message.

    * btol/serie_type/tol_btmser.h, btol/serie_type/tol_btsrgrav.h, btol/serie_type/tsr.cpp, btol/serie_type/tsrgrav.cpp:
    Resolves a bad behaviour related in Bug 79.

    Since that bug was closed, we have been talking about the behaviour of SubSer.
    Following I offers here a conclusion of that discussion:

    With this code:
      ____________________________________________
      Serie srSubBeg = SubSer(CalInd(WD(7), Diario), TheBegin, y2004);
      Date FirstDate = First(srSubBeg);
      Serie srSubEnd = SubSer(CalInd(WD(7), Diario), y2004, TheEnd);
      Date LastDate = Last(srSubEnd);

    Tol must returns:
      A variable Date called FirstDate == TheBegin
      A variable Date called LastDate == TheEnd


    With this code:
      ____________________________________________
      Serie a = SubSer(CalInd(C),Diario,y2004m1d1,y2004m12d31);
      Serie b = SubSer(a,y2003m12d31,y2005m1d1);
      Serie c = SubSer(a,TheBegin,TheEnd);

    Tol must returns:
      A Serie "a" -> Diario[y2004m01d01, y2004m12d21]
      A Serie "b" -> Diario[y2004m01d01, y2004m12d21]
      A Serie "c" -> Diario[y2004m01d01, y2004m12d21]

    With this commit we are already implementing this behaviour.

2004-10-07  Manuel Balderrábano  <manuelb@tol-project.org>

    * bbasic/lstalgeb.cpp:
    Fixed a bug in LstInsert: It would forget about the element right before the inserted one.

2004-10-05  Daniel Rus  <danirus@tol-project.org>

    * btol/bgrammar/spfuninst.cpp: Resolves bug 115.
    http://bugs.tol-project.org/show_bug.cgi?id=115

    Until now Dating() function was operating only in sentences with an explicit TimeSet Grammar, like in the next sentence:
      _____________________
      TimeSet tm = Dating(ser);

    In the left part of that sentence there is an explicit mention to TimeSet data type.
    Now we can operate also with "Anything" data type operands like ==.

2004-10-04  Daniel Rus  <danirus@tol-project.org>

    * btol/date_type/dtegra.cpp, btol/date_type/tol_bdtegra.h:
    Resolves bug 166: http://bugs.tol-project.org/show_bug.cgi?id=166

    A bad definition of some static Tol elements, those representing DefFirst and DefLast of Date type, was avoiding a ":=" (PutValue function of spfuninst.cpp) operation, used to change the value of Tol variables.

    Both, DefFirst and DefLast variables, were being created as BGraConstant<BDate> objects, what means, they were Tol constant variables.
    Now, we define them as BGraParameter<BDate>, that represents something that could be changed by the user with := operations.

    To get an example, please visit the URL commented above.

    * btol/set_type/setgra.cpp:
    Resolves bug 132: http://bugs.tol-project.org/show_bug.cgi?id=132
    Method: BSetIncludeBDT::CalcContens
    When another serie with the same name (serName) has been created, an error must be shown.

    * bmath/bstat/stat.cpp: Resolves Bug 150.
    http://bugs.tol-project.org/show_bug.cgi?id=150

    Change in AutoCor function.
    During that filtering, all "Unknown" and "0" values from the beginning and before the first "not null" and "not Unknown" value was erased from the array used to make the computation. The same erase operation also was done starting at the end of the BArray.
    I think this filtering operation should be done only with Unkown values.
    * btol/timeset_type/tol_btmsgrav.h:
    Resolves bug 147. BTmsInterval constructor must return an exception only when iniDate>lastDate, not when iniDate>=lastDate

    * btol/bgrammar/tol_boper.h:
    accents in DeclareTimeSet Evaluator error messages

2004-10-04  Jorge S. Pérez  <josp@tol-project.org>

    * btol/bmodel/model.cpp:
    related to bug http://bugs.tol-project.org/show_bug.cgi?id=155

    now all members of Estimate's result test must have name.

2004-10-01  Daniel Rus  <danirus@tol-project.org>

    * btol/bgrammar/graimp.cpp: Resolves Bugs 162 and 164.
    A problem related with explicit Type specification in implicit casting operations.

2004-09-30  Daniel Rus  <danirus@tol-project.org>

    * btol/bmodel/modcalc.cpp:
    Fixed bug http://bugs.tol-project.org/cgi-bin/bugzilla/show_bug.cgi?id=161

    * btol/serie_type/tsrgrav.cpp: Solution for bugs 84, 130, and 154.
    2nd. part of bug 79 was not a bug.

2004-09-29  Manuel Balderrábano  <manuelb@tol-project.org>

    * btol/bdb/tests/DBTestMultipleQuery.tol:
    Included a new parameter to disable DDBB testing.
    The message will be "...Disabled" instead of  "...Ok" or "...Error"

    A True value (1) will be returned anyway.

    * btol/bdb/tests/DBTestErrors.tol:
    Included a new parameter to disable DDBB testing.
    The message will be "...Disabled" instead of  "...Ok" or "...Error"
    A True value (1) will be returned anyway.

    * btol/bdb/tests/DBTestMultipleDB.tol:
    Included a new parameter to disable DDBB testing.
    The message will be "...Disabled" instead of  "...Ok" or "...Error"

    A True value (1) will be returned anyway.

    * btol/bdb/tests/DBTestBigTextODBC.tol, btol/bdb/tests/DBTestBigTextMySQL.tol:
    * Included a new parameter to disable DDBB testing. The message will be "...Disabled" instead of  "...Ok" or "...Error"
    A True value (1) will be returned anyway.
    * Also, incremented field size from 32 KB to 64 KB. Seems more impressive ;-)

    * btol/bdb/tests/DBTestBigQuery.tol:
    "Wrong parameters" possibility is handled now.

    * btol/bdb/tests/DBTestEdgeValues.tol:
    Included a new parameter to disable DDBB testing.
    The message will be "...Disabled" instead of  "...Ok" or "...Error"

    A True value (1) will be returned anyway.

    * btol/bdb/tests/DBTestBigQuery.tol:
    Included a new parameter to disable DDBB testing.
    The message will be:
    "Testing 4000-row puts and gets...Disabled"
    Instead of:
    "Testing 4000-row puts and gets...Ok"
    or:
    "Testing 4000-row puts and gets...Error"

    A True value (1) will be returned anyway.

    * btol/bdb/tests/DBTestIni.tol:
    Included a new parameter to disable DDBB testing.

    * ChangeLog: Changes for Bug 163 are important.

    * btol/bdb/libtol_seed_.c:
    Added a new function to check for NULL numeric values.

    * btol/bdb/tests/DBTestEdgeValues.tol:
    Check if NULL values are returned as Unknown when handling numeric fields, instead of 0.

    * btol/bdb/dbtol.cpp, btol/bdb/libtolmysql.c, btol/bdb/libtolodbc.c:
    Check whether a numeric field is really an empty value instead of returning a default (usually 0).

2004-09-23  Jorge S. Pérez  <josp@tol-project.org>

    * btol/set_type/tol_bsetgra.h: TOL_API for InstallTclEval

2004-09-22  Jorge S. Pérez  <jsop@tol-project.org>

    * btol/set_type/setgra.cpp, btol/set_type/tol_bsetgra.h:
    Tcl_Eval implemented, as taken from the function description

    Set Tcl_Eval(Text script)

    Evaluate a Tcl script. The return value is a Set with two elements
        status : a Real indicating success (0) or fail (1)
        result : a Text with the evaluation result
    Example:

        Set tcl_res = Tcl_Eval("set tcl_platform(platform)");
        If (tcl_res["status"], WriteLn("Running on platform "+tcl_res["result"]), WriteLn("Error in Tcl_Eval"))

    * ChangeLog: -Tcl_Eval

    - bug 96

    * initLibrary/_guifunction.tol:
    Modified funtion for adding series using SetSumC instead of SetSum

    * btol/bdb/dbtol.cpp:
    Initialize some (void *) vars to avoid VC++ Warnings when handling dynamic loading of modules.

2004-09-21  Jorge S. Pérez  <josp@tol-project.org>

    * win/gnutol.dsp: gnutol.dsp :
        removed now tollib.dsp is used

    * win/gnutol.dsw, win/tolcon.dsp: gnutol.dsp :
        removed now tollib.dsp is used
    gnutol.dsw :
        now points to tollib.dsp
    tolcon.dsp :
                    move tolcon.exe to tol.exe

    * win/tollib.dsp:
    recovered initial compilation options, please be careful when changing those options

    * win/gnutol.dsp, win/tolcon.dsp:
    fixed the temporary output directory: this directory should be different for Debug and Release version!!!!!!
    This will solve a lot of headaches!!!

    * win/gnutol.plg, win/tolcon.plg:
    these are output files and are not needed!

    * btol/bgrammar/graacc.cpp, btol/bgrammar/tol_bgrammar.h:
    tol_brammar.h: windows compilation

    graacc.cpp : from_fun_level not used

2004-09-20  Jorge S. Pérez  <josp@tol-project.org>

    * btol/bdb/dbtol.cpp:
    changing identifier list to opened_list as this conflict with the type list from std::

    * btol/bgrammar/gra.cpp, btol/bgrammar/graacc.cpp, btol/bgrammar/graimp.cpp, btol/bgrammar/opr.cpp, btol/bgrammar/oprimp.cpp, btol/bgrammar/tol_bgrammar.h, btol/bgrammar/tol_boper.h:
    Related mainly to bug # 96.

    tol_bgrammar.h:

       stack_level to mark the execution level path. PushStackLevel push a new
       mark PopStackLevel remove the last one. BGrammar::Evaluate now receive an
       argument indicating to signal if it is called from a UserFunction.

    gra.cpp:

       BGrammar::stack_level instatiation.

    graacc.cpp:

       old BGrammar::FindLocal hidden from compilation.
       new BGrammar::FindLocal considering stack_level.

    graimp.cpp:

       block "{" make a PushStackLevel if it is not a UserFunction body.
       if newGrammar is not NIL it is used in casting check instead of this.

    tol_boper.h
    opr.cpp:

      removed fInsideLevel_

    oprimp.cpp:

      When entering in a UserFunction the evaluation level BGrammar::level_ is set
      to the UserFunction plus 1 Level()+1

    * btol/bgrammar/gra.cpp, btol/bgrammar/graacc.cpp, btol/bgrammar/graimp.cpp, btol/bgrammar/opr.cpp, btol/bgrammar/oprimp.cpp, btol/bgrammar/tol_bgrammar.h, btol/bgrammar/tol_boper.h:
    deleted just for a minutes in order to recover the commit detailed mail

    * AUTHORS:
    Trying to solve a problem sending automatic emails to this list

    * ChangeLog: testing cvs mailing, this commit only involve formatting.

2004-09-20  Javier Portugal  <javipor@tol-project.org>

    * initLibrary/_guifunction.tol: Function: GuiSetSum
    Correction error in function SetSum

2004-09-20  Roberto C. Soto  <rcsoto@tol-project.org>

    * initLibrary/_guifunction.tol: Added some useful functions

    * initLibrary/_constant.tol:
    Added PseudoMensual timeset. First monday of month

2004-09-20  Manuel Balderrábano  <manuelb@tol-project.org>

    * win/gnutol.dsp, win/gnutol.dsw, win/tolcon.dsp, win/tolcon.dsw:
    Project modifications to compile tol.exe into ReleaseEXE instead of Release. tol.lib created from tol.dll project turned to be a conflict.

2004-09-17  Manuel Balderrábano  <manuelb@tol-project.org>

    * btol/bmodel/modcalc.cpp:
    Eventhough it is statistically wrong, N<M matrices can be given for estimation.
    This must be avoided because the the singular value decomposition uses the GSL modified Golub-Reinsch algorithm. This algorithm is very optimized for N>M, (that is, many more data fields than variables), and has not even been implemented for N<M.

    An error message is shown now, followed by an abort.

    * btol/matrix_type/tol_mat.hpp: Removed a few debugging printfs.

2004-09-16  Javier Portugal  <javipor@tol-project.org>

    * initLibrary/_guifunction.tol: Added some functions

2004-09-15  Daniel Rus  <danirus@tol-project.org>

    * btol/bgrammar/graimp.cpp: Resolves bug 145.
    URL: http://bugs.tol-project.org/show_bug.cgi?id=145

    The problem was an "out of scope" operation in Tol Evaluator.
    When the Evaluator adds a possible orphan object to the stack must be sure of that its level_ attribute (its scope) is greater than the current level_ (current scope).

    In the case of the code attached to this Bug, the scope of the object (Text Output) is the global scope. Tol Evaluator must ensure itself that a given object is an orphan object. Only an object that comes from a more deeply local scope could be an orphan object.

    * btol/bgrammar/graimp.cpp: Resolves bug 148.
    Please visit next URL to get an explanation of the resolution.
    http://bugs.tol-project.org/show_bug.cgi?id=148

    The problem is related, once again, with SEPARATOR Token.
    With the last control, yesterday commited, around openToken == "{", we can control this specific situation.

2004-09-14  Daniel Rus  <danirus@tol-project.org>

    * btol/bgrammar/graimp.cpp, oprimp.cpp, syn.cpp:
    Resolving bug 146.This modification resolves a big problem inside
    the kernel of Tol.
    
    The problem is related with the management of the scope inside a
    function or inside local code blocks. This is the previous
    solution to get an improvement of the Local Scope Management in
    Tol. 
    
    Now the Local Scope works only with a stack storing all objects
    created inside each function called. In a normal situation with
    more than 5 or 6 functions called at a time, the time spent
    looking for an object inside this stack is dramatically high.

2004-09-13  Manuel Balderrábano  <manuelb@tol-project.org>

    * btol/text_type/txtgra.cpp:
    Modified Version constant to include compilation date.

2004-09-10  Manuel Balderrábano  <manuelb@tol-project.org>

    * btol/bdb/dbtol.cpp:
    Fix for warning "ERROR: DBGetFirst" when a call to DBGetFirst returned 0 rows.
    The driver returns -1 in case of error, 0 means a correct call, as 0 rows can be returned.

2004-09-09  Manuel Balderrábano  <manuelb@tol-project.org>

    * btol/set_type/tests/TestRangeInteger.tol, btol/set_type/tests/TestRangeReal.tol:
    New tests to make basic checks on Range functionality, based on bug:
    http://bugs.tol-project.org/show_bug.cgi?id=143

    * btol/set_type/setgra.cpp:
    A Ceil call using the result of the next operation as argument was done:

    (until-from)/pass

    Which, as a floating-point operation, under some circumstances can round X to get a X.0000000000009 value. Therefore, the above operation would be rounded up to (X+1) when using non-integer operators.

    Using Abs() alone solves the problem.

2004-09-08  Manuel Balderrábano  <manuelb@tol-project.org>

    * btol/bdb/dbtol.cpp:
    Removed the DBOpen Warning when using default driver.

    * btol/bdb/bdspool.cpp: Fix to the bug 144.
    From now on, only DBSeries, DBSeriesColumn and DBSeriesTable will cut spaces out of the end of text fields. DBTable, for instance, will remain as it is.
    Follow the link for more info:
    http://bugs.tol-project.org/show_bug.cgi?id=144

2004-09-07  Manuel Balderrábano  <manuelb@tol-project.org>

    * btol/bdb/bdspool.cpp:
    Changed DBOpen help. host and database arguments have been switched.

2004-09-06  Manuel Balderrábano  <manuelb@tol-project.org>

    * btol/bdb/tests/DBTestMultipleQuery.tol:
    Fixed a small bug that confused the double-DDBB handling.

2004-09-06  Daniel Rus  <danirus@tol-project.org>

    * btol/bgrammar/graacc.cpp, btol/bgrammar/opr.cpp, btol/bgrammar/tol_boper.h:
    Returning back to code before the solution of Bug 96 was commited.

2004-09-03  Daniel Rus  <danirus@tol-project.org>

    * btol/bgrammar/tol_boper.h:
    I forgot to delete two methods of BUserFunction: IncFInsideLevel and DecFInsideLevel.

    * btol/bgrammar/graacc.cpp, btol/bgrammar/graimp.cpp, btol/bgrammar/opr.cpp, btol/bgrammar/tol_boper.h:
    Resolution of Bug 96.
    Now, if we evaluate the next code:
    ____________
    Real fun1(Real p1) { x };

    Real fun2(Real p2)
    {
      Real fun3(Real x) { fun1(x) };
      fun3(p2)
    };

    Real a = 1;
    Real x = 2;
    Real salida = fun2(a);
    ____________

    Variable "salida" has the expected value, I said, 2.

    Implementation are explained in Bugzilla:
    http://bugs.tol-project.org/show_bug.cgi?id=96

    * btol/bgrammar/opr.cpp, btol/bgrammar/tol_boper.h:
    Windows compilation error resolved -> Missing reference to STD C++ namespace before the declaration of static member vector activeFunctions_.

2004-09-02  Daniel Rus  <danirus@tol-project.org>

    * btol/bgrammar/oprimp.cpp:
    Error message when a BUserFunction fails in its evaluation time.

    * btol/bgrammar/tol_boper.h:
    I forgot to upload #include <vector> from C++ STL

    * btol/bgrammar/oprimp.cpp:
    I forget a carrier return in one message of CreateObject.

    * bparser/par.cpp, btol/bgrammar/graimp.cpp, btol/bgrammar/opr.cpp, btol/bgrammar/oprimp.cpp, btol/bgrammar/tol_bgrammar.h, btol/bgrammar/tol_boper.h, btol/code_type/codgra.cpp:
    New attributes to BUserFunctions has been added.
    Now we can see more information when a problem occurs within a function. With this two new attibutes (BText inFile_ and vector<BUserFunction*> activeFunctions_) we can know in which file a function has been defined and which is the function currently under evaluation. There is also one change related with unparsing proccess.

    To see more information, please check the Bug 120.

2004-09-01  Daniel Rus  <danirus@tol-project.org>

    * configure:
    New configure script with last changes related with new features added to DD.BB. support under Tol.

2004-09-01  Manuel Balderrábano  <manuelb@tol-project.org>

    * btol/bdb/dbtol.cpp:
    Removed the awful DBOpen, DBClose and DBActivate messages.

2004-08-31  Daniel Rus  <danirus@tol-project.org>

    * configure.in:
    New configure.in to generate two new libs related with DDBB created by super Manu

    * btol/bdb/Makefile.am:
    New Makefile.am to generate two new libs related with DDBB created by super Manu

2004-08-31  Jorge S. Pérez  <josp@tol-project.org>

    * btol/bgrammar/graimp.cpp:
    When a casting could not be performed an error message is showed. This is a
    common error when using a 'For'.
    
2004-08-31  Manuel Balderrábano  <manuelb@tol-project.org>

    * win/libtolmysql/libtolmysql.dsp, win/libtolodbc/libtolodbc.dsp:
    libtolmysql and libtolodbc's Project defnitions.

    * win/gnutol.dsp, win/gnutol.dsw, win/tolcon.dsp:
    VC++ Workspace updated with four projects: tol, tolcon, libtolmysql and libtolodbc.

    * btol/bdb/dbtol.cpp:
    Changes due to a bug in VC++ wich seems to misallocate variables wich contain numbers on it. Therefore, lst2 changes it's name to lstExtra, and lstaux does the same.

    * btol/bdb/tests/DBTestEdgeValues.tol:
    Bug fix due to conflicts when using same alias names.


    * btol/bdb/bdspool.cpp: Some conflicts resolved on this file!

    * btol/bdb/bdspool.cpp: Changes due to new native DDBB access.

    * win/gnutol.plg, win/tolcon.plg:
    New DDBB native access config files for VC++

    * win/libtolmysql/libtolmysql.dsp, win/libtolmysql/libtolmysql.plg, win/libtolodbc/libtolodbc.dsp, win/libtolodbc/libtolodbc.dsw, win/libtolodbc/libtolodbc.plg:
    New native DDBB config files for VC++

    * win/gnutol.dsp, win/gnutol.dsw, win/tolcon.dsp, win/tolcon.dsw:
    Chages due to native DDBB access.

    * btol/bdb/Makefile.am, btol/bdb/Makefile.in, btol/bdb/lnxodbc.cpp, btol/bdb/tests/DBTestIni.tol, btol/bdb/tol_bdspool.h:
    Deleted lnxodbc.cpp, dbtol.cpp will be used in it's place.

    * btol/bdb/dbtol.cpp: First version of the native DDBB access for TOL.

    * btol/bgrammar/tests/SerieWithALocalDating.tol:
    New test file to prove accesibility for a Serie with a Dating created inside a function.
    Related with Bug 10 -> http://bugs.tol-project.org/show_bug.cgi?id=10

    * btol/real_type/tests/QuantileS_MaxS.tol:
    New test file to prove QuantileS and MaxS.
    Related with Bug 4 -> http://bugs.tol-project.org/show_bug.cgi?id=4

2004-08-30  Victor de Buen  <vdebuen@tol-project.org>

    * bbasic/dte.cpp, bbasic/tol_bdate.h:
    New optional BDate definition with shorter types of members to use when this size is critical.

    * btol/timeset_type/tol_btmsgra.h:
    Virtual methods Next and Prev of BTimeSet are now inherited in BTmsRenamed to allow use specialized algorithms.

    * bbasic/dte.cpp, bbasic/tol_bdate.h:
    New optional BDate definition with shorter types of members to use when this size is critical.

2004-08-27  Manuel Balderrábano  <manuelb@tol-project.org>

    * bbasic/qfile.cpp, bbasic/txtalgeb.cpp:
    Fix for bugs 127 and 137: Wrong behaviour of C++ libraries included in Visual C++ caused the problem.
    A workarround has been implemented and is avaliable on the cvs.

    * btol/serie_type/srg.cpp: Fix for bug number 123:
    http://bugs.tol-project.org/show_bug.cgi?id=123
    When encountering an empty line, TOL assumed that it was the last one, and therefore would exit the loop, but it wouldn't.
    For every empty line that is encountered now, the next one will be read before continuing.

    * bmath/blinalg/mfastpro.cpp:
    Added warning when multiplying empty matrices.

2004-08-26  Manuel Balderrábano  <manuelb@tol-project.org>

    * bmath/blinalg/mfastpro.cpp, btol/matrix_type/tol_mat.hpp:
    Fix for bug (Really a wish list) number 101:
    http://bugs.tol-project.org/show_bug.cgi?id=101
    also, a small correction when adding or subtracting matrices.

2004-08-25  Manuel Balderrábano  <manuelb@tol-project.org>

    * btol/matrix_type/tol_mat.hpp:
    Added warning message when trying to add/subtract two incompatible matrices, as an inherited fix for bug 101:
    http://bugs.tol-project.org/show_bug.cgi?id=101

    * btol/bdb/libtol_seed_.c, btol/bdb/libtolbdb.h, btol/bdb/libtolmysql.c, btol/bdb/libtolodbc.c:
    Native access dinamic libraries.
    Usage of this libraries still depends on changes to bdspool, lnxodbc.cpp, Makefile.am, windows Visual projects, etc.,   so this update will actually cause no changes in future builds (yet).

    * btol/bdb/tests/DBTestMultipleQuery.tol:
    Fixed a probable database name/alias conflict when using test3 as alias.

    * btol/bdb/tests/DBTestEdgeValues.tol:
    Fix small bug when testing unknown Date values.
    Now it checks if Day(UnknownDate) is 0.

    * btol/bdb/tests/DBTestBigTextMySQL.tol, btol/bdb/tests/DBTestBigTextODBC.tol, btol/bdb/tests/DBTestBigQuery.tol:
    Fix small bug when filling up the test tables.

2004-08-24  Manuel Balderrábano  <manuelb@tol-project.org>

    * initLibrary/Makefile.am:
    Include _guifunction.tol for installation under UNIX/Linux.

2004-08-19  Manuel Balderrábano  <manuelb@tol-project.org>

    * bbasic/qfile.cpp: Fix for bug 127:
    http://bugs.tol-project.org/show_bug.cgi?id=127

2004-08-18  Daniel Rus  <danirus@tol-project.org>

    * btol/serie_type/tsrgrav.cpp: Related with reopened Bug 79
    Click on http://bugs.tol-project.org/show_bug.cgi?id=79

    When the 2nd argument was TheBegin, SubSerie uses BDate::DefaultFirst value, that always represents 1/January/current_year.
    The solution try to use the firstDate_ attribute of the BUserTimeSerie used as 1st argument in SubSer Tol function. I said, if we have the code:

      Serie q = SubSer(CalInd(WD(7), Diario), y2003, y2005);
      Serie srSubBeg = SubSer(q, TheBegin, y2004);

    then, Tol must use the firstDate_ of Serie q.

    * btol/code_type/cod.cpp:
    Windows compilation error in line 90, bad use of operator + with a BText object.
    It was related with resolution of bug 20.

2004-08-17  Daniel Rus  <danirus@tol-project.org>

    * btol/serie_type/tsrgrai.cpp, btol/serie_type/tsrgrav.cpp, btol/set_type/setgra.cpp, btol/text_type/txtgra.cpp, btol/timeset_type/tmsgrav.cpp, btol/bgrammar/opr.cpp, btol/bgrammar/spfuninst.cpp, btol/code_type/cod.cpp, btol/complex_type/cmpgra.cpp, btol/date_type/dtegra.cpp, btol/matrix_type/matgra.cpp, btol/polynomial_type/polgra.cpp, btol/ratio_type/ratgra.cpp, btol/real_type/datgra.cpp, btol/real_type/datgralg.cpp, btol/real_type/datgrav.cpp:
    Fix bug 20 -> http://bugs.tol-project.org/show_bug.cgi?id=20

    Each Tol Type shows information for each function (also operators) with the
    format they should be used.

    For example:
      Operator Real &, before changes -> Real &(Real x1, Real x2)
      Operator Real &, after changes ->  x1 & x2 {Real x1, Real x2}

2004-08-13  Victor de Buen  <vdebuen@tol-project.org>

    * bbasic/tol_barray.h, bbasic/tol_btext.h, bmath/bfunct/nrealfun.cpp, bmath/bfunct/tol_brealfun.h, bmath/bprdist/tol_bprdist.h, bmath/mathobjects/tol_bdat.h:
    Exporting classes using templates

2004-08-12  Javier Portugal  <javipor@tol-project.org>

    * initLibrary/_guifunction.tol: Added some useful user functions

2004-08-12  Daniel Rus  <danirus@tol-project.org>

    * btol/bgrammar/oprimp.cpp:
    Commit related with Bug 100! (hundred bugs reported! congratulations!!).
    Now Tol can distinguish the nature of the parameters used inside an structure call.
    To see it in action we can load the InitLibrary  (in order to ensure that the changes work properly) and also trying to compile the code included in the report:
    http://bugs.tol-project.org/show_bug.cgi?id=100

2004-08-11  Daniel Rus  <danirus@tol-project.org>

    * bbasic/qfile.cpp, bbasic/tol_bqfile.h: Related with bug 105.
    During the bug resolution, classes BQFile and BQSetFile don't work properly under GNU/Linux environments. I'm committing some changes in order to ensure the same behaviour in both environments (win and gnu) but the reported error continues there. It is a so rare bug.

2004-08-10  Javier Portugal  <javipor@tol-project.org>

    * initLibrary/_model.tol:
    CalcForecasting generates an unknown forecast serie when no effects are present

    * initLibrary/_guifunction.tol:
    Added some functions for user's function menu in tol inspector

2004-08-09  Daniel Rus  <danirus@tol-project.org>

    * btol/bgrammar/graimp.cpp:
    Improving the behavior and trying to support some specific features already in
    use, I've been doing some changes to get the name of the last object evaluated
    at exit time in a function.
    To see more info about this, please check the next URL:
    http://bugs.tol-project.org/show_bug.cgi?id=95

    * bparser/par.cpp:
    Related with Bug 114 (Click on http://bugs.tol-project.org/show_bug.cgi?id=114)
    The problem was a Null Pointer access in Unparse method of BParser class.
    It has been just resolved and a new version of par.cpp with the solution has been released in Tol CVS.

    By other way, Tol Kernel considers that the error is on  second "=" symbol, instead of the first. This has much sense and can be seen when analyzing the Syntactical Tree.
    Until the second equal symbol the sentence is a valid Tol sentence.

    * bparser/scn.cpp, btol/bgrammar/graimp.cpp:
    Correct last commit related with bug 103.
    bparser/scn.cpp returns back to v1.3, and btol/bgrammar/graimp.cpp change its Evaluate(List*) function to append an ended quotes when showing an ARGUMENT token related error.

    * btol/bgrammar/graimp.cpp: Related with Bug 102.
    A problem with a bad interpretation of the length of Syntactical Tree received as argument in EvaluateMatrix function in graimp.cpp.
    Please see next URL to get more info about this problem:
    http://bugs.tol-project.org/show_bug.cgi?id=102

    * bparser/scn.cpp: Resolves bug 103.
    BScanner::NextWordType method has to copy one character more when detect an argument between quotes.

2004-08-08  Daniel Rus  <danirus@tol-project.org>

    * bbasic/qfile.cpp: Related with bug 104.
    Windows and Linux presents different behavior in function std::ifstream open(char*)
    Under Windows, the file is created if does not exist, but under Linux not.
    Before open the file it is necessary to verify its existence. If the file does not exist, isOpen_ attribute should be BFALSE, in order to be properly used in BQSepFile constructor.

2004-08-06  Daniel Rus  <danirus@tol-project.org>

    * btol/bgrammar/graimp.cpp:
    This v1.9 returns back to v1.7 status. Version 1.8 try to resolve another problem, but should not be committed.

2004-07-30  Daniel Rus  <danirus@tol-project.org>

    * btol/bgrammar/graimp.cpp:
    last sentence must gives the name in returned object

    * bbasic/tol_btext.h, bbasic/txt.cpp, btol/bgrammar/graimp.cpp:
    Related with Bug 95, this changes makes a better solution, based only in a little change in Evaluate function of graimp.cpp. Now the zombi sentence will be erased under all local scope. A new Renamed object without name is created and will be erased just after the evaluation of zombi sentence.
    BText changes (static attributes and method) no longer needed.

2004-07-29  Daniel Rus  <danirus@tol-project.org>

    * bbasic/tol_btext.h, bbasic/txt.cpp, btol/bgrammar/graimp.cpp:
    Solution for Bug 95:
    http://bugs.tol-project.org/show_bug.cgi?id=95

    Function Evaluate (in graimp.cpp) requires a little piece of code two push zombi objects (also called orphan objects) into the stack_. A new static BText function must be developed to get a new name for each zombi object in the stack.

    To understand what is a zombi object (or an orphan object) please refer to URL given above.

2004-07-26  Jorge S. Pérez  <josp@tol-project.org>

    * bbasic/out.cpp, bbasic/tol_bout.h: BOut::Enable BOut::Disable
    (sorry Javier!)

2004-07-23  Manuel Balderrábano  <manuelb@tol-project.org>

    * btol/bdb/lnxodbc.cpp:
    Eliminated the horrible text messages that came up on every DBOpen, DBActivate and DBClose call, showing the entire database list.
    DBGetOpened can be used for that now in a much more confortable way.

2004-07-23  Jorge S. Pérez  <josp@tol-project.org>

    * btol/bgrammar/spfuninst.cpp:
    In EvElement: instead of evaluating the index in Anything first try to
    evaluate in Real, and in case of fail, then try to evaluate in Text. This will
    solve migrating code like this

    Set set_ = [[2]];
    Real i = 1;  // i name is duplicated in Complex.
    Real aux = set_[i];

2004-07-22  Daniel Rus  <danirus@tol-project.org>

    * doc/guiatol.pdf: Upload in binary format.

    * doc/guiatol.pdf:
    Little mistake, have to remove it once again!

    * doc/guiatol.pdf: Added in binary format.

    * doc/guiatol.pdf, doc/tolguide.lyx:
    Uploaded in wrong format.

2004-07-22  Manuel Balderrábano  <manuelb@tol-project.org>

    * btol/bdb/lnxodbc.cpp:
    Changed two variables: For some reason, under VC++ wouldn't compile! They were lst2 and lstaux.
    Switched names and now it's ok.

    * btol/bdb/bdspool.cpp, btol/bdb/lnxodbc.cpp, btol/bdb/tol_bdspool.h:
    Agregada la nueva función DBGetOpened para consultar la lista de bases de datos que se encuentran abiertas en un momento determinado.

    * doc/guiatol.lyx, doc/guiatol.pdf: Guia de TOL en español.

2004-07-20  Manuel Balderrábano  <manuelb@tol-project.org>

    * btol/bdb/tests/README.txt: Description for DBTestMultipleQuery test.

    * btol/bdb/tests/DBTestMultipleQuery.tol:
    New test to check multiple querys (Not just opening-activating-closing).

2004-07-19  Victor de Buen  <vdebuen@tol-project.org>

    * bmath/bprdist/prd.cpp:
    Solving bug http://bugs.tol-project.org/show_bug.cgi?id=85

2004-07-19  Manuel Balderrábano  <manuelb@tol-project.org>

    * btol/bdb/tests/DBTestErrors.tol: Included two more tests for DBOpen:
      - Wrong type data and wrong argument number in dbStruct.

2004-07-19  Daniel Rus  <danirus@tol-project.org>

    * btol/bgrammar/oprimp.cpp:
    Solves error 92: http://bugs.tol-project.org/show_bug.cgi?id=92
    Now, CreateObject method shows the name and Type of the object created before.

2004-07-16  Manuel Balderrábano  <manuelb@tol-project.org>

    * btol/real_type/datgralg.cpp:
    Fixed same error as with previous And, but in Or function.
    Follow link for details:
    http://bugs.tol-project.org/show_bug.cgi?id=88

    * btol/real_type/datgralg.cpp:
    Fixed And function: when receiving  just one argument, it would return the value itself, instead of calculating the logic value.
    See link:
    http://bugs.tol-project.org/show_bug.cgi?id=88

2004-07-15  Manuel Balderrábano  <manuelb@tol-project.org>

    * btol/bdb/tests/DBTestBigQuery.tol, btol/bdb/tests/DBTestBigTextMySQL.tol, btol/bdb/tests/DBTestBigTextODBC.tol, btol/bdb/tests/DBTestEdgeValues.tol, btol/bdb/tests/DBTestErrors.tol, btol/bdb/tests/DBTestMultipleDB.tol:
    Fix changes in tests format.
    Now they all return a TRUE/FALSE value.

    * btol/bdb/tests/DBTestBigTextMySQL.tol, btol/bdb/tests/DBTestBigTextODBC.tol:
    Two new tests for big (32KB) text fields using ODBC and MySQL drivers.

    * btol/bdb/tests/DBTestBigQuery.tol, btol/bdb/tests/DBTestEdgeValues.tol, btol/bdb/tests/README.txt:
    Better test support now includes a few more field checking and just uses one database.

2004-07-15  Daniel Rus  <danirus@tol-project.org>

    * doc/tolguide.lyx: reordering chapters

    * doc/tolIntegrityTests.lyx: updated to new format of test code

    * bparser/fil.cpp:
    Solution for http://bugs.tol-project.org/show_bug.cgi?id=87

    Curiously this bug was produced when the Filter of Tol (a little piece of the Parser) tries to detect a number in scientific notation. The problem appears in Clean method, into an internal and not necessary if-sentence.

    Before update with this solution, you can reproduce this error using any identifier ended with: a digit, and a letter "e" or "E", followed by '-' or '+' symbol.  ie:

    Real a1e = 1;
    Real b2e = 2;
    Real c = a1e+b2e;

    Once you apply the solution, please, use never an identifier beginning with a number. For a compatibility reason Tol accepts it. ie:

    Real 1e = 1;  // not recommended
    Real 2e = 2;  // not recommended
    Real c = 1e+2e; // --> Produce an error, but
    Real c = 1e + 2e; // works

2004-07-14  Manuel Balderrábano  <manuelb@tol-project.org>

    * btol/bdb/tests/DBTestBigQuery.tol: New test for DB Big querys.

    * btol/bdb/tests/DBTestEdgeValues.tol, btol/bdb/tests/DBTestIni.tol, btol/bdb/tests/DBTestMultipleDB.tol, btol/bdb/tests/README.txt:
    Added host variable instead of forcing "localhost".
    For any reason, DBTestEdgeValues was not the correct version on the last commit.

    * btol/bdb/tests/DBTestEdgeValues.tol, btol/bdb/tests/DBTestErrors.tol, btol/bdb/tests/DBTestIni.tol, btol/bdb/tests/DBTestMultipleDB.tol, btol/bdb/tests/README.txt:
    Database handling integrity tests.

    * doc/tolguide.lyx: Added all Database-related text.

2004-07-13  Daniel Rus  <danirus@tol-project.org>

    * btol/serie_type/tsrgrav.cpp: Solution for Bug 84.
    Starting point for Series and their calculations must be the same.
    In this specific case, SubSer start in FirstNoLess but DatCh (by an error of my own, from the last update, error 79), starts in Ser()->FirstDate(), when it should starts at FirstNoLess also.

2004-07-10  Javier Portugal  <javipor@tol-project.org>

    * initLibrary/_inittol.tol: *** empty log message ***

    * initLibrary/_guifunction.tol, initLibrary/_inittol.tol:
    First version of Graphical Interface User Defined Functions

2004-07-06  Manuel Balderrábano  <manuelb@tol-project.org>

    * btol/serie_type/tol_btmser.h:
    http://bugs.tol-project.org/show_bug.cgi?id=80, see comments.

2004-07-02  Daniel Rus  <danirus@tol-project.org>

    * btol/serie_type/tsrgrav.cpp:
    Solution for http://bugs.tol-project.org/show_bug.cgi?id=79

    The first part of the error, related with the use of "TheBegin" as "firstDate_" attribute was having a  wrong behavior in BTsrSubSerie::FirstDate() method: never checks if the 2nd parameter was BDate::TheBegin, This method, in that case, to correctly operates must be BDate::DefaultFirst.

    2nd. part was a wrong initialization of firstDate_ attribute for DatCh Serie (Dev Info: BTsrDatingChange::FirstDate() method). Til now, this attribute receives its value from the FirstNoGreat value of Serie given as 1st parameter. In the example, the "sr" Serie start at y2004m7d1, and the FirstNoGreat value into WD(6) was that y2004m06d26.
    Now DatCh starts exactly in the first Date given in the parameter Serie.

2004-06-28  Jorge S. Pérez  <josp@tol-project.org>

    * doc/tolguide.lyx: TOL Language Guide

2004-06-27  Javier Portugal  <author@tol-project.org>

    * initLibrary/_general.tol: Box Cox Transformation functions were wrong

2004-06-25  Daniel Rus  <danirus@tol-project.org>

    * btol/serie_type/tol_btmser.h: Solution for bug report 10:
    http://bugs.tol-project.org/show_bug.cgi?id=10
    Related with the creation of Serie with a local TimeSet variable.
    The problem appear when we leave the function scope, then TimeSet that represents dating_ attribute for each Tol Serie, disappear. Could be resolved incrementing the value of nRefs_ for that TimeSet, at Serie construction time.

2004-06-22  Daniel Rus  <danirus@tol-project.org>

    * language.cpp:
    When MultyEvaluate reads a Syntactical Tree with only one sentence, there wasn't a SEPARATOR token at the beginning, and the grammar object used in that situation was GraSet().
    MultyEvaluate can use explicit grammar object when the first token of a tree is a Token TYPE.

2004-06-21  Daniel Rus  <danirus@tol-project.org>

    * btol/bgrammar/tol_boper.h, btol/timeset_type/tmsgra.cpp, btol/timeset_type/tmsgrav.cpp, btol/timeset_type/tol_btmsgra.h, btol/timeset_type/tol_btmsgrav.h:
    Solving bug 71 (http://bugs.tol-project.org/show_bug.cgi?id=71)
    New macro named DeclareTimeSetEvaluator has been created in tol_boper.h.
    Each subclass that implements a TimeSet use this new Macro and send a Warning message if an exception is thrown at construction time. To better follow these changes, see BTmsInterval, implemented in tol_btmsgrav.h, it is the only one TimeSet class that throw an exception at construction time.

2004-06-17  Daniel Rus  <danirus@tol-project.org>

    * btol/bgrammar/oprimp.cpp:
    Solution for bug: http://bugs.tol-project.org/show_bug.cgi?id=72
    Anything Type need to be checked as a possible parameter for a function

2004-06-16  Daniel Rus  <danirus@tol-project.org>

    * btol/bgrammar/oprimp.cpp:
    Warning and message of 'deprecated use' when attempting to create a global variable with the same name as other global variable.

    * btol/bgrammar/spfuninst.cpp:
    related to bug http://bugs.tol-project.org/cgi-bin/bugzilla/show_bug.cgi?id=67

2004-06-14  Daniel Rus  <danirus@tol-project.org>

    * btol/bgrammar/tol_boper.h, btol/timeset_type/tol_btmsgrav.h, tol_bcommon.h:
    Try {} catch block to control bad construction objects in DeclareEvaluator

2004-06-12  Victor de Buen  <vdebuen@tol-project.org>

    * bbasic/tol_bdir.h: Exporting external functions

2004-06-11  Daniel Rus  <danirus@tol-project.org>

    * btol/text_type/txtgra.cpp:
    Syntax mistake has been corrected. Be care with the cat, don't let him walk over the keyboard!

    * btol/bgrammar/graimp.cpp:
    In BGrammar::Evaluate(List*) method, when a returned result (BSyntaxObject*) has different type than (this) object (BGrammar), a castingFunction_ is called, but its output could have no value. To control that,  Evaluate method needs an else branch, returning null value.
    Resolves http://bugs.tol-project.org/show_bug.cgi?id=65

2004-06-09  Jorge S. Pérez  <josp@tol-project.org>

    * btol/bgrammar/oprimp.cpp:
    the UserCode did not checked for type matching in te argument list.
    related to bug http://bugs.tol-project.org/show_bug.cgi?id=68

    * btol/bgrammar/graimp.cpp:
    http://bugs.tol-project.org/cgi-bin/bugzilla/show_bug.cgi?id=66
    only BINARY operators that are not '=' , #F#, nor special functions are
    checked for polymorphism.

2004-06-08  Javier Portugal  <javipor@tol-project.org>

    * btol/bgrammar/oprimp.cpp:
    two + symbols one after the other cause a compilation error in VC

2004-06-07  Daniel Rus  <danirus@tol-project.org>

    * bparser/par.cpp, btol/bgrammar/graimp.cpp, btol/bgrammar/oprimp.cpp, btol/bgrammar/tol_btxthash.h, btol/bgrammar/txthash.cpp:
    eliminates the possibility of creating variables with the same name and different type in the global scope

    * btol/timeset_type/tmsgrav.cpp:
    related to bug http://bugs.tol-project.org/show_bug.cgi?id=61

2004-06-04  Jorge S. Pérez  <josp@tol-project.org>

    * btol/real_type/datgra.cpp, btol/real_type/datgrast.cpp:
    related to http://bugs.tol-project.org/show_bug.cgi?id=55

2004-06-03  Daniel Rus  <danirus@tol-project.org>

    * bparser/fil.cpp, bparser/par.cpp:
    Resolution for bug 60 has been released on Tol CVS. An increment operation was needed to continue looking for inside a txt param of InAComment BParser method.

    * btol/bgrammar/graimp.cpp, btol/bgrammar/spfuninst.cpp:
    related to solution of bug http://bugs.tol-project.org/show_bug.cgi?id=46 in order to allow element index of type Text and bug http://bugs.tol-project.org/show_bug.cgi?id=64

    graimp.cpp : when a binary operator is needed in a context of an Anything evaluation such as Text a = x[i+2] then it is looked for in the grammar of it first argument this way a better polymorphism is attained.

    spfuninst.cpp: in EvElement the index for a  set element can be Real or Text. This last enable us to access element by name.

    * btol/set_type/set.cpp, btol/set_type/tol_bset.h:
    related to solution of bug http://bugs.tol-project.org/show_bug.cgi?id=46 in order to allow element index of type Text

    * btol/bmodel/model.cpp:
    related to solution of bug http://bugs.tol-project.org/show_bug.cgi?id=46

    * bbasic/dir.cpp, bbasic/txtalgeb.cpp:
    GetFilePath() function (of BDir) never copy the first character of their parameter, and Copy method (of BText) never put null character at end of buffer_

2004-05-28  Daniel Rus  <danirus@tol-project.org>

    * btol/matrix_type/matgra.cpp:
    SubCol function calculates bad column position

2004-05-27  Daniel Rus  <danirus@tol-project.org>

    * bparser/par.cpp: Absurd! little syntax mistake in ParseOpen

    * bparser/fil.cpp, bparser/par.cpp, bparser/tol_bfilter.h, bparser/tol_bparser.h:
    Solving problems to render Tol Syntax Errors

    * bmath/mathobjects/tests/operator+.tol, btol/matrix_type/tests/CholeskiInverse.tol, btol/set_type/tests/IncludeBMT.tol:
    changed to new test format

    * btol/bgrammar/spfuninst.cpp:
    Adjust if-else sequence to reduce evaluation time in EvPutValue

    * btol/bgrammar/spfuninst.cpp:
    Changes to EvPutValue method (Tol operator := ); there was a crash when the result and var (twice BSyntaxObjects calculated inside this method) had distinct Grammar() values.

2004-05-26  Daniel Rus  <danirus@tol-project.org>

    * btol/bgrammar/spfuninst.cpp: PutValue changes, more comments later

    * Makefile.am:
    Tol Console distributed with Tol Library is now the older. The newer will be a new project in a couple of months... ;-)

    * configure.in: -g2

    * test-it.tol: use of Select and EvalSet instead of For

    * bparser/fil.cpp, bparser/par.cpp, bparser/scn.cpp, bparser/tol_bfilter.h, bparser/tol_bparser.h:
    New method called InAComment to verify if a position in a given Tol Code (to be parsed) was into a comment. Used with ErrorPosition to calculate the exact position of an error.

2004-05-25  Victor de Buen  <vdebuen@tol-project.org>

    * btol/serie_type/tol_btsrgrp.h, btol/text_type/txtgra.cpp:
    Solving bug 50

2004-05-25  Manuel Balderrábano  <manuelb@tol-project.org>
    
    * btol/bdb/bdb.cpp, btol/bdb/bdspool.cpp, btol/bdb/lnxodbc.cpp:
    - Modified DBClose behaviour: If the closed database was also the active one, then the first one will be activated. If it was not, then the active database  will NOT be modified. Before this fix, every DBClose forced the active database to be the closed one, then closed it, and left the active database to be unknown.
    - DBClose, DBActivate and DBOpen help updated to describe the new behaviour.
    - Every call to DBOpen, DBClose and DBActivate now prints a list of all opened databases in StdOut.
    - For any reason, no translation was done in DBActivate, DBOpen and DBClose on standard error output. Fixed.

    
2004-05-24  Daniel Rus  <danirus@tol-project.org>

    * bparser/par.cpp:
    improvement of ErrorPosition method, in order to returns exact line and character of each parser error

    * btol/bgrammar/tol_bgenobj.h:
    Export Class Symbol for BGraObject<Any> and BRenObject<Any> templates


2004-05-24  Roberto C. Soto  <rcsoto@tol-project.org>

    * btol/real_type/datgrav.cpp: Added the WinRmtProcessAlive function.
    This function check a Windows Process at remote location identified by ServerName (or IP Address) and Port is active.
    (Corrected small error)

    * btol/real_type/datgrav.cpp: Added the WinRmtProcessAlive function.
    This function check a Windows Process at remote location identified by ServerName (or IP Address) and Port is active.


2004-05-22  Daniel Rus <danirus@tol-project.org>

    * bparser/fil.cpp, bparser/par.cpp, bparser/scn.cpp, bparser/tol_bfilter.h, bparser/tol_bparser.h:
    Two small problems resolved: 1. controlling the length of identifiers 2. BParser starts parsing only when BFilter returns code to analyze.

2004-05-12  Manuel Balderrábano  <manuelb@tol-project.org>

    * btol/bdb/lnxodbc.cpp: Fixed a problem with SQL_NUMERIC column type.
    They are treated as SQL_DECIMAL now.

    See the example:

    "select 6/1.0 as column;" Failed under SQLServer from Windows.
    (Curiously, under Linux works fine)

2004-05-05  Jorge S. Pérez  <josp@tol-project.org>

    * btol/matrix_type/matgra.cpp:
    in BMatSVD::CalcContens removed unnecessary message.

2004-05-04  David Quero  <dqcallado@yahoo.com>

    * btol/real_type/datgrapr.cpp:
    Random and distributed number generator has been added, based on:
        Cuachy  (RandCaucy)
        LogNormal (RandLogNormal)

    * doc/tolIntegrityTests.pdf: uploaded as a binary resource

    * doc/tolIntegrityTests.pdf: has to be a binary resource

2004-05-03  Daniel Rus  <danirus@tol-project.org>

    * btol/set_type/tests/IncludeBMT.tol:
    Description, Date and Author information

    * bmath/mathobjects/tests/operator+.tol, btol/matrix_type/tests/CholeskiInverse.tol, btol/set_type/tests/IncludeBMT.tol, test-it.tol:
    start TIT file: test-it.tol and three test files... something to begin with this

    * doc/tolIntegrityTests.pdf, doc/tolIntegrityTests.lyx:
    First versions of Tol Integrity Test document

2004-04-23  Daniel Rus  <danirus@tol-project.org>

    * btol/timeset_type/tol_btmsgra.h:
    weekday_ 0 hang up tol kernel looking for a day in an infinite loop

    * bbasic/out.cpp:
    before implementation of Tol Integrity Tests, Stdlog must be pointing to Std (standard output)

    * bbasic/out.cpp, bbasic/sys.cpp, bbasic/tol_bout.h, bbasic/tol_bsys.h, bbasic/txt.cpp, btol/set_type/setgra.cpp:
    New output channel for Tol, called Stdlog, used to redirect there
    info messages, and very useful for next Integrity Tests of Tol.

    * btol/bgrammar/spfuninst.cpp:
    Correcting description of BinGroup and Group functions of Type Anything

2004-04-15  Jorge S. Pérez  <josp@tol-project.org>

    * tol_bcommon.h: TOL_API prototype for GetCompilationDate

2004-04-14  Daniel Rus  <danirus@tol-project.org>

    * btol/text_type/txtgra.cpp:
    New Text function to get an environment variable, for example:
    Text userHomeDir = GetEnv("PATH");

    * language.cpp, tol_bcommon.h:
    const char * GetCompilationDate returns the last compilation date. This function is used in toltcl in the command tol::info version

    * bbasic/dir.cpp:
    new condition to add a slash at the end of returned path when calculated path has not length

2004-04-13  Daniel Rus  <danirus@tol-project.org>

    * bbasic/dir.cpp:
    GetFilePath() method must consider if it is working under Windows, to add a slash at the end of return path, only in the case which root directory files are specified

    * btol/real_type/datgra.cpp:
    Create MinOulierLikelyhood as Tol Real Global Variable, in InitInstances. Their behavior was implemented in aia.cpp.

2004-04-13  Manuel Balderrábano  <manuelb@tol-project.org>

    * README: Just a spelling mistake corrected.

2004-04-12  Daniel Rus  <danirus@tol-project.org>

    * btol/bmodel/modcalc.cpp, bmath/bstat/arma.cpp, bmath/bstat/logit.cpp, bmath/bfunct/nrealfun.cpp:
    After resolving Bug 15, some local variables produce warning messages. Type of these variables should be clock_t instead of BReal

2004-04-07  Daniel Rus  <danirus@tol-project.org>

    * btol/bmodel/aia.cpp, language.cpp:
    Compatibilty problems with older Tol code requires that RatioExpand and SetOfRatio functions changes their name by RationExpand and SetOfRation.

2004-04-06  Victor de Buen  <vdebuen@tol-project.org>

    * btol/bmodel/estim.cpp:
    Solves bug 12: The Estimate function gives back a wrong standard deviation. (See http://bugs.tol-project.org/show_bug.cgi?id=12)

    * NEWS: included more news
    
2004-04-05  Daniel Rus   <danirus@tol-project.org>

    * AUTHORS, ChangeLog, NEWS, TODO:
    changes in distribution files for version 1.1.1

    * configure.in:
    new unified version numbers for package distribution under unix/linux

    * bbasic/tol_btext.h, bbasic/txtalgeb.cpp:
    new Copy method for type "long int"

    * bbasic/time.cpp, bbasic/tol_btime.h:
    use of clock_t instead of BReal to track processor time

    * language.cpp:
    VERSION_LETTER -> PATCHLEVEL removed from version message shown at
    InitTOLFile

    * tol_bcommon.h:
    First unified version number for Tol, Toltcl and Tolbase

2004-04-05  Jorge S. Pérez  <josp@tol-project.org>

    * bbasic/tol_btext.h, bbasic/txtalgeb.cpp:
    new Copy method for type "long int"

    * bbasic/time.cpp, bbasic/tol_btime.h:
    use of clock_t instead of BReal to track processor time

2004-04-01  Daniel Rus  <danirus@tol-project.org>

    * bmath/mathobjects/dat.cpp, bmath/mathobjects/tol_bdat.h, btol/real_type/datgra.cpp:
    Implemented the enhancement proposed by Ivan to provide a second
    argument in "Round" Real tol-type function, telling that the
    result must have a number of decimal digits instead of returning
    an integer.
    
    * bbasic/list.cpp, btol/bgrammar/spfuninst.cpp:
    error fixed: accessing to n-th element of a List the code could
    try to make a List* cast with a possibly null pointer
    
2004-03-25  Daniel Rus  <danirus@tol-project.org>

    * config/acinclude.m4, config/config.guess, config/config.sub, config/ltmain.sh, Makefile.in, aclocal.m4, configure, configure.in: 
    Related with reported bug ->
    http://bugs.tol-project.org/show_bug.cgi?id=5
    New macro M4 created under config/acinclude.m4 in order to read
    version number of gsl with gsl-config program. 
    configure shell script command line options related with gsl are
    changed. Now we can use: --with-gsl, --with-gsl-includes,
    --with-gsl-libraries, --with-gsl-binaries. 

2004-03-25  Jorge S. Pérez  <josp@tol-project.org>

    * win/INSTALL: fixed path in example

2004-03-23  Roberto Cuesta  <rcsoto@tol-project.org>

    * win/INSTALL:
    Corrected the direction of the dowload of the GSL from tol-project.org

2004-03-18  Jorge S. Pérez  <josp@tol-project.org>

    * btol/real_type/datgra.cpp, btol/ratio_type/tol_bratio.h, btol/bmodel/estim.cpp, btol/bmodel/modcalc.cpp, btol/bmodel/model.cpp, btol/matrix_type/tol_matopr.hpp, bmath/mathobjects/complex.cpp, bmath/mathobjects/dat.cpp, bmath/mathobjects/tol_bcomplex.h, bmath/mathobjects/tol_bdat.h, bmath/bstat/arma.cpp, bmath/bstat/stat.cpp, bmath/bstat/tol_barma.h, bmath/blinalg/svdsep.cpp, bmath/bprdist/prd.cpp, bmath/bprdist/tol_bprdist.h, bmath/bfunct/nrealfun.cpp, bmath/bfunct/tol_brealfun.h:

    -Maximum likelihood estimation of ARIMA models
    -Non linear least squares method improvement

    nrealfun.cpp, tol_brealfun.h: test on jacobian results

    prd.cpp, svdsep.cpp: messages removed.

    tol_bprdist.h: InitGSLRand now receive a seed parameter

    arma.cpp, use of double instead of BDat 
    modcalc.cpp, CheckData can specify the initial values for the
    interruptions. 

    estim.cpp, improved ARIMA estimator
    stat.cpp, model.cpp:

    complex.cpp, tol_bcomplex.h: improved Complex.

    * start.log: should not be in CVS

2004-03-10  Daniel Rus  <danirus@tol-project.org>

    * bmath/bstat/stat.cpp:
    Replace an integer domain variable by a float domain variable in
    Quantile method. 
    
2004-03-09  Daniel Rus  <danirus@tol-project.org>

    * win/tolcon.dsp:
    replace tolcon.exe name by tol.exe in order to give support to
    older scripts

2004-03-08  Daniel Rus  <danirus@tol-project.org>

    * btol/matrix_type/matgra.cpp:
    CholeskiInverse behavior has been rewritten to avoid confusing
    internal casts in Win32 platform
    
2004-02-27  Jorge S. Pérez  <josp@tol-project.org>

    * btol/matrix_type/matgra.cpp:
    New user function QRDecomposition to implment the QR decomposition of a
    matrix. Removed trace in SVD function showing the method used.

2004-02-26  Daniel Rus  <danirus@tol-project.org>

    * btol/set_type/setgra.cpp:
    In BSetIncludeBMT function, ReadAllCells call always returns a
    BArray with an empty row at end. We must to decrease one unit
    before creating Matrix object.
    
2004-02-26  Jorge S. Pérez  <josp@tol-project.org>

    * bmath/bprdist/prd.cpp, bmath/bprdist/tol_bprdist.h:
    The ramdom generator is now accessed trought the static member function

      static gsl_rng * rng();

    so it is now visible to other modules other than prd.cpp.

    * btol/real_type/datgrapr.cpp: Implemented de user functions:

    RandChisq : random variate from a xi-squared distribution with n
    degree of freedom.

    RandIChisq : random variate from an inverse xi-squared
    distribution with n degree of freedom.

    RandGamma : random variate from a gamma distribution with
    parameters a and b.
    
2004-02-26  Daniel Rus  <danirus@tol-project.org>

    * Makefile.am, INSTALL, Makefile.in, TODO, bbasic/Makefile.in, bmath/Makefile.in, bmath/barith/Makefile.in, bmath/bfunct/Makefile.in, bmath/blinalg/Makefile.in, bmath/bprdist/Makefile.in, bmath/bstat/Makefile.in, bmath/dcdflib/Makefile.in, bmath/mathobjects/Makefile.in, bparser/Makefile.in, btol/Makefile.in, btol/bdb/Makefile.in, btol/bgrammar/Makefile.in, btol/bgsl/Makefile.in, btol/bmodel/Makefile.in, btol/bmonte/Makefile.in, btol/code_type/Makefile.in, btol/complex_type/Makefile.in, btol/date_type/Makefile.in, btol/matrix_type/Makefile.in, btol/polynomial_type/Makefile.in, btol/ratio_type/Makefile.in, btol/real_type/Makefile.in, btol/serie_type/Makefile.in, btol/set_type/Makefile.in, btol/text_type/Makefile.in, btol/timeset_type/Makefile.in, configure, configure.in, initLibrary/Makefile.in, initLibrary/arima/Makefile.in, initLibrary/math/Makefile.in, initLibrary/stat/Makefile.in, initLibrary/various/Makefile.in, replace/Makefile.in, tol/Makefile.in:
    Adding all Makefile.in's, to make a direct configure, without have to use bootstrap script.
    Changes in some texts of Distribution files, specially TODO file.
    Fixed error in configure.in and configure files related with expand ncurses detected variable to main Makefile.am

2004-02-26  Jorge S. Pérez  <josp@tol-project.org>

    * TODO: Random Number Distributions

2003-11-03  Daniel Rus <daniel@uponeits.com>

    * AUTHORS: Creating file and adding first authors of the gnu_tol
    project.

    * BUGS: File created but still without contents.

    * COPYING: Terms and conditions of GNU/GPL License under TOLL is
    distributed.

    * ChangeLog: First release of this file.

    * INSTALL: First release of INSTALL file with instructions about
    how to install the software under your operative system.

    * NEWS: First release of NEWS file, with a description of the
    things are news in the current release of TOLL. Current release is
    still unstable. See TODO file to know what ewe are working on to
    get the first stable release.

    * README: First release of README file. With general information
    of TOLL Project.

    * THANKS: First release of THANKS file. The aim of this file is to
    thanks all the people who have been collaborated in TOL.

    * TODO: First release of TODO file. See check this file to get a
    list of things to do to improve behavior of TOL.

        * Redesign directory structure and integration installation
    proccess with gnu autotools. Begin tol as gnu/tol from here.
