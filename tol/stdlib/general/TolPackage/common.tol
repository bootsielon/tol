/* -*- mode: C++ -*- */
//////////////////////////////////////////////////////////////////////////////
// FILE   : common.tol
// PURPOSE: TolPackage common tools
// Funciones y estructuras comunes al lado de servidor y cliente
//////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////
//Información de un paquete dentro del archivo de estado un repositorio
  Struct @PackageInfo {
//////////////////////////////////////////////////////////////////////////////
  Text repository,
  Text name,
  Text name.version,
  Real version.high,
  Real version.low,
  Text brief,
  Set  keys,
  Set  authors,
  Text minTolVersion,
  Date releaseDate,
  Set  dependencies,
  Set  nonTolResources
};

//////////////////////////////////////////////////////////////////////////////
//Devuelve el nombre de versión actual de un paquete ya cargado 
  Text GetCurrentNameVersion(Text packageName, Real specificVersion)
//////////////////////////////////////////////////////////////////////////////
{
  NameBlock p = Eval(packageName);
  Text name.version = If(!specificVersion,packageName,
    packageName+"."<<p::_.autodoc.version.high+"."<<p::_.autodoc.version.low)
};

//////////////////////////////////////////////////////////////////////////////
//Devuelve la lista de dependencias directas e indirectas de un paquete ya 
//cargado 
  Set GetDeepDependencies(Text packageName, Real specificVersion)
//////////////////////////////////////////////////////////////////////////////
{
//WriteLn("TRACE GetDeepDependencies 1");
  NameBlock p = Eval(packageName);
//WriteLn("TRACE GetDeepDependencies 2");
  Text name.version = 
    TolPackage::GetCurrentNameVersion(packageName, specificVersion);
//WriteLn("TRACE GetDeepDependencies 3");
  If(!Card(p::_.autodoc.dependencies), Copy(Empty),
  {
    Set aux=EvalSet(p::_.autodoc.dependencies, Set(Text r)
    {
      TolPackage::GetDeepDependencies(r,specificVersion)
    });
    Unique(SetConcat(aux)<<[[name.version]])
  }) 
};
