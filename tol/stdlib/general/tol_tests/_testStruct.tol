/* -*- mode: c++ -*- */
//////////////////////////////////////////////////////////////////////////////
// FILE    : _testStruct.tol
//
// PURPOSE : Structureas and auxiliary functions to be used by "TOL Tester" 
// in order to gatter information about the test result.
//////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////
  Struct strTestStatus
//Structure to store status from an individual Test
//////////////////////////////////////////////////////////////////////////////
{
  Text Description,     // provided by the test.
  Text Link,            // provided by the test.
  Real Quality,         // is a meassure of the test [0..1], 0 --> fail,
                        // 1 --> success. It is computed by the test.
  Text Notes,           // aditional notes describing Quality meaning.
  Text DBServerType,    // only when doing data base tests.
  Text DBServerHost,    // idem ...
  Text DBAlias,         // idem ...
  Text Author           // provided by the test code
};

//////////////////////////////////////////////////////////////////////////////
  Struct strTestMetric
//Structure to store results of automated TOL tests
//////////////////////////////////////////////////////////////////////////////
{
  Text Path,            //  1. computed by the tester. Inside Path a file
                        //     test.tol must exists.
  Text Parameters,      //  2. Tol file with optional external parameters
  Date Begin,           //  3. Begining time of battery test
  Text Description,     //  4. provided by the test.
  Text Link,            //  5. provided by the test.
  Real Quality,         //  6. is a meassure of the test [0..1], 0 --> fail,
                        //     1 --> success. It is computed by the test.
  Text Notes,           //  7. aditional notes describing Quality meaning.
  Text DBServerType,    //  8. only when doing data base tests.
  Text DBServerHost,    //  9. idem ...
  Text DBAlias,         // 10. idem ...
  Text Author,          // 11. provided by the test code
  Real EmitedErrors,    // 12. idem ...
  Real EmitedWarnings,  // 13. idem ...
  Real UsedMemoryKb,    // 14. idem ...
  Real CreatedCores,    // 15. idem ...
  Real CreatedObjects,  // 16. idem ...
  Real NonDelCores,     // 17. idem ...
  Real NonDelObjects,   // 18. idem ...
  Real ElapsedSeconds,  // 19. idem ...
  Real RandSeed         // 20. idem ...
};

//////////////////////////////////////////////////////////////////////////////
  Struct strTestBattery
//Structure to store global results of a battery of automated TOL tests
//////////////////////////////////////////////////////////////////////////////
{
  Text Root,        // The path below wichw tests are stored 
  Text Parameters,  // Tol file with optional external parameters
  Date Begin,       // Begining time of battery test
  Text OS,          // operating system where the tests where run.
  Text CXX,         // C++ compiler used to compile TOL.
  Text TOLVersion,  // TOL version.
  Text Host,        // HOST identificion where the tests where run.
  Real batterySize, // The number of tests executed in the battery        
  Real minQuality,  // tests statistics fields ...
  Real avgQuality,
  Real unkQuality,
  Real avgErrors,
  Real avgWarnings,
  Real avgMemKb,
  Real avgNonDelCores,
  Real avgNonDelObjects,
  Real avgSeconds
};


//////////////////////////////////////////////////////////////////////////////
  Struct strBatteryConfig
//Structure to store status from an individual Test
//////////////////////////////////////////////////////////////////////////////
{
  Text Root,        // The path below wichw tests are stored 
  Text Parameters,  // Tol file with optional external parameters
  Real Times        // Number of executions of each test in the battery
};

//////////////////////////////////////////////////////////////////////////////
Struct strToltclStatus {
//Structure to store status from an individual test.tcl (Toltcl)
//////////////////////////////////////////////////////////////////////////////
  Real Errors;
  Real Warnings;
  Real quality_;
  Text partial_
};

/* */