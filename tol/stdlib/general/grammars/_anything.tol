//////////////////////////////////////////////////////////////////////////////
// FILE   : _anything.tol
// PURPOSE: Funciones generales que devuelven Anything
//////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////
// FUNCTIONS
//////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////
  Anything Error(Text message)
//////////////////////////////////////////////////////////////////////////////
{
  WriteLn(message,"E")
};
//////////////////////////////////////////////////////////////////////////////
  PutDescription(I2(
  "Shows an error message.",
  "Muestra un mensaje de error."),
  Error);
//////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////
  Anything Warning(Text message)
//////////////////////////////////////////////////////////////////////////////
{
  WriteLn(message,"W")
};
//////////////////////////////////////////////////////////////////////////////
  PutDescription(I2(
  "Shows a warning message.",
  "Muestra un mensaje de atención."),
  Error);
//////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////
Anything Identity(Anything object)
//////////////////////////////////////////////////////////////////////////////
{
  object
};
//////////////////////////////////////////////////////////////////////////////
PutDescription("Devuelve el objeto pasado como parametro.",
Identity);
//////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////
Anything EvalObj(Anything object, Code code, Set setArguments)
//////////////////////////////////////////////////////////////////////////////
{
  EvalArg(Name(code), SetOfAnything(object)<<setArguments)
};
//////////////////////////////////////////////////////////////////////////////
PutDescription("Para un objeto <object> dado, aplica una función <code>, que
además del objeto recibe otros argumentos <setArguments>.",
EvalObj);
//////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////
Anything GetConfigValue(NameBlock config, Text member, Anything defaultValue)
//////////////////////////////////////////////////////////////////////////////
{
  Text expr = "config::"+member;
  If(ObjectExist(Grammar(defaultValue),expr),Eval(expr),defaultValue)
};
//////////////////////////////////////////////////////////////////////////////
PutDescription("Si existe config::<member> del mismo tipo que defaultValue "
"entonces lo devuelve y en otro caso retorna dicho valor por defecto",
GetConfigValue);
//////////////////////////////////////////////////////////////////////////////

