////////////////////////////////////////////////////////////////////////////////
// FILE: Rquadprog.tol
// PURPOSE: TOL API for R package quadprog
////////////////////////////////////////////////////////////////////////////////

NameBlock Rquadprog =
[[
  //Acknowledgements
  Text _R_citation(Real void) {
  "R Development Core Team (2007). R: A language and environment for "
  "statistical computing. R Foundation for Statistical Computing, "
  "Vienna, Austria. ISBN 3-900051-07-0, \n"
  "URL http://www.R-project.org.\n"};

  Text _Rquadprog_citation(Real void) {
  "S original by Berwin A. Turlach R port by Andreas Weingessel. Rquadprog:"
  "Functions to solve Quadratic Programming Problems\n"
  "URL http://cran.r-project.org/web/packages/quadprog/index.html"};

  //read only autodoc
  Text _.autodoc.description =
  "TOL API for R package quadprog \n"+
  "External requirements:\n"
  " 1. Install R (>=2.6.0) and ensure that is added to system path "
  "environment\n"
  " 2. Installing R quadprog package\n"
  "Acknowledgements:\n"+
     _R_citation(0)+"\n"+
     _Rquadprog_citation(0);
  
  Set _.autodoc.authors = [["vdebuen@tol-project.org"]];

  Text _cwd = GetAbsolutePath(".");
  Text _tmpdir = Replace(TmpDir, "\\", "/");
  Text _tolRquadprog.R = _cwd+"/"+ "tolRquadprog.R";
  Text _D.bbm  = _tmpdir+"/"+"Dmat%S.bbm";
  Text _d.bbm  = _tmpdir+"/"+"dvec%S.bbm";
  Text _A.bbm  = _tmpdir+"/"+"Amat%S.bbm";
  Text _b0.bbm = _tmpdir+"/"+"b0vec%S.bbm";
  Text _result.bbm = _tmpdir+"/"+"result%S.bbm";

  //////////////////////////////////////////////////////////////////////////////
  Text _.autodoc.member.solveQP =
  "Rquadprog::solveQP is a function to interface with the R function "
  "Rquadprog_solve_LP \n"
  "\n"
  "URL http://cran.r-project.org/web/packages/quadprog/quadprog.pdf"
  "\n"
  "Description\n"
  "This routine implements the dual method of Goldfarb and Idnani (1982, 1983) "
  "for solving quadratic programming problems of the form "
  "min(- d' b + 1/2 b' D b) with the constraints A' b >= b0 \n"
  "\n"
  "Arguments\n"
  "  D: matrix appearing in the quadratic function to be minimized.\n"
  "  d: vector appearing in the quadratic function to be minimized.\n"
  "  A: matrix defining the constraints under which we want to minimize the "
      "quadratic function.\n"
  "  b0: vector holding the values of constraint independent terms "
      "(defaults to zero).\n"
  "  optArgs: supplies optional arguments:\n" 
  "    Real meq: the first meq constraints are treated as equality constraints"
                ", all further as inequality constraints (defaults to 0).\n"
  "    Real factorized: logical flag: if TRUE, then we are passing R?1 (where "
                       "D = RT R) instead of  the matrix D in the argument D\n"
  "    Real verbose: If TRUE some traces will be send to standard output"
  "};\n";
  Set solveQP(Matrix D, Matrix d, Matrix A, Matrix b0, Set optArgs)
  //////////////////////////////////////////////////////////////////////////////
  {
    // Prepare exchange files
    // Extract extra arguments
    Real meq        = getOptArg(optArgs, "meq",        0);
    Real factorized = getOptArg(optArgs, "factorized", FALSE);
    Real verbose    = getOptArg(optArgs, "verbose",    FALSE);

    args.info =
      [[
        [[meq,         "meq",        "int"]],
        [[factorized,  "factorized", "bool"]],
        [[verbose,     "verbose",    "bool"]],
        [[_result.bbm, "result.bbm"]]
      ]];
    Set args.bbm =
    [[
      [[ _D.bbm,  D  ]],
      [[ _d.bbm,  d  ]],
      [[ _A.bbm,  A  ]],
      [[ _b0.bbm, b0 ]]
    ]];

    Text argList = Rapi::CreateArgList("Rquadprog_args", args.info);
        
    Set result.names =
    [[
      _result.bbm
    ]];
  
    Text script = 
      "source('"+_tolRquadprog.R+"'); "
      "Rquadprog_solve_QP.TOL('"+_D.bbm+"','"+_d.bbm+"','"+
                                 _A.bbm+"','"+_b0.bbm+"','%A')";

    Set result = Rapi::RunRScript(script, args.bbm, argList, result.names,
                                  verbose);
    [[
      Matrix solution = result[1] 
    ]]
  }

]];
