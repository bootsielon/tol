//////////////////////////////////////////////////////////////////////////////
// FILE:    _structs.tol
// PURPOSE: Structures for use with ARIMA related models 
//////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////
  Struct @VCostStruct
//////////////////////////////////////////////////////////////////////////////
(
  Real PositiveCoef, 
  Real NegativeCoef, 
  Real NullJump
);


//////////////////////////////////////////////////////////////////////////////
  Struct @ARMAStruct
//////////////////////////////////////////////////////////////////////////////
{
  Real Periodicity,
  Polyn AR,
  Polyn MA
};

//////////////////////////////////////////////////////////////////////////////
  Struct @ARMADegreeStruct
//////////////////////////////////////////////////////////////////////////////
{
  Real Periodicity,
  Real ARDegree,
  Real MADegree
};

//////////////////////////////////////////////////////////////////////////////
  Struct @ARMADegreeRangeStruct
//////////////////////////////////////////////////////////////////////////////
{
  Real Periodicity,
  Real MinARDegree,
  Real MaxARDegree,
  Real MinMADegree,
  Real MaxMADegree
};


//////////////////////////////////////////////////////////////////////////////
  Struct @ARIMAStruct
//////////////////////////////////////////////////////////////////////////////
{
  Real  Periodicity,
  Polyn AR,
  Polyn MA,
  Polyn DIF
};

//////////////////////////////////////////////////////////////////////////////
  Struct @ARIMADegreeStruct
//////////////////////////////////////////////////////////////////////////////
{
  Real Periodicity,
  Real ARDegree,
  Real MADegree,
  Real DIFDegree
};

//////////////////////////////////////////////////////////////////////////////
  Struct @ARIMADegreeRangeStruct
//////////////////////////////////////////////////////////////////////////////
{
  Real Periodicity,
  Real MinARDegree,
  Real MaxARDegree,
  Real MinMADegree,
  Real MaxMADegree,
  Real MinDIFDegree,
  Real MaxDIFDegree
};

//////////////////////////////////////////////////////////////////////////////
  Struct @TransferStruct  
//////////////////////////////////////////////////////////////////////////////
{
  Text  Name,
  Text  Expression,
  Polyn Omega,
  Polyn Delta,
  Serie InputSerie,
  Serie InitialValues
};

//////////////////////////////////////////////////////////////////////////////
  Struct @ARIMAEvaluation  
//////////////////////////////////////////////////////////////////////////////
{
  Polyn  DIF,
  Polyn  AR,
  Polyn  MA,
  Serie  Output,
  Serie  Treated,
  Serie  Transformed,
  Set    Effects,
  Serie  Filter,
  Serie  Noise,
  Serie  DifNoise,
  Serie  Residuals,
  Serie  InitZ,
  Serie  InitA
};

//////////////////////////////////////////////////////////////////////////////
  Struct @ARIMAStatisticsResults  
//////////////////////////////////////////////////////////////////////////////
{
  Real VariablesNumber, 
  Real DataNumber, 
  Real StandardError,
  Real Varianze,
  Real SwartzInf
};

//////////////////////////////////////////////////////////////////////////////
  Struct @ParameterInformation
//////////////////////////////////////////////////////////////////////////////
{
  Text Name,
  Text Factor,
  Real Order,
  Real Value,
  Real StDs,
  Real TStudent,
  Real RefuseProb
};

//////////////////////////////////////////////////////////////////////////////
  Struct @ARIMACorrelation  
//////////////////////////////////////////////////////////////////////////////
{
  Matrix HouseHolder,
  Matrix InvHouseHolder,
  Matrix Covarianze,
  Matrix Correlation,
  Matrix Autocorrelation,
  Matrix PartialAutocorrelation
};

//////////////////////////////////////////////////////////////////////////////
  Struct @ARIMADiag
//////////////////////////////////////////////////////////////////////////////
{
  Real Accept,
  Real Refuse,
  Real Value
};

//////////////////////////////////////////////////////////////////////////////
  Struct @ARIMAResults  
//////////////////////////////////////////////////////////////////////////////
{
  @ARIMAStatisticsResults Statistics,
  Set                     Parameters,
  Set                     Correlation, 
  Set                     BigCorrelation,
  Set                     BigResiduals,
  Set                     Diagnostics 
};

//////////////////////////////////////////////////////////////////////////////
  Struct @ARIMATreatment
//////////////////////////////////////////////////////////////////////////////
{
  Text FunctionName,
  Set  Arguments,
  Set  ArgNames
};

//////////////////////////////////////////////////////////////////////////////
  Struct @ARIMATransferStruct  
//////////////////////////////////////////////////////////////////////////////
{  
  Text           Name,
  Serie          Output,
  Set            Treatment,
  @BoxCoxStruct  BoxCox,
  Set            TransferSet, // Set of TransferStruct or EMPTY
  Set            ARIMA,       // Set of @ARIMAStruct
  Set            Evaluation,  // ARIMAEvaluation  structured or EMPTY
  Set            Results      // ARIMAResults structured or EMPTY

};

//////////////////////////////////////////////////////////////////////////////
  Struct @TransforStruct
//////////////////////////////////////////////////////////////////////////////
(
  Code T, 
  Code InvT, 
  Code DerT, 
  Set  TParam
);

//////////////////////////////////////////////////////////////////////////////
Struct @ARPrevStruct
//////////////////////////////////////////////////////////////////////////////
( 
  Serie Output,
  Real  BoxCox,
  Polyn ARI,
  Real  Sigma,
  Serie Residuals,
  Set   Bands
);


//////////////////////////////////////////////////////////////////////////////
   Struct @InputWidthName
//
// PURPOSE: Use this structure to save inputs in BST Files.
//
//////////////////////////////////////////////////////////////////////////////
{
  Polyn Omega,
  Text  X
};


//////////////////////////////////////////////////////////////////////////////
   Serie NullSerie(Real x) { 0 };
   Set AllLinear = @NonLinearInputDef(Empty,"NullSerie");
//
// PURPOSE: To use when all inputs are linears
//
//////////////////////////////////////////////////////////////////////////////


//////////////////////////////////////////////////////////////////////////////
   Struct @ModelBst
//
// PURPOSE: Estimated ARIMAX model structure to be saved. It only includes 
//          scalar information. 
//
//////////////////////////////////////////////////////////////////////////////
{
  Text  OutputName,
  Real  FstTransfor,
  Real  SndTransfor,
  Real  Period,
  Real  Constant,
  Polyn Dif,
  Polyn RegAR,
  Polyn SeaAR,
  Polyn RegMA,
  Polyn SeaMA,
  Real  StandardDesviation
};


//////////////////////////////////////////////////////////////////////////////
   Struct @ModelInformation 
//
// PURPOSE: Important scalar information of a model.
//
//////////////////////////////////////////////////////////////////////////////
(
  Date FirstDate,
  Date LastDate,
  Real NumberOfData,
  Real NumberOfVariables,
  Real Average,
  Real SumOfSquares,
  Real Varianze,
  Real StandardError,
  Real Asimetry,
  Real Kurtosis,
  Real PearsonCoeficient,
  Real R2Coeficient,
  Real SwartzInformationCriterium,
  Text Qualification,
  Real ArithmeticQualification
);


//////////////////////////////////////////////////////////////////////////////
   Struct @ParameterAPrioriInf
//
// PURPOSE: In an estimated ARIMAX model this structure
//
//////////////////////////////////////////////////////////////////////////////
{
  Text Name,
  Real Order,
  Real Nu,
  Real Sigma
};


//////////////////////////////////////////////////////////////////////////////
   Struct @TestBounds
//
// PURPOSE: Accept and refuse bounds for a particular test 
//
//////////////////////////////////////////////////////////////////////////////
{
  Real Accept,
  Real Refuse
};


//////////////////////////////////////////////////////////////////////////////
// Default values for Test's bounds
//////////////////////////////////////////////////////////////////////////////
Set DiagnosticsBounds = Include("_diagbounds.bst");

