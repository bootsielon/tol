//////////////////////////////////////////////////////////////////////////////
// FILE    :
// PURPOSE :
//////////////////////////////////////////////////////////////////////////////

Set  BoxCoxOptions = SetOfReal(-1,-1/2,-1/3,-1/4,0,1/4,1/3,1/2,1);

//////////////////////////////////////////////////////////////////////////////
  Real EvalTransfor(TransforStruct trans, Real x)
//////////////////////////////////////////////////////////////////////////////
{
  Code function = trans->T;
  function(x,trans->TParam)
};

//////////////////////////////////////////////////////////////////////////////
  Real EvalInvTransfor(TransforStruct trans, Real x)
//////////////////////////////////////////////////////////////////////////////
{
  Code function = trans->InvT;
  function(x,trans->TParam)
};


//////////////////////////////////////////////////////////////////////////////
  Real EvalDerTransfor(TransforStruct trans, Real x)
//////////////////////////////////////////////////////////////////////////////
{
  Code function = trans->DerT;
  function(x,trans->TParam)
};

//////////////////////////////////////////////////////////////////////////////
  Matrix MatrixEval(Code function, Matrix x, Set param)
//////////////////////////////////////////////////////////////////////////////
{
  Real eval(Real i, Real j)
  {
    function(MatDat(x,i,j),param)
  };
  ForMat(Rows(x),Columns(x),eval)
};

//////////////////////////////////////////////////////////////////////////////
  Matrix MEvalTransfor(TransforStruct trans, Matrix x)
//////////////////////////////////////////////////////////////////////////////
{
  MatrixEval(trans->T,trans->TParam,x)
};


//////////////////////////////////////////////////////////////////////////////
  Matrix MEvalInvTransfor(TransforStruct trans, Matrix x)
//////////////////////////////////////////////////////////////////////////////
{
  MatrixEval(trans->InvT,trans->TParam,x)
};

//////////////////////////////////////////////////////////////////////////////
  Matrix MEvalDerTransfor(TransforStruct trans, Matrix x)
//////////////////////////////////////////////////////////////////////////////
{
  MatrixEval(trans->DerT,trans->TParam,x)
};


//////////////////////////////////////////////////////////////////////////////
  Real TBoxCox(Real x, Set param)
//////////////////////////////////////////////////////////////////////////////
{
  Real y = x + param[1];
  If(param[2], y^param[2], Log(y))
};

//////////////////////////////////////////////////////////////////////////////
  Real InvTBoxCox(Real x, Set param)
//////////////////////////////////////////////////////////////////////////////
{
  Real y = If(param[2], x^(1/param[2]), Exp(x));
  y - param[1]
};

//////////////////////////////////////////////////////////////////////////////
  Real DerTBoxCox(Real x, Set param)
//////////////////////////////////////////////////////////////////////////////
{
  If(param[2], param[2]*y^(param[2]-1), 1/x)
};


//////////////////////////////////////////////////////////////////////////////
  Set GetBoxCoxTrans(BoxCoxStruct  boxcox)
//////////////////////////////////////////////////////////////////////////////
{
  TransforStruct
  (
    Copy(TBoxCox),
    Copy(InvTBoxCox), 
    Copy(DerTBoxCox), 
    boxcox
  )
};

//////////////////////////////////////////////////////////////////////////////
  Set GetBoxCoxEC(Real exponent, Real constant)
//////////////////////////////////////////////////////////////////////////////
{
  GetBoxCoxTrans(BoxCoxStruct(exponent,constant))  
};

Set IdBoxCox  = GetBoxCoxTrans(BoxCoxStruct(1,0));
Set LogBoxCox = GetBoxCoxTrans(BoxCoxStruct(0,0));


//////////////////////////////////////////////////////////////////////////////
  Serie  BoxCoxTransf(Serie z, BoxCoxStruct bc)
//////////////////////////////////////////////////////////////////////////////
{
  Real bce = bc->Exponent;
  Real bcc = bc->Constant;
  Serie s = z+bcc; 
  If(bce==0, Log(s), s^bce)
};


//////////////////////////////////////////////////////////////////////////////
  Serie  BoxCoxInvTransf(Serie s, BoxCoxStruct bc)
//////////////////////////////////////////////////////////////////////////////
{
  Real bcc = bc->Constant;
  Real bce = bc->Exponent;
  Real invExp = 1/bce;
  Serie u = If(bce==0, Exp(s), s^invExp);
  u-bcc
};

//////////////////////////////////////////////////////////////////////////////
  Real  BoxCoxLikelihood(Serie s, BoxCoxStruct bc)
//////////////////////////////////////////////////////////////////////////////
{
  Real  exp = bc->Exponent;
  Real  con = bc->Constant;
  Serie x   = s + con;
  Serie y   = If(exp==0, Log(x), (x^exp - 1)/exp);
  Real  xg  = Exp(-AvrS(Log(x))*(exp-1));
  Serie zx  = y*xg;
  StDsS(zx)
};

//////////////////////////////////////////////////////////////////////////////
  Set BoxCoxMinLikelihood(Serie s, Set BCOptions)
//////////////////////////////////////////////////////////////////////////////
{
  Real  m = -Min(0,MinS(s));
  Serie z = s+m;
  Set LH = EvalSet(BCOptions,Set(Real exp)
  {
    Real L = BoxCoxLikelihood(z, BoxCoxStruct(exp,0));
    [[exp,L]]
  });
  Set sortLH  = Sort(LH,Real(Set s1, Set s2) { Compare(s1[2],s2[2]) } );
  BoxCoxStruct(sortLH[1][1],m)
};

