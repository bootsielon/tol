//////////////////////////////////////////////////////////////////////////////
// FILE    : _db_api.tools.tol
// PURPOSE : Implements database tools related methods of NameBlock 
//           BysMcmc::Bsr::DynHlm::DBApi
//////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////
//
Real ModSes.CheckBlocked(Text dbName, 
                        Text model, 
                        Text session,
                        Real forzeStop)
////////////////////////////////////////////////////////////////////////////
{
  NameBlock _table = BysMcmc::Bsr::DynHlm::DBApi::_.table;
  Real isBlocked = BysMcmc::Bsr::DynHlm::DBApi::SqlTableTrace(
  "SELECT count(*) FROM "+dbName+"."+_table::EstimStatus+"\n"
  "WHERE id_model='"+model+"' AND id_session='"+session+"' "
  "AND in_blocked <> 0;\n","")[1][1];
  If(isBlocked & forzeStop,
  {
    WriteLn("[BysMcmc::Bsr::DynHlm::DBApi::ModSes.CheckBlocked] "
            "Model-Session is blocked!\n"+
            "Sorry, TOL process will be stoped due to ModSes("+model+","+
            session+") is currently in use by other estimation process.\n"+
            "Please, modify your session or waits until it will be "+
            "unblocked.\n"
            "If blocking process is hanged or it was aborted you can unblock "
            "it setting field bsrhlm_v_est_status.in_blocked = 0",
            "E");
    Real Stop
  });
  isBlocked
};

////////////////////////////////////////////////////////////////////////////
//
Real ModSes.SetBlocked(Text dbName, 
                      Text model, 
                      Text session,
                      Real blocked)
////////////////////////////////////////////////////////////////////////////
{
  NameBlock _table = BysMcmc::Bsr::DynHlm::DBApi::_.table;
  Real DBExecQuery(
  "UPDATE "+dbName+"."+_table::EstimStatus+"\n"+
  "SET in_blocked = "+If(blocked,"1","0")+" \n"+
  "WHERE id_model='"+model+"' AND id_session='"+session+"';")
};

//////////////////////////////////////////////////////////////////////////////
//Inserts a model-session register
Real ModSes.Create(Text dbName, 
                   Text model, 
                   Text session)
//////////////////////////////////////////////////////////////////////////////
{
  If(BysMcmc::Bsr::DynHlm::DBApi::ModSes.CheckBlocked(
      dbName, model, session, true), 0,
  {
    NameBlock _table = BysMcmc::Bsr::DynHlm::DBApi::_.table;
    Real If(BysMcmc::Bsr::DynHlm::DBApi::SqlTableTrace(
      "SELECT count(*) FROM "+dbName+"."+_table::ModSes+"\n"
      "WHERE id_model='"+model+"' AND id_session='"+session+"';","")[1][1],
    {
      ModSes.Delete(dbName, model, session)
    });
    Real ok.1 = BysMcmc::Bsr::DynHlm::DBApi::SqlExecTrace(
      "INSERT INTO "+_table::ModSes+"\n"
      "VALUES('"+model+"','"+session+"')\n");
    Real ok.2 = BysMcmc::Bsr::DynHlm::DBApi::ModSes.SetBlocked(
      dbName, model, session, true);
    Eval("Ses.Create.ok=ok.1 & ok.2")
  })
};

//////////////////////////////////////////////////////////////////////////////
//Inserts levels for a models-session
Real ModSes.SetLevels(Text dbName, 
                      Text model, 
                      Text session,
                      Real maxLatLevel,
                      Real hasPrior,
                      Real hasMixture)
//////////////////////////////////////////////////////////////////////////////
{
  NameBlock _table = BysMcmc::Bsr::DynHlm::DBApi::_.table;
  Real BysMcmc::Bsr::DynHlm::DBApi::SqlExecTrace(
    "INSERT INTO "+_table::Level+"\n"
    "VALUES('"+model+"','"+session+"','OBS',0)\n");
  If(hasPrior, Real BysMcmc::Bsr::DynHlm::DBApi::SqlExecTrace(
    "INSERT INTO "+_table::Level+"\n"
    "VALUES('"+model+"','"+session+"','PRI',888888888)\n"));
  If(hasMixture, Real BysMcmc::Bsr::DynHlm::DBApi::SqlExecTrace(
    "INSERT INTO "+_table::Level+"\n"
    "VALUES('"+model+"','"+session+"','MIX',999999999)\n"));
  Real ok = SetMin(For(1,maxLatLevel, Real insert.level(Real level)
  {
    Real BysMcmc::Bsr::DynHlm::DBApi::SqlExecTrace(
    "INSERT INTO "+_table::Level+"\n"
    "VALUES('"+model+"','"+session+"','LAT',"+IntText(level)+")\n")
  }));
  Eval("ModSes.SetLevels.ok=ok")
};

//////////////////////////////////////////////////////////////////////////////
//Inserts a new node register
Real ModSes.Node.Create(Text dbName, 
                        Text model, 
                        Text session,
                        Text node, 
                        Text nodeType,
                        Real level,
                        Real number,
                        Text description)
//////////////////////////////////////////////////////////////////////////////
{
  NameBlock _table = BysMcmc::Bsr::DynHlm::DBApi::_.table;
  Real ok = BysMcmc::Bsr::DynHlm::DBApi::SqlExecTrace(
  "INSERT INTO "+dbName+"."+_table::Node+"\n"+
  "VALUES('"+model+"','"+session+"','"+node+"','"+nodeType+"',"+
  IntText(level)+","+
  IntText(number)+","+
  "'"+description+"')");
  Eval("ModSes.Node.Create.ok=ok")
};

//////////////////////////////////////////////////////////////////////////////
//Deletes all registers related to a given model-session among all affected
//bsrhlm_ tables
Real ModSes.Delete(Text dbName, 
                   Text model, 
                   Text session)
//////////////////////////////////////////////////////////////////////////////
{
  NameBlock _table = BysMcmc::Bsr::DynHlm::DBApi::_.table;
  Real BysMcmc::Bsr::DynHlm::DBApi::ModSes.CheckBlocked(
    dbName, model, session, true);
  Real BysMcmc::Bsr::DynHlm::DBApi::SqlExecTrace(
  "DELETE FROM "+dbName+"."+_table::ParamStats+"\n"+
  "WHERE id_model='"+model+"' AND id_session='"+session+"';");
  Real BysMcmc::Bsr::DynHlm::DBApi::SqlExecTrace(
  "DELETE FROM "+dbName+"."+_table::EstimStatus+"\n"+
  "WHERE id_model='"+model+"' AND id_session='"+session+"';");
  Real BysMcmc::Bsr::DynHlm::DBApi::SqlExecTrace(
  "DELETE FROM "+dbName+"."+_table::PriEqu+"\n"+
  "WHERE id_model='"+model+"' AND id_session='"+session+"';");
  Real BysMcmc::Bsr::DynHlm::DBApi::SqlExecTrace(
  "DELETE FROM "+dbName+"."+_table::PriOutput+"\n"+
  "WHERE id_model='"+model+"' AND id_session='"+session+"';");
  Real BysMcmc::Bsr::DynHlm::DBApi::SqlExecTrace(
  "DELETE FROM "+dbName+"."+_table::LatInput+"\n"+
  "WHERE id_model='"+model+"' AND id_session='"+session+"';");
  Real BysMcmc::Bsr::DynHlm::DBApi::SqlExecTrace(
  "DELETE FROM "+dbName+"."+_table::LatOutput+"\n"+
  "WHERE id_model='"+model+"' AND id_session='"+session+"';");
  Real BysMcmc::Bsr::DynHlm::DBApi::SqlExecTrace(
  "DELETE FROM "+dbName+"."+_table::LatEqu+"\n"+
  "WHERE id_model='"+model+"' AND id_session='"+session+"';");
  Real BysMcmc::Bsr::DynHlm::DBApi::SqlExecTrace(
  "DELETE FROM "+dbName+"."+_table::LatSigBlk+"\n"+
  "WHERE id_model='"+model+"' AND id_session='"+session+"';");
  Real BysMcmc::Bsr::DynHlm::DBApi::SqlExecTrace(
  "DELETE FROM "+dbName+"."+_table::ObsInput+"\n"+
  "WHERE id_model='"+model+"' AND id_session='"+session+"';");
  Real BysMcmc::Bsr::DynHlm::DBApi::SqlExecTrace(
  "DELETE FROM "+dbName+"."+_table::ObsTransFun+"\n"+
  "WHERE id_model='"+model+"' AND id_session='"+session+"';");
  Real BysMcmc::Bsr::DynHlm::DBApi::SqlExecTrace(
  "DELETE FROM "+dbName+"."+_table::ObsArimaBlk+"\n"+
  "WHERE id_model='"+model+"' AND id_session='"+session+"';");
  Real BysMcmc::Bsr::DynHlm::DBApi::SqlExecTrace(
  "DELETE FROM "+dbName+"."+_table::ObsOutput+"\n"+
  "WHERE id_model='"+model+"' AND id_session='"+session+"';");
  Real BysMcmc::Bsr::DynHlm::DBApi::SqlExecTrace(
  "DELETE FROM "+dbName+"."+_table::ConstrLinComb+"\n"+
  "WHERE id_model='"+model+"' AND id_session='"+session+"';");
  Real BysMcmc::Bsr::DynHlm::DBApi::SqlExecTrace(
  "DELETE FROM "+dbName+"."+_table::ConstrBorder+"\n"+
  "WHERE id_model='"+model+"' AND id_session='"+session+"';");
  Real BysMcmc::Bsr::DynHlm::DBApi::SqlExecTrace(
  "DELETE FROM "+dbName+"."+_table::OrderRel+"\n"+
  "WHERE id_model='"+model+"' AND id_session='"+session+"';");
  Real BysMcmc::Bsr::DynHlm::DBApi::SqlExecTrace(
  "DELETE FROM "+dbName+"."+_table::Parameter+"\n"+
  "WHERE id_model='"+model+"' AND id_session='"+session+"';");
  Real BysMcmc::Bsr::DynHlm::DBApi::SqlExecTrace(
  "DELETE FROM "+dbName+"."+_table::NonLinFlt+"\n"+
  "WHERE id_model='"+model+"' AND id_session='"+session+"';");
  Real BysMcmc::Bsr::DynHlm::DBApi::SqlExecTrace(
  "DELETE FROM "+dbName+"."+_table::Node+"\n"+
  "WHERE id_model='"+model+"' AND id_session='"+session+"';");
  Real BysMcmc::Bsr::DynHlm::DBApi::SqlExecTrace(
  "DELETE FROM "+dbName+"."+_table::Level+"\n"+
  "WHERE id_model='"+model+"' AND id_session='"+session+"';");
  Real BysMcmc::Bsr::DynHlm::DBApi::SqlExecTrace(
  "DELETE FROM "+dbName+"."+_table::ModSes+"\n"+
  "WHERE id_model='"+model+"' AND id_session='"+session+"';");
  1
};

//////////////////////////////////////////////////////////////////////////////
//Replicates all registers related to a given model-session with a new 
//identification triplet (dbName, model, session) among all affected 
//bsrhlm_ tables
Real ModSes.Replicate(Text from_dbName, 
                      Text from_model, 
                      Text from_session,
                      Text to_dbName, 
                      Text to_model, 
                      Text to_session)
//////////////////////////////////////////////////////////////////////////////
{
  Real ModSes.Delete(to_dbName, to_model, to_session);
  NameBlock _table = BysMcmc::Bsr::DynHlm::DBApi::_.table;
  If(Not(BysMcmc::Bsr::DynHlm::DBApi::SqlTableTrace(
    "SELECT count(*) FROM "+to_dbName+"."+_table::Model+"\n"
    "WHERE id_model='"+to_model+"';","")[1][1]),
  {
    BysMcmc::Bsr::DynHlm::DBApi::SqlExecTrace(
    "INSERT INTO "+to_dbName+"."+_table::Model+"\n"+
    "SELECT '"+to_model+"', ds_model \n"+
    "FROM "+from_dbName+"."+_table::Model+"\n"
    "WHERE id_model='"+from_model+"';")
  });
  If(Not(BysMcmc::Bsr::DynHlm::DBApi::SqlTableTrace(
    "SELECT count(*) FROM "+to_dbName+"."+_table::Session+"\n"
    "WHERE id_session='"+to_session+"';","")[1][1]),
  {
    Real BysMcmc::Bsr::DynHlm::DBApi::SqlExecTrace(
    "INSERT INTO "+to_dbName+"."+_table::Session+"\n"+
    "SELECT '"+to_session+"', ds_session, te_authors, "+
    SqlFormatDate(Now)+" \n"+
    "FROM "+from_dbName+"."+_table::Session+"\n"+
    "WHERE id_session='"+from_session+"';")
  });

  Real BysMcmc::Bsr::DynHlm::DBApi::SqlExecTrace(
  "INSERT INTO "+to_dbName+"."+_table::ModSes+"\n"+
  "SELECT '"+to_model+"', '"+to_session+"' \n"+
  "FROM "+from_dbName+"."+_table::ModSes+"\n"+
  "WHERE id_model='"+from_model+"' AND id_session='"+from_session+"';");

  Real BysMcmc::Bsr::DynHlm::DBApi::SqlExecTrace(
  "INSERT INTO "+to_dbName+"."+_table::Level+"\n"+
  "SELECT '"+to_model+"', '"+to_session+"', id_node_type, nu_level\n"+
  "FROM "+from_dbName+"."+_table::Level+"\n"+
  "WHERE id_model='"+from_model+"' AND id_session='"+from_session+"';");

  Real BysMcmc::Bsr::DynHlm::DBApi::SqlExecTrace(
  "INSERT INTO "+to_dbName+"."+_table::Node+"\n"+
  "SELECT '"+to_model+"', '"+to_session+"', id_node, "
  "id_node_type, nu_level, nu_node,  ds_node \n"+
  "FROM "+from_dbName+"."+_table::Node+"\n"+
  "WHERE id_model='"+from_model+"' AND id_session='"+from_session+"';");

  Real BysMcmc::Bsr::DynHlm::DBApi::SqlExecTrace(
  "INSERT INTO "+to_dbName+"."+_table::Parameter+"\n"+
  "SELECT '"+to_model+"', '"+to_session+"', id_node, "
  "id_parameter, id_gibbs_blk, vl_prm_ini, "
  "vl_prm_min, vl_prm_max \n"+
  "FROM "+from_dbName+"."+_table::Parameter+"\n"+
  "WHERE id_model='"+from_model+"' AND id_session='"+from_session+"';");

  Real BysMcmc::Bsr::DynHlm::DBApi::SqlExecTrace(
  "INSERT INTO "+to_dbName+"."+_table::NonLinFlt+"\n"+
  "SELECT '"+to_model+"', '"+to_session+"', "
  "id_node, id_series, nu_lin_blk_param, nu_non_lin_blk_param \n"+
  "FROM "+from_dbName+"."+_table::NonLinFlt+"\n"+
  "WHERE id_model='"+from_model+"' AND id_session='"+from_session+"';");

  Real BysMcmc::Bsr::DynHlm::DBApi::SqlExecTrace(
  "INSERT INTO "+to_dbName+"."+_table::OrderRel+"\n"+
  "SELECT '"+to_model+"', '"+to_session+"', "
  "id_node_lower, id_parameter_lower, id_node_upper, id_parameter_upper \n"+
  "FROM "+from_dbName+"."+_table::OrderRel+"\n"+
  "WHERE id_model='"+from_model+"' AND id_session='"+from_session+"';");

  Real BysMcmc::Bsr::DynHlm::DBApi::SqlExecTrace(
  "INSERT INTO "+to_dbName+"."+_table::ConstrBorder+"\n"+
  "SELECT '"+to_model+"', '"+to_session+"', "
  "nu_inequation, id_node, vl_left_border, vl_right_border \n"+
  "FROM "+from_dbName+"."+_table::ConstrBorder+"\n"+
  "WHERE id_model='"+from_model+"' AND id_session='"+from_session+"';");

  Real BysMcmc::Bsr::DynHlm::DBApi::SqlExecTrace(
  "INSERT INTO "+to_dbName+"."+_table::ConstrLinComb+"\n"+
  "SELECT '"+to_model+"', '"+to_session+"', "
  "nu_inequation, id_node, id_parameter, vl_coef \n"+
  "FROM "+from_dbName+"."+_table::ConstrLinComb+"\n"+
  "WHERE id_model='"+from_model+"' AND id_session='"+from_session+"';");

  Real BysMcmc::Bsr::DynHlm::DBApi::SqlExecTrace(
  "INSERT INTO "+to_dbName+"."+_table::ObsOutput+"\n"+
  "SELECT '"+to_model+"', '"+to_session+"', id_node, "
  "id_series, vl_mis_pri_sig_fac, "
  "vl_mis_pri_min, vl_mis_pri_max, dh_start, dh_end \n"+
  "FROM "+from_dbName+"."+_table::ObsOutput+"\n"+
  "WHERE id_model='"+from_model+"' AND id_session='"+from_session+"';");

  Real BysMcmc::Bsr::DynHlm::DBApi::SqlExecTrace(
  "INSERT INTO "+to_dbName+"."+_table::ObsArimaBlk+"\n"+
  "SELECT '"+to_model+"', '"+to_session+"', id_node, "
  "nu_factor, nu_period, te_ar, te_ma, te_dif \n"+
  "FROM "+from_dbName+"."+_table::ObsArimaBlk+"\n"+
  "WHERE id_model='"+from_model+"' AND id_session='"+from_session+"';");

  Real BysMcmc::Bsr::DynHlm::DBApi::SqlExecTrace(
  "INSERT INTO "+to_dbName+"."+_table::ObsInput+"\n"+
  "SELECT '"+to_model+"', '"+to_session+"', id_node, "
  "id_parameter, id_series, vl_mis_pri_sig_fac, "
  "vl_mis_pri_min, vl_mis_pri_max \n"+
  "FROM "+from_dbName+"."+_table::ObsInput+"\n"+
  "WHERE id_model='"+from_model+"' AND id_session='"+from_session+"';");

  Real BysMcmc::Bsr::DynHlm::DBApi::SqlExecTrace(
  "INSERT INTO "+to_dbName+"."+_table::ObsTransFun+"\n"+
  "SELECT '"+to_model+"', '"+to_session+"', id_node, "
  "id_transferFunction, te_omega, te_delta, "  
  "id_series, vl_mis_pri_sig_fac, "
  "vl_mis_pri_min, vl_mis_pri_max \n"+
  "FROM "+from_dbName+"."+_table::ObsTransFun+"\n"+
  "WHERE id_model='"+from_model+"' AND id_session='"+from_session+"';");

  Real BysMcmc::Bsr::DynHlm::DBApi::SqlExecTrace(
  "INSERT INTO "+to_dbName+"."+_table::LatSigBlk+"\n"+
  "SELECT '"+to_model+"', '"+to_session+"', id_node, vl_sigma \n"+
  "FROM "+from_dbName+"."+_table::LatSigBlk+"\n"+
  "WHERE id_model='"+from_model+"' AND id_session='"+from_session+"';");

  Real BysMcmc::Bsr::DynHlm::DBApi::SqlExecTrace(
  "INSERT INTO "+to_dbName+"."+_table::LatEqu+"\n"+
  "SELECT '"+to_model+"', '"+to_session+"', "
  "id_node_father, nu_equation, vl_sigma_factor \n"+
  "FROM "+from_dbName+"."+_table::LatEqu+"\n"+
  "WHERE id_model='"+from_model+"' AND id_session='"+from_session+"';");

  Real BysMcmc::Bsr::DynHlm::DBApi::SqlExecTrace(
  "INSERT INTO "+to_dbName+"."+_table::LatOutput+"\n"+
  "SELECT '"+to_model+"', '"+to_session+"', "
  "id_node_father, nu_equation, id_node_child, id_parameter_child, vl_coef \n"+
  "FROM "+from_dbName+"."+_table::LatOutput+"\n"+
  "WHERE id_model='"+from_model+"' AND id_session='"+from_session+"';");

  Real BysMcmc::Bsr::DynHlm::DBApi::SqlExecTrace(
  "INSERT INTO "+to_dbName+"."+_table::LatInput+"\n"+
  "SELECT '"+to_model+"', '"+to_session+"', "
  "id_node_father, nu_equation, id_parameter_father, vl_coef \n"+
  "FROM "+from_dbName+"."+_table::LatInput+"\n"+
  "WHERE id_model='"+from_model+"' AND id_session='"+from_session+"';");

  Real BysMcmc::Bsr::DynHlm::DBApi::SqlExecTrace(
  "INSERT INTO "+to_dbName+"."+_table::PriEqu+"\n"+
  "SELECT '"+to_model+"', '"+to_session+"', "
  "id_node_father,nu_equation,vl_average,vl_sigma \n"+
  "FROM "+from_dbName+"."+_table::PriEqu+"\n"+
  "WHERE id_model='"+from_model+"' AND id_session='"+from_session+"';");

  Real BysMcmc::Bsr::DynHlm::DBApi::SqlExecTrace(
  "INSERT INTO "+to_dbName+"."+_table::PriOutput+"\n"+
  "SELECT '"+to_model+"', '"+to_session+"', "
  "id_node_father,nu_equation,id_node_child,id_parameter_child,vl_coef \n"+
  "FROM "+from_dbName+"."+_table::PriOutput+"\n"+
  "WHERE id_model='"+from_model+"' AND id_session='"+from_session+"';");

  Real BysMcmc::Bsr::DynHlm::DBApi::SqlExecTrace(
  "INSERT INTO "+to_dbName+"."+_table::EstimStatus+"\n"+
  "SELECT '"+to_model+"', '"+to_session+"', 0,"
  "  te_path_data_out, \n"+
  "  nu_mcmc_var, \n"+
  "  nu_mcmc_burnin, \n"+
  "  nu_mcmc_sampleLength, \n"+
  "  nu_mcmc_cacheLength, \n"+
  "  nu_mcmc_currentLength, \n"+
  "  vl_mcmc_time_avg, \n"+
  "  nu_error, \n"+
  "  nu_warning, \n"+
  "  dh_loading, \n"+
  "  dh_parsing, \n"+
  "  dh_initializing, \n"+
  "  dh_simulating, \n"+
  "  dh_reporting, \n"+
  "  dh_evaluating, \n"+
  "  dh_saving, \n"+
  "  dh_ending  \n"+
  "FROM "+from_dbName+"."+_table::EstimStatus+"\n"+
  "WHERE id_model='"+from_model+"' AND id_session='"+from_session+"';");

  Real BysMcmc::Bsr::DynHlm::DBApi::SqlExecTrace(
  "INSERT INTO "+to_dbName+"."+_table::ParamStats+"\n"+
  "SELECT '"+to_model+"', '"+to_session+"', "
  "  id_node, id_parameter, id_gibbs_blk , nu_mcmc_index, \n"+
  "  vl_mean,\n"+
  "  vl_sd,\n"+
  "  vl_naive_se, \n"+
  "  vl_tmser_se, \n"+
  "  vl_q_001, \n"+
  "  vl_q_025, \n"+
  "  vl_q_250, \n"+
  "  vl_q_500, \n"+
  "  vl_q_750, \n"+
  "  vl_q_975, \n"+
  "  vl_q_999, \n"+
  "  vl_raftery_length, \n"+
  "  vl_raftery_burnin, \n"+
  "  vl_raftery_size, \n"+
  "  vl_raftery_size_min, \n"+
  "  vl_raftery_dep_factor, \n"+
  "  vl_raftery_remain \n"+
  "FROM "+from_dbName+"."+_table::ParamStats+"\n"+
  "WHERE id_model='"+from_model+"' AND id_session='"+from_session+"';");

  1
};

//////////////////////////////////////////////////////////////////////////////
//Renames all registers related to a given model-session with a new 
//identification pair (model, session) among all affected bsrhlm_ tables
Real ModSes.Rename(Text dbName, 
                   Text from_model, 
                   Text from_session,
                   Text to_model, 
                   Text to_session)
//////////////////////////////////////////////////////////////////////////////
{
  Real ModSes.Replicate(dbName, from_model, from_session,
                        dbName,   to_model,   to_session);
  Real ModSes.Delete   (dbName, from_model, from_session);
  1
};

//////////////////////////////////////////////////////////////////////////////
//Moves all registers related to a given model-session with a new 
//identification triplet (dbName, model, session) among all affected 
//bsrhlm_ tables
Real ModSes.Move(Text from_dbName, 
                 Text from_model, 
                 Text from_session,
                 Text to_dbName, 
                 Text to_model, 
                 Text to_session)
//////////////////////////////////////////////////////////////////////////////
{
  Real ModSes.Replicate(from_dbName, from_model, from_session,
                        to_dbName,   to_model,   to_session);
  Real ModSes.Delete   (from_dbName, from_model, from_session);
  1
};

//////////////////////////////////////////////////////////////////////////////
//Renames all registers related to a given node into a specified 
//model-session with a new identification node name among all affected 
//bsrhlm_ tables
Real ModSes.Node.Rename(Text dbName, 
                        Text model, 
                        Text session,
                        Text from_node, 
                        Text to_node)
//////////////////////////////////////////////////////////////////////////////
{
  NameBlock _table = BysMcmc::Bsr::DynHlm::DBApi::_.table;
  Real BysMcmc::Bsr::DynHlm::DBApi::ModSes.CheckBlocked(
    dbName, model, session, true);
  Real ForeignKey.Disable(0);

  Real BysMcmc::Bsr::DynHlm::DBApi::SqlExecTrace(
  "UPDATE "+dbName+"."+_table::Node+"\n"+
  "SET id_node = '"+to_node+"' \n"+
  "WHERE id_model='"+model+"' AND id_session='"+session+
  "' AND id_node='"+from_node+"';");

  Real BysMcmc::Bsr::DynHlm::DBApi::SqlExecTrace(
  "UPDATE "+dbName+"."+_table::ObsOutput+"\n"+
  "SET id_node = '"+to_node+"' \n"+
  "WHERE id_model='"+model+"' AND id_session='"+session+
  "' AND id_node='"+from_node+"';");

  Real BysMcmc::Bsr::DynHlm::DBApi::SqlExecTrace(
  "UPDATE "+dbName+"."+_table::ObsInput+"\n"+
  "SET id_node = '"+to_node+"' \n"+
  "WHERE id_model='"+model+"' AND id_session='"+session+
  "' AND id_node='"+from_node+"';");

  Real BysMcmc::Bsr::DynHlm::DBApi::SqlExecTrace(
  "UPDATE "+dbName+"."+_table::ObsTransFun+"\n"+
  "SET id_node = '"+to_node+"' \n"+
  "WHERE id_model='"+model+"' AND id_session='"+session+
  "' AND id_node='"+from_node+"';");
  
  Real BysMcmc::Bsr::DynHlm::DBApi::SqlExecTrace(
  "UPDATE "+dbName+"."+_table::LatSigBlk+"\n"+
  "SET id_node = '"+to_node+"' \n"+
  "WHERE id_model='"+model+"' AND id_session='"+session+
  "' AND id_node='"+from_node+"';");

  Real BysMcmc::Bsr::DynHlm::DBApi::SqlExecTrace(
  "UPDATE "+dbName+"."+_table::LatEqu+"\n"+
  "SET id_node_father = '"+to_node+"' \n"+
  "WHERE id_model='"+model+"' AND id_session='"+session+
  "' AND id_node_father='"+from_node+"';");

  Real BysMcmc::Bsr::DynHlm::DBApi::SqlExecTrace(
  "UPDATE "+dbName+"."+_table::LatOutput+"\n"+
  "SET id_node_father = '"+to_node+"' \n"+
  "WHERE id_model='"+model+"' AND id_session='"+session+
  "' AND id_node_father='"+from_node+"';");

  Real BysMcmc::Bsr::DynHlm::DBApi::SqlExecTrace(
  "UPDATE "+dbName+"."+_table::LatOutput+"\n"+
  "SET id_node_child = '"+to_node+"' \n"+
  "WHERE id_model='"+model+"' AND id_session='"+session+
  "' AND id_node_child='"+from_node+"';");

  Real BysMcmc::Bsr::DynHlm::DBApi::SqlExecTrace(
  "UPDATE "+dbName+"."+_table::LatInput+"\n"+
  "SET id_node_father = '"+to_node+"' \n"+
  "WHERE id_model='"+model+"' AND id_session='"+session+
  "' AND id_node_father='"+from_node+"';");

  Real BysMcmc::Bsr::DynHlm::DBApi::SqlExecTrace(
  "UPDATE "+dbName+"."+_table::PriEqu+"\n"+
  "SET id_node_father = '"+to_node+"' \n"+
  "WHERE id_model='"+model+"' AND id_session='"+session+
  "' AND id_node_father='"+from_node+"';");

  Real BysMcmc::Bsr::DynHlm::DBApi::SqlExecTrace(
  "UPDATE "+dbName+"."+_table::PriOutput+"\n"+
  "SET id_node_father = '"+to_node+"' \n"+
  "WHERE id_model='"+model+"' AND id_session='"+session+
  "' AND id_node_father='"+from_node+"';");

  Real BysMcmc::Bsr::DynHlm::DBApi::SqlExecTrace(
  "UPDATE "+dbName+"."+_table::PriOutput+"\n"+
  "SET id_node_child = '"+to_node+"' \n"+
  "WHERE id_model='"+model+"' AND id_session='"+session+
  "' AND id_node_child='"+from_node+"';");

  Real BysMcmc::Bsr::DynHlm::DBApi::SqlExecTrace(
  "UPDATE "+dbName+"."+_table::Parameter+"\n"+
  "SET id_node = '"+to_node+"' \n"+
  "WHERE id_model='"+model+"' AND id_session='"+session+
  "' AND id_node='"+from_node+"';");

  Real BysMcmc::Bsr::DynHlm::DBApi::SqlExecTrace(
  "UPDATE "+dbName+"."+_table::NonLinFlt+"\n"+
  "SET id_node = '"+to_node+"' \n"+
  "WHERE id_model='"+model+"' AND id_session='"+session+
  "' AND id_node='"+from_node+"';");

  Real BysMcmc::Bsr::DynHlm::DBApi::SqlExecTrace(
  "UPDATE "+dbName+"."+_table::OrderRel+"\n"+
  "SET id_node_lower = '"+to_node+"' \n"+
  "WHERE id_model='"+model+"' AND id_session='"+session+
  "' AND id_node_lower='"+from_node+"';");

  Real BysMcmc::Bsr::DynHlm::DBApi::SqlExecTrace(
  "UPDATE "+dbName+"."+_table::OrderRel+"\n"+
  "SET id_node_upper = '"+to_node+"' \n"+
  "WHERE id_model='"+model+"' AND id_session='"+session+
  "' AND id_node_upper='"+from_node+"';");

  Real BysMcmc::Bsr::DynHlm::DBApi::SqlExecTrace(
  "UPDATE "+dbName+"."+_table::ConstrBorder+"\n"+
  "SET id_node = '"+to_node+"' \n"+
  "WHERE id_model='"+model+"' AND id_session='"+session+
  "' AND id_node='"+from_node+"';");

  Real BysMcmc::Bsr::DynHlm::DBApi::SqlExecTrace(
  "UPDATE "+dbName+"."+_table::ConstrLinComb+"\n"+
  "SET id_node = '"+to_node+"' \n"+
  "WHERE id_model='"+model+"' AND id_session='"+session+
  "' AND id_node='"+from_node+"';");

  Real BysMcmc::Bsr::DynHlm::DBApi::SqlExecTrace(
  "UPDATE "+dbName+"."+_table::ObsArimaBlk+"\n"+
  "SET id_node = '"+to_node+"' \n"+
  "WHERE id_model='"+model+"' AND id_session='"+session+
  "' AND id_node='"+from_node+"';");

  Real ForeignKey.Enable(0);

  1
};

//////////////////////////////////////////////////////////////////////////////
//Deletes all registers related to a given node into a specified 
//model-session 
Real ModSes.Node.Delete(Text dbName, 
                        Text model, 
                        Text session,
                        Text from_node)
//////////////////////////////////////////////////////////////////////////////
{
  NameBlock _table = BysMcmc::Bsr::DynHlm::DBApi::_.table;
  Real BysMcmc::Bsr::DynHlm::DBApi::ModSes.CheckBlocked(
    dbName, model, session, true);
  Real ForeignKey.Disable(0);

  Real BysMcmc::Bsr::DynHlm::DBApi::SqlExecTrace(
  "DELETE FROM "+dbName+"."+_table::Node+"\n"+
  "WHERE id_model='"+model+"' AND id_session='"+session+
  "' AND id_node='"+from_node+"';");

  Real BysMcmc::Bsr::DynHlm::DBApi::SqlExecTrace(
  "DELETE FROM "+dbName+"."+_table::ObsOutput+"\n"+
  "WHERE id_model='"+model+"' AND id_session='"+session+
  "' AND id_node='"+from_node+"';");

  Real BysMcmc::Bsr::DynHlm::DBApi::SqlExecTrace(
  "DELETE FROM "+dbName+"."+_table::ObsInput+"\n"+
  "WHERE id_model='"+model+"' AND id_session='"+session+
  "' AND id_node='"+from_node+"';");

  Real BysMcmc::Bsr::DynHlm::DBApi::SqlExecTrace(
  "DELETE FROM "+dbName+"."+_table::ObsTransFun+"\n"+
  "WHERE id_model='"+model+"' AND id_session='"+session+
  "' AND id_node='"+from_node+"';");

  Real BysMcmc::Bsr::DynHlm::DBApi::SqlExecTrace(
  "DELETE FROM "+dbName+"."+_table::LatSigBlk+"\n"+
  "WHERE id_model='"+model+"' AND id_session='"+session+
  "' AND id_node='"+from_node+"';");

  Real BysMcmc::Bsr::DynHlm::DBApi::SqlExecTrace(
  "DELETE FROM "+dbName+"."+_table::LatEqu+"\n"+
  "WHERE id_model='"+model+"' AND id_session='"+session+
  "' AND id_node_father='"+from_node+"';");

  Real BysMcmc::Bsr::DynHlm::DBApi::SqlExecTrace(
  "DELETE FROM "+dbName+"."+_table::LatOutput+"\n"+
  "WHERE id_model='"+model+"' AND id_session='"+session+
  "' AND id_node_father='"+from_node+"';");

  Real BysMcmc::Bsr::DynHlm::DBApi::SqlExecTrace(
  "DELETE FROM "+dbName+"."+_table::LatOutput+"\n"+
  "WHERE id_model='"+model+"' AND id_session='"+session+
  "' AND id_node_child='"+from_node+"';");

  Real BysMcmc::Bsr::DynHlm::DBApi::SqlExecTrace(
  "DELETE FROM "+dbName+"."+_table::LatInput+"\n"+
  "WHERE id_model='"+model+"' AND id_session='"+session+
  "' AND id_node_father='"+from_node+"';");

  Real BysMcmc::Bsr::DynHlm::DBApi::SqlExecTrace(
  "DELETE FROM "+dbName+"."+_table::PriEqu+"\n"+
  "WHERE id_model='"+model+"' AND id_session='"+session+
  "' AND id_node_father='"+from_node+"';");

  Real BysMcmc::Bsr::DynHlm::DBApi::SqlExecTrace(
  "DELETE FROM "+dbName+"."+_table::PriOutput+"\n"+
  "WHERE id_model='"+model+"' AND id_session='"+session+
  "' AND id_node_father='"+from_node+"';");

  Real BysMcmc::Bsr::DynHlm::DBApi::SqlExecTrace(
  "DELETE FROM "+dbName+"."+_table::PriOutput+"\n"+
  "WHERE id_model='"+model+"' AND id_session='"+session+
  "' AND id_node_child='"+from_node+"';");

  Real BysMcmc::Bsr::DynHlm::DBApi::SqlExecTrace(
  "DELETE FROM "+dbName+"."+_table::Parameter+"\n"+
  "WHERE id_model='"+model+"' AND id_session='"+session+
  "' AND id_node='"+from_node+"';");

  Real BysMcmc::Bsr::DynHlm::DBApi::SqlExecTrace(
  "DELETE FROM "+dbName+"."+_table::NonLinFlt+"\n"+
  "WHERE id_model='"+model+"' AND id_session='"+session+
  "' AND id_node='"+from_node+"';");

  Real BysMcmc::Bsr::DynHlm::DBApi::SqlExecTrace(
  "DELETE FROM "+dbName+"."+_table::OrderRel+"\n"+
  "WHERE id_model='"+model+"' AND id_session='"+session+
  "' AND id_node_lower='"+from_node+"';");

  Real BysMcmc::Bsr::DynHlm::DBApi::SqlExecTrace(
  "DELETE FROM "+dbName+"."+_table::OrderRel+"\n"+
  "WHERE id_model='"+model+"' AND id_session='"+session+
  "' AND id_node_upper='"+from_node+"';");

  Real BysMcmc::Bsr::DynHlm::DBApi::SqlExecTrace(
  "DELETE FROM "+dbName+"."+_table::ConstrBorder+"\n"+
  "WHERE id_model='"+model+"' AND id_session='"+session+
  "' AND id_node='"+from_node+"';");

  Real BysMcmc::Bsr::DynHlm::DBApi::SqlExecTrace(
  "UPDATE "+dbName+"."+_table::ConstrLinComb+"\n"+
  "SET id_node = '"+to_node+"' \n"+
  "WHERE id_model='"+model+"' AND id_session='"+session+
  "' AND id_node='"+from_node+"';");

  Real BysMcmc::Bsr::DynHlm::DBApi::SqlExecTrace(
  "DELETE FROM "+dbName+"."+_table::ObsArimaBlk+"\n"+
  "WHERE id_model='"+model+"' AND id_session='"+session+
  "' AND id_node='"+from_node+"';");

  Real ForeignKey.Enable(0);

  1
};


