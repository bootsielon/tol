// Database tests. See README.txt for more info.
// Date: July 14th, 2004.
// Author: Manuel Balderr√°bano <manuelb@tol-project.org>

// Test Description
Text "Testing edge values in all DB functions...";

//Test Operation

Real {

  //Struct definition:
  Struct DBStructMySQL {
    Text driver,
    Text database,
    Text host
  };

  Struct DBStructODBC {
    Text driver
  };

  //Init database including edge values:
  Real InitDB(Real a)
  { //Create all neccesary tables:
    Real res01 = If (DBExecQuery("drop table pruebas1") == 0, 1, 0);
    Real res02 = If (DBExecQuery("CREATE TABLE pruebas1 (
                      `campo1` VARCHAR(10),
                      `campo2` VARCHAR(5),
                      `campo3` INT,
                      `campo4` TEXT,
                      `campo5` TEXT,
                      `campo6` DATE)") == 0,1,0);

    Real (res01 & res02)
  };

  //Insert and compare some values:
  Real TestDB(Real a)
  {
    Real res01 = DBExecQuery("insert into pruebas1 values (NULL,'',NULL,NULL,'',NULL)");
    Real res02 = DBExecQuery("insert into pruebas1 values ('T','OL',1000000000,'GREAT',
                                                   'TIME SERIE', '2004/12/25')");
    Set dbSet01 = DBTable("select * from pruebas1");

    Real res03 =  ((Real TextLength(dbSet01[1][1])==0)&
                  (Real TextLength(dbSet01[1][2])==0)&
                  (Real TextLength(dbSet01[1][4])==0)&
                  (Real TextLength(dbSet01[1][5])==0)&
                  ((Real IsUnknown(Real (dbSet01[1][3]))) == 1) &
                  ((Real Day(dbSet01[1][6]))==0)
                  );
    Real res04 =  (TextMatch(dbSet01[2][1],"T")&
                   TextMatch(dbSet01[2][2],"OL")&
                   TextMatch(dbSet01[2][4],"GREAT")&
                   TextMatch(dbSet01[2][5],"TIME SERIE")&
                   (dbSet01[2][3] == 1000000000)&
                   (DateDif(Diario, dbSet01[2][6], YMD(2004,12,25)) == 0));

    Real (res01 & res02 & res03 & res04)
  };

  Real res = If (testDB,
  {
    // * Old ODBC format.
    Real res01 = DBOpen(aliasNames[1],user,passwd);
    // * New ODBC format.
    Set ODBC   = DBStructODBC("odbc");
    Real res02 = DBOpen(aliasNames[2],user,passwd, ODBC);
    // * Mysql.
    Set MySQL  = DBStructMySQL("mysql",dbName,host);
    Real res03 = DBOpen("testAliasName",user,passwd, MySQL);

    //Init all databases:
    Real res04 = InitDB(0);
    Real res05 = TestDB(0);

    Real res06 = DBActivate(aliasNames[2]);
    Real res07 = InitDB(0);
    Real res08 = TestDB(0);

    Real res09 = DBActivate(aliasNames[1]);
    Real res10 = InitDB(0);
    Real res11 = TestDB(0);

    Real res21 = DBClose("testAliasName");
    Real res22 = DBClose(aliasNames[1]);
    Real res23 = DBClose(aliasNames[2]);
    // Test condition
    Real If((res01 & res02 & res03),
    {
      If((res04 & res05 & res06 & res07 & res08 & res09 & res10 & res11 &
          res21 & res22 & res23),
      {
        //WriteLn("Ok");
        1
      },
      {
        //WriteLn("Error.");
        0
      })
      },
      {
        //WriteLn("Error-Check DB parameters in DBTestIni.tol");
        -1
      })
  },-2);

  Real Case ( (res == 1), { WriteLn("Ok");1},
              (res == 0), { WriteLn("Error");0},
              (res == -1),{ WriteLn("Error-Check DB parameters in DBTestIni.tol");0},
              (res == -2),{ WriteLn("Disabled");1})
};
