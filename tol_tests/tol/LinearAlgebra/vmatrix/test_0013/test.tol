//////////////////////////////////////////////////////////////////////////////
// FILE   : test.tol
// PURPOSE: test for VMatrix Pack function
//////////////////////////////////////////////////////////////////////////////

Text email_ = "vdebuen@tol-project.org"; 
Text link_ = "";
Text summary_ = "Checking Pack" ;
//Write here the initial test TOL code if needed
Real numErr0 = Copy(NError);

Real n = 10;

Set A = [[
VMatrix A1 = Eye(n);
VMatrix A2 = Rand(n,n,-10,10,"Cholmod.R.Sparse",0.5*n^2);
VMatrix A3 = A1+A2;
VMatrix A4 = A3-A2*0.9999999999999999;
VMatrix A5 = (A4+1000)-1000;
VMatrix A6 = Pack(A5);
VMatrix A7 = Drop(A4,1.E-14)
]];

Set nz = EvalSet(A,Real(VMatrix a)
{
  Eval("nz."+Name(a)+"=VNonNullCells(a)")
});
Set st = EvalSet(A,Real(VMatrix a)
{
  Eval("nz."+Name(a)+"=VStoredCells(a)")
});

Real ok.6 = nz[6] == st[6];
Real ok.7 = nz[7] == st[7];

Real numErr1 = Copy(NError);

/* */
//Extented information about test behaviour
Set partialResults_ = 
[[
  numErr0, numErr1, ok.6, ok.7
]] << nz << st;

//This is a messure of the success of the test 
Real quality_ = And(numErr0==numErr1, ok.6, ok.7);

//Return the results 
Set resultStr_ = strTestStatus(summary_, link_, quality_,
                  "Partial results = "<<partialResults_,
                  "NO DBServerType", "NO DBServerHost", "NO DBAlias",
                  email_);
WriteLn(""<<resultStr_);
resultStr_

/* */
