//////////////////////////////////////////////////////////////////////////////
// FILE   : test.tol
// PURPOSE: test for VMatrix Algebra Coherence
//////////////////////////////////////////////////////////////////////////////

  Text email_ = "vdebuen@tol-project.org"; 
  Text link_ = "";
  Text summary_ = "VMatrix CHOLMOD CholeskiSolve methods" ;

//Write here the initial test TOL code if needed
  Real numErr0 = Copy(NError);
  Real c   = 10;
  Real r   = 3*c;
  Real nz  = Round(r*c*0.05);  
  Real min = -10;
  Real max = +10;

  VMatrix A    = Rand(2*c,c,min,max,"Cholmod.R.Sparse",nz);
  VMatrix X    = A << Eye(c);
  VMatrix XtX  = MtMSqr(X);
  Matrix  XtX_ = VMat2Mat(XtX);

  VMatrix L.factor = CholeskiFactor(X,"XtX");
  Real L.nz = VNonNullCells(L.factor);
  Matrix L_1 = VMat2Mat(L.factor);
//P*X'*X*P = L*L'

  VMatrix B = Mat2VMat(DifEq(1/(1-B),Rand(c,1,1,1),Rand(0,0,0,0),Col(0)));
  Matrix B_ = VMat2Mat(B);
  
  VMatrix PB = CholeskiSolve(L.factor,B,"P");
  Matrix PB_ = VMat2Mat(PB);

  VMatrix PtPB = CholeskiSolve(L.factor,PB,"Pt");
  Matrix PtPB_ = VMat2Mat(PtPB);
  
  Real quality.1 = 1-VMatMax(Abs(B-PtPB));

  VMatrix L       = Convert(L.factor,"Cholmod.R.Sparse"); 
  Matrix  L_      = VMat2Mat(L);
  VMatrix PtL     = CholeskiSolve(L.factor,L,"Pt");
  Matrix  PtL_    = VMat2Mat(PtL);
  VMatrix PtLLtP  = MMtSqr(PtL);
  Matrix  PtLLtP_ = VMat2Mat(PtLLtP);

  Real quality.2 = 1-VMatMax(Abs(XtX-PtLLtP));

  Real numErr1 = Copy(NError);

//Extented information about test behaviour
  Set partialResults_ = 
  [[
    numErr0,numErr1,
    quality.1, quality.2
  ]];

//This is a messure of the success of the test 
  Real quality_ = Eq(numErr1==numErr0)*Max(0,Min(
   quality.1,
   quality.2
  ));

//Return the results 
  Set resultStr_ = strTestStatus(summary_, link_, quality_,
                    "Partial results = "<<partialResults_,
                    "NO DBServerType", "NO DBServerHost", "NO DBAlias",
                    email_);
  WriteLn(""<<resultStr_);
  resultStr_

/* */
