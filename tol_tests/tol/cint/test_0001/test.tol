//////////////////////////////////////////////////////////////////////////////
// FILE   : test.tol
// PURPOSE: test for CINT API
//////////////////////////////////////////////////////////////////////////////

Text email_ = "vdebuen@tol-project.org"; 
Text link_ = "";
Text summary_ = "test for CINT API" ;


//Write here the initial test TOL code if needed

Real numErr0 = Copy(NError);

#Require TolCint;

Real N = 1000000;

NameBlock TolCint::@Module::Load("tools.cpp");

Real t0 = Copy(Time);
Real x.cint = Cint.calc("sum_harmonic("<<N+")");
Real t.cint = Copy(Time)-t0;

WriteLn("Time for evaluation of sum_harmonic("<<N+") with Cint = "<<t.cint);

#Embed "tools.tol";

Real t0 := Copy(Time);
Real x.tol = sum_harmonic_cycle(N);
Real t.tol = Copy(Time)-t0;

WriteLn("Time for evaluation of sum_harmonic_cycle("<<N+") with TOL cycle = "<<t.tol);

Real t0 := Copy(Time);
Real x.mat = sum_harmonic_matrix(N);
Real t.mat = Copy(Time)-t0;

WriteLn("Time for evaluation of sum_harmonic_matrix("<<N+") with TOL matrix trick = "<<t.mat);

Real numErr1 = Copy(NError);

//Extented information about test behaviour
Set partialResults_ = 
[[
  numErr0,
  numErr1,
  N,
  x.cint,
  x.tol,
  x.mat,
  t.cint,
  t.tol,
  t.mat
]];

//This is a messure of the success of the test 
Real quality_ = And(
  numErr0 == numErr1, 
  x.cint == x.tol, 
  x.cint == x.mat);

//Return the results 
Set resultStr_ = @strTestStatus(summary_, link_, quality_,
                  "Partial results = "<<partialResults_,
                  "NO DBServerType", "NO DBServerHost", "NO DBAlias",
                  email_);
WriteLn(""<<resultStr_);
WriteLn("NObject="<<NObject);
WriteLn("NCore="<<NCore);
resultStr_
/* */




