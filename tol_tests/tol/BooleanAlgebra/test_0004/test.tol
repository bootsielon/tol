//////////////////////////////////////////////////////////////////////////////
// FILE   : test.tol
// PURPOSE: test for Boolean Algebra Coherence
//////////////////////////////////////////////////////////////////////////////

  Text email_ = "vdebuen@tol-project.org"; 
  Text link_ = "";
  Text summary_ = "Binary comparisson operations without unknowns" ;

//Write here the initial test TOL code if needed
  Real numErr0 = Copy(NError);
  Real n = IntRand(2,10);
  Real N = 10;
  Set  X = MatSet(Rand(N,n,-1000,1000));   

  Set table = EvalSet(X, Set (Set x)
  {
    x<<
    SetOfReal
    (
      lt  = Group("LT",x),
      eq  = Group("Eq",x),
      gt  = Group("GT",x),
      le  = Group("LE",x),
      ge  = Group("GE",x),
      test_leqt = le == lt | eq,
      test_geqt = ge == gt | eq,
      test_lt_eq_gt = And(lt+eq+gt<=1,Max(lt,eq,gt)<=1,Min(lt,eq,gt)==0)
    )
  });
  Set tableTr = Traspose(table);
  Set tests   = For(n+6,n+8,Real (Real k) { SetSum(tableTr[k]) });
  Set okTests = EvalSet(tests,Real(Real num) { num==N });

//Extented information about test behaviour
  Set partialResults_ = tests << okTests <<
  [[
    Real ok  = Group("And",okTests)
  ]];

//This is a messure of the success of the test 
  Real quality_ = And(numErr0 == NError, ok);

//Return the results 
  Set resultStr_ = strTestStatus(summary_, link_, quality_,
                    "Partial results = "<<partialResults_,
                    "NO DBServerType", "NO DBServerHost", "NO DBAlias",
                    email_);
  WriteLn(""<<resultStr_);
  resultStr_

/* */
