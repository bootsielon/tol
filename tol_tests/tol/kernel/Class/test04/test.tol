//////////////////////////////////////////////////////////////////////////////
// FILE   : test.tol
// PURPOSE: Storing Class definitions and instances in OIS
//////////////////////////////////////////////////////////////////////////////

Text email_ = "vdebuen@tol-project.org"; 
Text link_ = "";
Text summary_ = "test for Class definition" ;

//Write here the initial test TOL code if needed

Real numErr0 = Copy(NError);

#Embed "example.04.tol";

//Must work
Text name.a = GetName(a);
//Must work
Text name.b = GetName(b);
//Must fail
Text name.c = GetName(c);

//Must fail
Text dump.a = Dump(a);
//Must work
Text dump.b = Dump(b);
//Must fail
Text dump.c = Dump(c);

Set ok.all = [[
  Real ok.1.1 =  ObjectExist("@WithName","a"),
  Real ok.1.2 =  ObjectExist("@Doc",     "b"),
  Real ok.2.1 =  ObjectExist("Text","name.a"),
  Real ok.2.2 =  ObjectExist("Text","name.b"),
  Real ok.2.3 = !ObjectExist("Text","name.c"),
  Real ok.3.1 = !ObjectExist("Text","dump.a"),
  Real ok.3.2 =  ObjectExist("Text","dump.b"),
  Real ok.3.3 = !ObjectExist("Text","dump.c")
]];


Real numErr1 = Copy(NError);

//Extented information about test behaviour
Set partialResults_ = ok.all <<
[[
  numErr0,
  numErr1
]];

//This is a messure of the success of the test 
Real quality_ = Group("And",SetOfReal(numErr0+1<=numErr1)<<ok.all);

//Return the results 
Set resultStr_ = strTestStatus(summary_, link_, quality_,
                  "Partial results = "<<partialResults_,
                  "NO DBServerType", "NO DBServerHost", "NO DBAlias",
                  email_);
WriteLn(""<<resultStr_);
WriteLn("NObject="<<NObject);
WriteLn("NCore="<<NCore);
resultStr_
/* */



