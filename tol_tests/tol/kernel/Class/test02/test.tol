//////////////////////////////////////////////////////////////////////////////
// FILE   : test.tol
// PURPOSE: test for wrong Class declarations
//////////////////////////////////////////////////////////////////////////////

Text email_ = "vdebuen@tol-project.org"; 
Text link_ = "";
Text summary_ = "test for Class definition" ;

//Write here the initial test TOL code if needed

Real numErr0 = Copy(NError);

#Embed "parser.tol";
#Embed "example.02.tol";

Set ok.all = [[
  Real ok.1 =  ObjectExist("Class","@Doc") 
               & !numErr.Doc,
  Real ok.2 =  ObjectExist("Class","@ColumnVector") 
               & !numErr.ColumnVector,
  Real ok.3 =  ObjectExist("Class","@Vector") 
               & !numErr.Vector,
  Real ok.4 =  numErr.Vector.b>0,
  Real ok.5 =  ObjectExist("Class","@VectorDoc") 
               & !numErr.VectorDoc,
  Real ok.6 = !ObjectExist("Class","@VectorInfo") 
               & numErr.VectorInfo,
  Real ok.7 = !ObjectExist("Class","@VectorDoc.Ser") 
               & numErr.VectorDoc.Ser,
  Real ok.8 = !ObjectExist("Class","@VectorDoc.Mat") 
               & numErr.VectorDoc.Mat
]];


Real numErr1 = Copy(NError);

//Extented information about test behaviour
Set partialResults_ = ok.all <<
[[
  numErr0,
  numErr1,
  Real numErr.Doc,
  Real numErr.ColumnVector,
  Real numErr.Vector,
  Real numErr.Vector.b,
  Real numErr.VectorInfo,
  Real numErr.VectorDoc.Ser,
  Real numErr.VectorDoc.Mat
]];

//This is a messure of the success of the test 
Real quality_ = Group("And",SetOfReal(numErr0+5<=numErr1)<<ok.all);

//Return the results 
Set resultStr_ = strTestStatus(summary_, link_, quality_,
                  "Partial results = "<<partialResults_,
                  "NO DBServerType", "NO DBServerHost", "NO DBAlias",
                  email_);
WriteLn(""<<resultStr_);
WriteLn("NObject="<<NObject);
WriteLn("NCore="<<NCore);
resultStr_
/* */



