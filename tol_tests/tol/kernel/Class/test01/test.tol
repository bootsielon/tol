//////////////////////////////////////////////////////////////////////////////
// FILE   : test.tol
// PURPOSE: test for valid Class declarations
//////////////////////////////////////////////////////////////////////////////

Text email_ = "vdebuen@tol-project.org"; 
Text link_ = "";
Text summary_ = "test for Class definition" ;


//Write here the initial test TOL code if needed

Real numErr0 = Copy(NError);

#Embed "parser.tol";
#Embed "example.01.tol";

Set ok.all = [[
  Real ok.1 = ObjectExist("Class","Doc"),
  Real ok.2 = ObjectExist("Class","ColumnVector"),
  Real ok.3 = ObjectExist("Class","Vector"),
  Real ok.4 = ObjectExist("Class","VectorDoc"),
  Real ok.5 = ObjectExist("Class","VectorInfo"),
  Real ok.6 = ObjectExist("Class","VectorDoc.Ser"),
  Real ok.7 = ObjectExist("Class","VectorDoc.Mat")
]];

Real numErr1 = Copy(NError);

//Extented information about test behaviour
Set partialResults_ = ok.all <<
[[
  numErr0,
  numErr1
]];

//This is a messure of the success of the test 
Real quality_ = Group("And",SetOfReal(numErr0 == numErr1)<<ok.all);

//Return the results 
Set resultStr_ = strTestStatus(summary_, link_, quality_,
                  "Partial results = "<<partialResults_,
                  "NO DBServerType", "NO DBServerHost", "NO DBAlias",
                  email_);
WriteLn(""<<resultStr_);
WriteLn("NObject="<<NObject);
WriteLn("NCore="<<NCore);
resultStr_
/* */


