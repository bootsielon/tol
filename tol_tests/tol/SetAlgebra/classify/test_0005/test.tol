//////////////////////////////////////////////////////////////////////////////
// FILE   : test.tol
// PURPOSE: test for Set Algebra Coherence
//////////////////////////////////////////////////////////////////////////////

  Text email_ = "vdebuen@tol-project.org"; 
  Text link_ = "http://en.wikipedia.org/wiki/Equivalence_relation";
  Text summary_ = "Classify with equivalence relations" ;

//Write here the initial test TOL code if needed
  Real numErr0 = Copy(NError);

  Real scale  = 1000;
  Real length =  4;
  Set models = MatSet(Round(Rand(10,length, 0.5,length+0.5)));
  Set s = For(1, scale, Set(Real k)
  {
    Set perm = MatSet(RandPermutation(1, length))[1];
    Set mod  = models[IntRand(1,Card(models))];
    ExtractByIndex(mod, perm)
  });
  
  Real CompareReal(Real x, Real y) { Compare(x,y) };
  Real f(Set a, Set b)
  {
    Text a_ = ""<<Sort(a, CompareReal);
    Text b_ = ""<<Sort(b, CompareReal);
  //Write("{"<<a+"}~{"<<b+"}={"<<a_+"}=={"<<b_+"}");
    Real ok = a_ == b_;
  //WriteLn("="<<ok);
    ok
  };
  Set class_mod = Classify(models, f, "equivalence");
  WriteLn("Models = \n"<<class_mod);
  Set classes = Classify(s, f, "equivalence");
  WriteLn("Classes = \n"<<classes);

//Extented information about test behaviour
  Set partialResults_ = 
  [[
    Real ok = Card(classes)==Card(class_mod)
  ]];

//This is a messure of the success of the test 
  Real quality_ = And(numErr0 == NError, ok);

//Return the results 
  Set resultStr_ = strTestStatus(summary_, link_, quality_,
                    "Partial results = "<<partialResults_,
                    "NO DBServerType", "NO DBServerHost", "NO DBAlias",
                    email_);
  WriteLn(""<<resultStr_);
  resultStr_

/* */
