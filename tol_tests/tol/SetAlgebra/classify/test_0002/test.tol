//////////////////////////////////////////////////////////////////////////////
// FILE   : test.tol
// PURPOSE: test for Set Algebra Coherence
//////////////////////////////////////////////////////////////////////////////

  Text email_ = "vdebuen@tol-project.org"; 
  Text link_ = "http://en.wikipedia.org/wiki/De_Morgan_duality";
  Text summary_ = "Classify with symmetric relations" ;

//Write here the initial test TOL code if needed
  Real numErr0 = Copy(NError);

  Set s = [[2, 4, 7, 15, 26, 33, 35]];
  //Maximum Common Divisor of two positive integer numbers
  Real MCD(Real a, Real b)
  {
    //Note that MCD is a symmetric function: MCD(a,b)=MCD(b,a)
    If(a<b,MCD(b,a),
    {
      Real c = a % b;
      If(!c, b, MCD(b,c))
    })
  };
  //Symmetric binary relation
  Real f(Real a, Real b)
  {
    Real mcd = MCD(a, b);
    WriteLn("MCD("<<a+","<<b+")="<<mcd);
    mcd > 1
  };
  Set classes = Classify(s, f, "symmetric");

  WriteLn("Classes = \n"<<classes);

  Set expected = 
  [[
    [[ 2, 4, 26 ]],      //Class generated by primes 2, 13
    [[ 7, 15, 33, 35 ]] //Class generated by primes 3, 5, 7, 11
  ]];

//Extented information about test behaviour
  Set partialResults_ = 
  [[
    Real cmp = (classes == expected);
    Real ok = !IsUnknown(cmp) & cmp
  ]];

//This is a messure of the success of the test 
  Real quality_ = And(numErr0 == NError, ok);

//Return the results 
  Set resultStr_ = @strTestStatus(summary_, link_, quality_,
                    "Partial results = "<<partialResults_,
                    "NO DBServerType", "NO DBServerHost", "NO DBAlias",
                    email_);
  WriteLn(""<<resultStr_);
  resultStr_

/* */
