@MTryMetropolis_ARIMA mtm_arima = @MTryMetropolis_ARIMA::New(
  Z,
  SIGMA,
  arima.0,
  False);

Real mtm_arima::_.k := If(ObjectExist("Real","k"), k, 
  IntRand(1,mtm_arima::_.n));

Matrix mcmc = Rand(0,mtm_arima::_.n,0,0);

Matrix L = {
  Matrix COV = modEst.0::Correlations::COV;
  Real n = mtm_arima::_.n;
  Real r = Rows(COV);
  Real k = r-n+1;
  Choleski(Sub(COV,k,k,n,n))
};
Matrix Li = LTInverse(L);
VMatrix mtm_arima::_.L := Mat2VMat(L);
VMatrix mtm_arima::_.Li := Mat2VMat(Li);
Real mtm_arima::_.s := 1;


Real numSim = 0;

Real append_draw(VMatrix draw)
{
  If(!(numSim%100), WriteLn("
##############################################################################
Simulation "<<numSim+ " _.acceptRatio="<<mtm_arima::_.acceptRatio));
  Matrix mcmc := mcmc << VMat2Mat(Tra(draw));
  Real numSim := numSim+1
};

/* * / 
Real mtm_arima::_.sFactor := 1.01;
Real numSim := 0;
Real mh.t0 = Copy(Time);
While(numSim<1000, append_draw(mtm_arima::draw_single_try(0)));
Real mh.time = (Copy(Time) - mh.t0)/numSim;
WriteLn("Time by MH simulation "<<mh.time);

/* */
Real mtm_arima::_.sFactor := 1.00;
Real numSim := 0;
Real mtm.t0 = Copy(Time);
//Real TolOprProfiler.Enabled := True;
While(numSim<2500, append_draw(mtm_arima::draw_multiple_try(0)));
//Real TolOprProfiler.Dump("draw_multiple_try.k"<<mtm_arima::_.k+".csv");
Real mtm.time = (Copy(Time) - mtm.t0)/numSim;
WriteLn("Time by MTM simulation "<<mtm.time);
/* */

Matrix cmp = mcmc | Group("ConcatColumns", For(1,Rows(PARAM),Matrix(Real j) 
{
  Constant(Rows(mcmc),1,MatDat(PARAM,j,1))
}));

Real mtm.speed = mtm_arima::_.acceptRatio / mtm.time;

Real numErr = Copy(NError) - numErr.0;
Real numWar = Copy(NWarning) - numWar.0;

/* */
Text report.path = "mtrymh.tab";
Text report = ""
  <<rndSeed+"\t"
  <<rndSeed_iv+"\t"
  <<arima.label+"\t"
  <<arima.time+"\t"
  <<mtm_arima::_.n+"\t"
  <<mtm_arima::_.k+"\t"
  <<mtm_arima::_.acceptRatio+"\t"
  <<mtm.time+"\t"
  <<mtm.speed+"\t"
  <<numErr+"\t"
  <<numWar+"\n";
Text If(!FileExist(report.path), WriteFile(report.path,""
  +"rndSeed\t"
  +"rndSeed_iv\t"
  +"arima.label\t"
  +"arima.time\t"
  +"mtm_arima::_.n\t"
  +"mtm_arima::_.k\t"
  +"mtm_arima::_.acceptRatio\t"
  +"mtm.time\t"
  +"mtm.speed\t"
  +"numErr\t"
  +"numWar\n"));

Text AppendFile(report.path,report);
WriteLn(report);

