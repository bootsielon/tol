//////////////////////////////////////////////////////////////////////////////
// FILE   : test.tol
// PURPOSE: test for Massive Simulation Test Of Text Coherence
//////////////////////////////////////////////////////////////////////////////

  Text email_ = "vdebuen@tol-project.org"; 
  Text link_ = "";

  Set Include("../RandomText.tol");
//Write here the initial test TOL code if needed
  Real numErr0 = Copy(NError);
  Real size_ = IntRand(10,100);
  Real maxLength_ = IntRand(10,1000);
  WriteLn("size_="<<size_);
  WriteLn("maxLength_="<<maxLength_);
  Set info = RandomSetOfTxtLenInfo(size_, maxLength_);

  Set tFind = For(1,size_,Real(Real k)
  {
    Real cut = IntRand(-2, info[k]->len_+2);
    Text t2 = Sub(info[k]->txt_,cut+1,info[k]->len_);
    Real p  = TextFind(info[k]->txt_,t2);
    Real p_ = Case
    (
      info[k]->len_==0,   0,
      cut>=info[k]->len_, 0,
      cut<=0,             1,
      1,                  cut+1
    );
    Real ok = And(p<=p_,!p==!p_);
    If(!ok, WriteLn("TextFind('"+info[k]->txt_+"','"+t2+"')"+
                    " [cut+1 = "<<Real(cut+1)+"]"+
                    " [len = "<<info[k]->len_+"]"+
                    " = "<<p+" <=> "<<p_+" : "<<ok));
    ok
  });
  Real cFind = SetSum(tFind);
  Real okFind = Eq(cFind,size_);

//Extented information about test behaviour
  Set partialResults_ = 
  [[
    size_,
    maxLength_,
    okFind
  ]];

  Text summary_ = "TextFind Coherence";

//This is a messure of the success of the test 
  Real quality_ = And
  (
    numErr0==NError,
    okFind
  );

//Return the results 
  Set resultStr_ = @strTestStatus(summary_, link_, quality_,
                    "Partial results = "<<partialResults_,
                    "NO DBServerType", "NO DBServerHost", "NO DBAlias",
                    email_);
  WriteLn(""<<resultStr_);
  resultStr_

