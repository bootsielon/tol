	//////////////////////////////////////////////////////////////////////////////
//FILE: test.tol
//AUTHOR: vdebuen@tol-project.org
//CREATION: 2008-09-23
//PURPOSE: Metropolis-Hastings simulation of BSR linear block
//////////////////////////////////////////////////////////////////////////////

Text email_ = "vdebuen@tol-project.org"; 
Text link_ = "https://www.tol-project.org/ticket/766";
Text summary_ = "Parse error in API modular ASCII when no regression "
                "equations are defined.";

//////////////////////////////////////////////////////////////////////////////
//Loads general tools for BSR tests
//////////////////////////////////////////////////////////////////////////////
Set Include("../general/general.tol");

Real numErr0 = Copy(NError);

Set bsr.parsed = BSR.Parse("master.bsr","master");

BysMcmc::@Config bsr.config = BysMcmc::@Config::Default(0);
BysMcmc::@Cycler cycler = BysMcmc::Bsr::Gibbs::GetCycler(
  bsr.parsed, 
  BysMcmc::@McmcPartialHandler::Null(0), 
  bsr.config, 
  BysMcmc::@Notifier::Null(0));


//Real cycler::initialize(0);

BysMcmc::@Estimation estim = BysMcmc::@Estimation::New(cycler);

Real estim::Run(0);

Real numErr1 = Copy(NError);

//Extented information about test behaviour
Set partialResults_ = 
[[
  numErr0, numErr1
]];


//This is a messure of the success of the test 
Real quality_ = And(numErr0 == numErr1);

//Return the results 
Set resultStr_ = @strTestStatus(summary_, link_, quality_,
                  "Partial results = "<<partialResults_,
                  "NO DBServerType", "NO DBServerHost", "NO DBAlias",
                  email_);
WriteLn(""<<resultStr_);
resultStr_
/* */
