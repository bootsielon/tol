//////////////////////////////////////////////////////////////////////////////
//FILE: test.tol
//AUTHOR: vdebuen@tol-project.org
//CREATION: 2008-09-23
//PURPOSE: Metropolis-Hastings simulation of BSR linear block
//////////////////////////////////////////////////////////////////////////////

Text email_ = "vdebuen@tol-project.org"; 
Text link_ = "https://www.tol-project.org/ticket/813";
Text summary_ = "Bugs in _partialSampler.tol";

//////////////////////////////////////////////////////////////////////////////
//Loads general tools for BSR tests
//////////////////////////////////////////////////////////////////////////////
#Require BysMcmc;
Set Include("../general/general.tol");

Real numErr0 = Copy(NError);

Set bsr.parsed = BSR.Parse("master.bsr","master");

BysMcmc::@McmcPartialHandler partialHandler =
  BysMcmc::@McmcPartialHandler::New(
    Set [[ "Veh.Tur.Mat__Pib.es.Men.Deg0.Coef" ]],
    VMatrix SetCol([[ 1.018 ]]),
    Set Copy(Empty),
    BysMcmc::@McmcReloader::Null(?)
  );

BysMcmc::@Cycler cycler = BysMcmc::Bsr::Gibbs::GetCyclerFromParsed(
  bsr.parsed,
  partialHandler,
  BysMcmc::@Config::Default(?),
  BysMcmc::@Notifier::Null(?)
);


//Real cycler::initialize(0);

BysMcmc::@Estimation estim = BysMcmc::@Estimation::New(cycler);

Real estim::Run(0);

Real numErr1 = Copy(NError);

//Extented information about test behaviour
Set partialResults_ = 
[[
  numErr0, numErr1
]];


//This is a messure of the success of the test 
Real quality_ = And(numErr0 == numErr1);

//Return the results 
Set resultStr_ = @strTestStatus(summary_, link_, quality_,
                  "Partial results = "<<partialResults_,
                  "NO DBServerType", "NO DBServerHost", "NO DBAlias",
                  email_);
WriteLn(""<<resultStr_);
resultStr_
/* */
