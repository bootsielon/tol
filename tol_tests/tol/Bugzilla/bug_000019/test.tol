//////////////////////////////////////////////////////////////////////////////
// FILE   : test.tol
// PURPOSE: test for a resolved bug
//////////////////////////////////////////////////////////////////////////////
Text PutRealFormat("%.15lg");

//Sets the bugzilla identifier number, your e-mail and the bug´s summary 
  Real bugNum_ = 19;
  Text email_ = "vdebuen@tol-project.org"; 
  Text summary_ = "Round function and decimal number";
  Text link_ = GetTolBugzillaLink(bugNum_);

//Write here the initial test TOL code if needed
  Real numErr0 = Copy(NError);

  //////////////////////////////////////////////////////////////////////////////
    Real MyRound(Real x, Real decs_)
  //////////////////////////////////////////////////////////////////////////////
  {
    Real decs = Floor(decs_);
    (Round(x*10^decs)) / (10^decs)
  };
  Real N = 10000;
  Set sim = For(1,N, Set(Real k)
  {
    Real x   = Copy(Rand(-100,100));
    Real d   = Copy(IntRand(-3,6));
    Real r1  = Round  (x,d);
    Real r2  = MyRound(x,d);
    Real dif = Abs(r1-r2);
    Real cmp = dif<1.E-15;
    [[k,x,d,r1,r2,dif,cmp]]
  });
  Set sim_0 = Select(sim,Real(Set s) { s[7]==0 });
  Set sim_1 = Select(sim,Real(Set s) { s[7]!=0 });
//Extented information about test behaviour
  Set partialResults_ =
  [[
    Real N_0 = Card(sim_0),
    Real N_1 = Card(sim_1)
  ]];

//This is a messure of the success of the test 
  Real quality_ = And(numErr0==NError, N_0==0, N_1==N);

//Return the results 
  Set resultStr_ = strTestStatus(summary_, link_, quality_,
                    "Partial results = "<<partialResults_,
                    "NO DBServerType", "NO DBServerHost", "NO DBAlias",
                    email_);
  WriteLn(""<<resultStr_);
  resultStr_

