/* -*- mode: C++ -*- */
//////////////////////////////////////////////////////////////////////////////
// FILE   : test.tol
// PURPOSE: test for a resolved bug
//////////////////////////////////////////////////////////////////////////////

Set  {
//Sets the bugzilla identifier number, your e-mail and the bug´s summary
Real bugNum_ =  1475;
Text email_ = "vdebuen@tol-project.com"; 
Text summary_="Uso del operador monario :: con miembros publicados";
Text link_ = GetTolBugzillaLink(bugNum_);

Real numErr0 = Copy(NError);
Real numWar0 = Copy(NWarning);

Real a = 1;
NameBlock block = [[
  Real b = 2
]];
Real UsingNameBlock(block);
Real a;
Real b;
Real ::a;
Real ::b; // -> no funciona

Set s = {
  Real a = 11;
  Real b = 12;
  Real c = 13;
  Real d = ObjectExist("Real", "::c");
  [[a,::a,b,::b,d]]
};

Set ok = {[[
  Real ok.1 = s[1]==11,
  Real ok.2 = s[2]==1,
  Real ok.3 = s[3]==12,
  Real ok.4 = s[4]==2,
  Real ok.5 = s[5]==0 ]]};

Real ok.all = SetMin(ok);

Real numErr1 = Copy(NError);
Real numWar1 = Copy(NWarning);

Set partialResults_ = [[ 
  numErr0,numErr1,numWar1,numWar0]]<<ok;

//This is a messure of the success of the test 
Real quality_ = And(
  numWar0 == numWar1,
  numErr1 == numErr0,ok.all);

//Return the results 
Set resultStr_ =
  @strTestStatus(summary_, link_, quality_,
                 "Partial results = "<<partialResults_,
                 "NO DBServerType", "NO DBServerHost", "NO DBAlias",
                 email_);
WriteLn(""<<resultStr_);
resultStr_
}
/* */

