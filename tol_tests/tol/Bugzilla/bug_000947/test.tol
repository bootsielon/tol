/* -*- mode: C++ -*- */
//////////////////////////////////////////////////////////////////////////////
// FILE   : test.tol
// PURPOSE: test for a resolved bug
//////////////////////////////////////////////////////////////////////////////

//Sets the bugzilla identifier number, your e-mail and the bug´s summary
  Real bugNum_ =  947;
  Text email_ = "vdebuen@tol-project.org"; 
  Text summary_="Investigar la posibilidad de crear miembros locales de instancia aparte de los heredados";
  Text link_ = GetTolBugzillaLink(bugNum_);

  //Write here the initial test TOL code if needed
  Real numErr0 = Copy(NError);
  Real numWar0 = Copy(NWarning);
  
Class @A 
{
  Real _.value;
  Real getValue(Real unused) { _.value }
};

@A a = 
[[
  Real _.value = 1;
  Real _.otherValue = 3;
  Real getOtherValue(Real unused) { _.otherValue };
  Real getDoubleValue(Real unused) { 2*_.value }
]];

Real v1 = a::getValue(?);
Real v2 = a::getDoubleValue(?);
Real v3 = a::getOtherValue(?);


  Real numErr1 = Copy(NError);
  Real numWar1 = Copy(NWarning);

  Set partialResults_ = [[ 
   numErr0, numErr1,
   numWar0, numWar1,
   v1, v2, v3 ]];
  
//This is a messure of the success of the test 
  Real quality_ = And(
   numErr1==numErr0,
   numWar1==numWar0,
   v1==1,
   v2==2,
   v3==3
  );

//Return the results 
  Set resultStr_ = @strTestStatus(summary_, link_, quality_,
                    "Partial results = "<<partialResults_,
                    "NO DBServerType", "NO DBServerHost", "NO DBAlias",
                    email_);
  WriteLn(""<<resultStr_);
  resultStr_;

/* */

