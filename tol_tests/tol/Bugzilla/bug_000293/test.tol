//////////////////////////////////////////////////////////////////////////////
// FILE   : test.tol
// PURPOSE: test for a resolved bug
//////////////////////////////////////////////////////////////////////////////

Set {
//Sets the bugzilla identifier number, your e-mail and the bug´s summary 
  Real bugNum_ = 293;
  Text email_ = "vdebuen@tol-project.org"; 
  Text summary_ = "Error en el fechado Mes 445";
  Text link_ = GetTolBugzillaLink(bugNum_);

//Write here the initial test TOL code if needed
  Real numErr0 = Copy(NError);

TimeSet CtSem445  = D(1)*M(1)+(WD(6)-(Range(D(1)*M(1), -5, 2, Diario)));
TimeSet CtMes445 = D(1)*M(1)+Succ(D(1)*M(1),4,CtSem445)+
                   Succ(D(1)*M(1),8,CtSem445)+
                   Succ(D(1)*M(1),13,CtSem445)+
                   Succ(D(1)*M(1),17,CtSem445)+
                   Succ(D(1)*M(1),21,CtSem445)+
                   Succ(D(1)*M(1),26,CtSem445)+
                   Succ(D(1)*M(1),30,CtSem445)+
                   Succ(D(1)*M(1),34,CtSem445)+
                   Succ(D(1)*M(1),39,CtSem445)+
                   Succ(D(1)*M(1),43,CtSem445)+
                   Succ(D(1)*M(1),47,CtSem445);

Serie Aux01 = SubSer(CalInd(C,CtMes445),y1995,y2005);
//Extented information about test behaviour
  Set partialResults_ = 
  [[ 
    Real c = CountS(Aux01);
    Real s = SumS(Aux01)
  ]];

//This is a messure of the success of the test 
  Real quality_ = And(numErr0==NError, EQ(c,s,121));

//Return the results 
  Set resultStr_ = @strTestStatus(summary_, link_, quality_,
                    "Partial results = "<<partialResults_,
                    "NO DBServerType", "NO DBServerHost", "NO DBAlias",
                    email_);
  WriteLn(""<<resultStr_);
  resultStr_
};

