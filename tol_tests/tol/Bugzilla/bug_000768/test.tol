/* -*- mode: C++ -*- */
//////////////////////////////////////////////////////////////////////////////
// FILE   : test.tol
// PURPOSE: test for a resolved bug
//////////////////////////////////////////////////////////////////////////////

//Sets the bugzilla identifier number, your e-mail and the bug´s summary
  Real bugNum_ =  768;
  Text email_ = "vdebuen@tol-project.org"; 
  Text summary_ = 
  "BinGroup con conjuntos estructurados.";
  Text link_ = GetTolBugzillaLink(bugNum_);

  //Write here the initial test TOL code if needed
  Real numErr0 = Copy(NError);
  Real numWar0 = Copy(NWarning);

  Set setPrueba01 = SetOfSet(
    SetOfText("-uno", "1"),
    SetOfText("-dos", "2"),
    SetOfText("-tre", "3"),
    SetOfText("-cua", "4")
  );
  Set res01 = BinGroup("+",setPrueba01);


  Set setPrueba02 = SetOfSet(
    TclArgSt("-uno", "1"),
    TclArgSt("-dos", "2"),
    TclArgSt("-tre", "3"),
    TclArgSt("-cua", "4")
  );
  Set res02 = BinGroup("+",setPrueba02);


  Real numErr1 = Copy(NError);
  Real numWar1 = Copy(NWarning);

  Set partialResults_ = [[numErr0, numErr1]];

//This is a messure of the success of the test 
  Real quality_ = And(numErr1 == numErr0, 
                      numWar1 == numWar0);

//Return the results 
  Set resultStr_ = @strTestStatus(summary_, link_, quality_,
                    "Partial results = "<<partialResults_,
                    "NO DBServerType", "NO DBServerHost", "NO DBAlias",
                    email_);
  WriteLn(""<<resultStr_);
  resultStr_;

/* */
