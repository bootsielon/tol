/* -*- mode: C++ -*- */
//////////////////////////////////////////////////////////////////////////////
// FILE   : test.tol
// PURPOSE: test for a resolved bug
//////////////////////////////////////////////////////////////////////////////

//Sets the bugzilla identifier number, your e-mail and the bug´s summary and you e-mail
  Real bugNum_ = 576;
  Text email_ = "vdebuen@tol-project.org"; 
  Text summary_ = "BDBOpen can not be used without a Structure Name "
                  "of field register";
  Text link_ = GetTolBugzillaLink(bugNum_);

//Write here the initial test TOL code if needed
  Real numErr0 = Copy(NError);

  Text pathCSV = "test.txt";
  Set dataCSV = BDBOpen(pathCSV, 0, ";", "", "");
  Real regNum = dataCSV->RegNumber;
  Set tabla = For(1, regNum, Set(Real k)
  { 
    Set reg = BDBReg(dataCSV, k);
    WriteLn("reg["<<k<<"] = "<<reg);
    reg
  });
  Text tabla_txt = ""<<tabla;
  Real ok = tabla_txt == 
  "[[  [[  \"Campo1\", \"Campo2\", \"Campo3\", \"Campo4\"]], "
      "[[  \"2\", \"4\", \"1\", \"t\"]], "
      "[[  \"2\", \"e\", \"r\", \"2\"]], "
      "[[  \"3\", \"5\", \"f\", \"e\"]]]]";

  Real BDBClose(dataCSV);
  Real numErr1 = Copy(NError);

//Extented information about test behaviour
  Set partialResults_ = 
  [[
    numErr0, numErr1, ok
  ]];

  
//This is a messure of the success of the test 
  Real quality_ = And(numErr1 == numErr0, ok);

//Return the results 
  Set resultStr_ = strTestStatus(summary_, link_, quality_,
                    "Partial results = "<<partialResults_,
                    "NO DBServerType", "NO DBServerHost", "NO DBAlias",
                    email_);
  WriteLn(""<<resultStr_);
  resultStr_;

/* */
