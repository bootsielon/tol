/* -*- mode: C++ -*- */
//////////////////////////////////////////////////////////////////////////////
// FILE   : test.tol
// PURPOSE: test for a resolved bug
//////////////////////////////////////////////////////////////////////////////

//Sets the bugzilla identifier number, your e-mail and the bug´s summary
  Real bugNum_ =  1091;
  Text email_ = "vdebuen@tol-project.org"; 
  Text summary_="Maximum filename length and OisStore";
  Text link_ = GetTolBugzillaLink(bugNum_);

  //Write here the initial test TOL code if needed
  Real numErr0 = Copy(NError);
  Real numWar0 = Copy(NWarning);

  WriteLn("TRACE 1 NObjects = "<<Copy(NObject));

  Set check.1 = { Include("check.1.tol") };
  Set check.2 = { Include("check.2.tol") };

  WriteLn("TRACE 2 NObjects = "<<Copy(NObject));

  Real numErr1 = Copy(NError);
  Real numWar1 = Copy(NWarning);

  Set ok.all = [[numErr0 == numErr1, check.1::ok.1, check.1::ok.2]] << check.2::ok.all;

  Set partialResults_ = [[ numErr0, numErr1]] << ok.all;

//This is a messure of the success of the test 
  Real quality_ = Group("And",ok.all);

//Return the results 
  Set resultStr_ = @strTestStatus(summary_, link_, quality_,
                    "Partial results = "<<partialResults_,
                    "NO DBServerType", "NO DBServerHost", "NO DBAlias",
                    email_);
  WriteLn(""<<resultStr_);
  resultStr_;

/* */

