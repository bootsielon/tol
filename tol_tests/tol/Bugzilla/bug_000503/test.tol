//////////////////////////////////////////////////////////////////////////////
// FILE   : test.tol
// PURPOSE: test for a resolved bug
//////////////////////////////////////////////////////////////////////////////

Set {
//Sets the bugzilla identifier number, your e-mail and the bug´s summary and you e-mail
  Real bugNum_ = 503;
  Text email_ = "vdebuen@tol-project.org"; 
  Text summary_ = "Kernel function makes TOL to crash";
  Text link_ = GetTolBugzillaLink(bugNum_);

//Write here the initial test TOL code if needed
  Real numErr0 = Copy(NError);

  Matrix A  = SetMat(SetOfSet(  SetOfReal(1,1,1)));
  Matrix K_ = Kernel(A);
  Matrix AK = A*K_;
  WriteLn("A=\n"<< Matrix A);
  WriteLn("K=\n"<< Matrix K_);
  WriteLn("AK=\n"<< Matrix AK);

  Real numErr1 = Copy(NError);

//Extented information about test behaviour
  Set partialResults_ = 
  [[
    Real maxAbsAK = MatMax(Abs(AK));
    Real noErr = numErr1 == numErr0
  ]];
  WriteLn("maxAbsAK=\n"<< maxAbsAK);

//This is a messure of the success of the test 
  Real quality_ = And(noErr,LE(maxAbsAK,1.E-8));

//Return the results 
  Set resultStr_ = @strTestStatus(summary_, link_, quality_,
                    "Partial results = "<<partialResults_,
                    "NO DBServerType", "NO DBServerHost", "NO DBAlias",
                    email_);
  WriteLn(""<<resultStr_);
  resultStr_
};

