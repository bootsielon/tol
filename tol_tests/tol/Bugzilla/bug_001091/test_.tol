/* -*- mode: C++ -*- */
//////////////////////////////////////////////////////////////////////////////
// FILE   : test.tol
// PURPOSE: test for a resolved bug
//////////////////////////////////////////////////////////////////////////////

//Sets the bugzilla identifier number, your e-mail and the bug´s summary
  Real bugNum_ =  1091;
  Text email_ = "vdebuen@tol-project.org"; 
  Text summary_="Maximum filename length and OisStore";
  Text link_ = GetTolBugzillaLink(bugNum_);

  //Write here the initial test TOL code if needed
  Real numErr0 = Copy(NError);
  Real numWar0 = Copy(NWarning);

  WriteLn("TRACE 1 NObjects = "<<Copy(NObject));

  ////////////////////////////////////////////////////////////////////////////
  //Comprueba si puede Ois.Store puede crear un path de longitud dada y en 
  //caso contrario comprueba si se emite el correspondiente mensaje de error
  Real checkLongPath(Real pathLength)
  ////////////////////////////////////////////////////////////////////////////
  {
    Text path = "/Temp/Long/"
      <<Text SetSum(For(1, pathLength-18, Text (Real i) { "A" }))<<"/ej.oza";
    Real OSFilRemove(path);
    Real len = TextLength(path);
    Real numErr.0 = Copy(NError);
    Real Ois.Store([[Real void = 1]], path);
    Real numErr = Copy(NError)-numErr.0;
    Real created = FileExist(path);
    Set aux = { Include(path) };
    Real check = If(!created, numErr>0,
    {
      Real OSFilRemove(path);
      If(ObjectExist("Real","aux::void"),numErr==0,False)
    });
    WriteLn("[checkLongPath] "
      "len="<<len+" created="<<created+" errors="<<numErr+" check="<<check);
    check
  };

  Set ok.all = [[
    Real ok.251 = checkLongPath(251);
    Real ok.252 = checkLongPath(252);
    Real ok.253 = checkLongPath(253);
    Real ok.259 = checkLongPath(259);
    Real ok.260 = checkLongPath(260);
    Real ok.261 = checkLongPath(261)
  ]];
  WriteLn("TRACE 2 NObjects = "<<Copy(NObject));

  Real numErr1 = Copy(NError);
  Real numWar1 = Copy(NWarning);

  Set partialResults_ = [[ numErr0, numErr1]]<<ok.all;

//This is a messure of the success of the test 
  Real quality_ = Group("And",ok.all);

//Return the results 
  Set resultStr_ = @strTestStatus(summary_, link_, quality_,
                    "Partial results = "<<partialResults_,
                    "NO DBServerType", "NO DBServerHost", "NO DBAlias",
                    email_);
  WriteLn(""<<resultStr_);
  resultStr_;

/* */

