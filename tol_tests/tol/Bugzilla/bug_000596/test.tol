/* -*- mode: C++ -*- */
//////////////////////////////////////////////////////////////////////////////
// FILE   : test.tol
// PURPOSE: test for a resolved bug
//////////////////////////////////////////////////////////////////////////////

//Sets the bugzilla identifier number, your e-mail and the bug´s summary
  Real bugNum_ = 596;
  Text email_ = "vdebuen@tol-project.org"; 
  Text summary_ = "Fail in low order ARMATACov (and ARMAACov)";
  Text link_ = GetTolBugzillaLink(bugNum_);

//Write here the initial test TOL code if needed
  Real numErr0 = Copy(NError);

  //The first CountS reports 100 items while the second 110
  
  
//Polyn ARPol = RandStationary(1);
//Polyn MAPol = RandStationary(3);

  Polyn ARPol = 1-1.5*B+0.5625*B^2;
  Polyn MAPol = 1-0.624335218558454*B-0.08678995853253455*B^2+
        0.6681024625307754*B^3-0.5605871319845306*B^4+0.1937128035351634*B^5; 

  Set acf = For(1,6,Matrix(Real k){
    Matrix m = ARMATACov(ARPol,MAPol,k);
    WriteLn(FormatMatrix(Tra(m)));
    m
  });
    
  Real ok = SetMin(For(2,Card(acf), Real(Real k)
  {
    Max(0,1-MatMax(Abs(acf[k-1]-Sub(acf[k],1,1,k-1,1))))
  }));

  Real numErr1 = Copy(NError);


//Extented information about test behaviour
  Set partialResults_ = 
  [[
    numErr0, numErr1, ok
  ]];

//This is a messure of the success of the test 
  Real quality_ = And(numErr1 == numErr0, ok);

//Return the results 
  Set resultStr_ = strTestStatus(summary_, link_, quality_,
                    "Partial results = "<<partialResults_,
                    "NO DBServerType", "NO DBServerHost", "NO DBAlias",
                    email_);
  WriteLn(""<<resultStr_);
  resultStr_;

/* */
