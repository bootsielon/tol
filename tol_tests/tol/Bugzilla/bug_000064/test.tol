//////////////////////////////////////////////////////////////////////////////
// FILE   : test.tol
// PURPOSE: test for a resolved bug
//////////////////////////////////////////////////////////////////////////////

//Sets the bugzilla identifier number, your e-mail and the bug´s summary 
  Real bugNum_ = 64;
  Text email_ = "vdebuen@tol-project.org"; 
  Text summary_ = "ill behaviour in assign operator";
  Text link_ = GetTolBugzillaLink(bugNum_);

//Write here the initial test TOL code if needed
  Real numErr0 = Copy(NError);

  //If you execute this code
  Set x = [[1,2,3]];
  Text a = x[1];
  //variable a will gets a Real object when and should be raised, and if you try
  //later to do this
  Text b = "ee" + a;
  //then TOL crashed as a consecuence of the previous error.
  
  Real ok1 = !ObjectExist("Text","a");
  Real ok2 = !ObjectExist("Real","a");
  Real ok3 = !ObjectExist("Text","b");

  Real numErr1 = Copy(NError);
//Extented information about test behaviour
  Set partialResults_ = 
  [[ 
    ok1,ok2,ok3
  ]];

//This is a messure of the success of the test 
  Real quality_ = And(numErr1>numErr0, ok1, ok2, ok3);

//Return the results 
  Set resultStr_ = strTestStatus(summary_, link_, quality_,
                    "Partial results = "<<partialResults_,
                    "NO DBServerType", "NO DBServerHost", "NO DBAlias",
                    email_);
  WriteLn(""<<resultStr_);
  resultStr_

