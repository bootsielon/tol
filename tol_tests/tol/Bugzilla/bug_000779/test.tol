/* -*- mode: C++ -*- */
//////////////////////////////////////////////////////////////////////////////
// FILE   : test.tol
// PURPOSE: test for a resolved bug
//////////////////////////////////////////////////////////////////////////////

//Sets the bugzilla identifier number, your e-mail and the bug´s summary
  Real bugNum_ =  779;
  Text email_ = "vdebuen@tol-project.org"; 
  Text summary_ = "New built-in function to replace values of cells in a matrix";
  Text link_ = GetTolBugzillaLink(bugNum_);

  //Write here the initial test TOL code if needed
  Real numErr0 = Copy(NError);
  Real numWar0 = Copy(NWarning);

  Real rows = IntRand(1,100);
  Real cols = IntRand(1,100);
  Real code.num = IntRand(1,100);

  Matrix old = Tra(RandPermutation(1,code.num));
  Matrix new = Tra(RandPermutation(1,code.num))+1000000;

  Matrix data = Round(Rand(rows,cols,1,code.num));
  Matrix coded = MatReplace(data, old, new);
  Matrix decoded = MatReplace(coded, new, old);
  Real ok = MatMax(Abs(data-decoded))==0;

  Real numErr1 = Copy(NError);
  Real numWar1 = Copy(NWarning);

  Set partialResults_ = [[numErr0, numErr1]];

//This is a messure of the success of the test 
  Real quality_ = And(numErr1 == numErr0, 
                      numWar1 == numWar0);

//Return the results 
  Set resultStr_ = @strTestStatus(summary_, link_, quality_,
                    "Partial results = "<<partialResults_,
                    "NO DBServerType", "NO DBServerHost", "NO DBAlias",
                    email_);
  WriteLn(""<<resultStr_);
  resultStr_;

/* */

