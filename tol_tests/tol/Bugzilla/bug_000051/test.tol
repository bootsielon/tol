//////////////////////////////////////////////////////////////////////////////
// FILE   : test.tol
// PURPOSE: test for a resolved bug
//////////////////////////////////////////////////////////////////////////////

//Sets the bugzilla identifier number, your e-mail and the bug´s summary 
  Real bugNum_ = 51;
  Text email_ = "vdebuen@tol-project.org"; 
  Text summary_ = "tol crash";
  Text link_ = GetTolBugzillaLink(bugNum_);

//Write here the initial test TOL code if needed
  Real numErr0 = Copy(NError);

  Set result = Copy(Empty);
  
  Set makeTests (Text dir) {
      Set testFiles = GetDir(dir);
      Set tolfiles = Select(testFiles[1], Real (Text name) {
        Real If (GetFileExtension(name)=="tol", 1, 0)
      });
      Set tf = EvalSet(tolfiles, Text (Text name) {
        Text file = dir + "/" + name;
        Set lres = [[file]] << Include(file);
        Set (result := result << [[lres]]);
        file
      })
  };
  
  Set testIt (Text dir) {
      Set dirSet = GetDir(dir);
      Set result = EvalSet(dirSet[2], Set (Text subdir) {
        Set If (subdir == "tests",
           {Set makeTests(dir + "/tests")},
           {Set testIt(dir + "/" + subdir)})
      })
  };
  
  Set t0 = testIt("..");
  
//Extented information about test behaviour
  Set partialResults_ = 
  [[
    Real c = Card(t0)
  ]];

//This is a messure of the success of the test 
  Real quality_ = And(numErr0==NError, c!=0);

//Return the results 
  Set resultStr_ = @strTestStatus(summary_, link_, quality_,
                    "Partial results = "<<partialResults_,
                    "NO DBServerType", "NO DBServerHost", "NO DBAlias",
                    email_);
  WriteLn(""<<resultStr_);
  resultStr_

