/////////////////////////////////////////////////////////////////////////////
// FILE: test_bsr.tol
// PURPOSE: Checking class MhCnstrLinRegArima::@Simulator
/////////////////////////////////////////////////////////////////////////////

@BSR.ModelDef bsr.modelDef = {@BSR.ModelDef
(
  Text ModuleType = "primary";
  Set DocInfo = {@BSR.DocInfo
  (
    Text Model.Name = "GibbsCnstrLinRegArima";
    Text Model.Description = "Testing mhCnstrLinRegArima";
    Text Session.Name = "test_01";
    Text Session.Description = "";
    Text Session.Authors = "vdebuen@tol-project.org";
    Date Session.Creation = Copy(Now);
    Text Path = GetAbsolutePath(GetSourcePath(Model.Name))
  )},
  Set LinearBlock = For(1,n,@BSR.LinearBlock(Real k)
  {
    Set aux = [[@BSR.LinearBlock
    (
      Text Name = "LinBlk::Var"<<k;
      Real InitialValue = 0;
      Real Used = True;
      Real Extern = False
    )]];
    Set PutName(ToName(Name),aux[1]);
    aux[1]
  });
  Set InputMissingBlock = Copy(Empty);
  Set OutputMissingBlock = Copy(Empty);
  Set NoiseDistrib = {[[
    Set Obs.Noise = @BSR.NoiseDistrib(
      Text Name = "Obs",
      Real Nu=0;
      Text SigmaName="";
      Real SigmaIndex=-1;
      Set SigmaPrior=Copy(Empty);
      Set Arima;
      Set ArimaAuxInfo=Copy(Empty);
      VMatrix Cov=Eye(m,m,s2);
      VMatrix L=Eye(m,m,s);
      VMatrix Li=Eye(m,m,1/s);
      Set EquIdx=Range(1,m,1);
      Set TimeInfo=Copy(Empty);
      Set NonLinFilters=Copy(Empty)
  )]]};
  VMatrix Y, 
  VMatrix X,
  VMatrix a,
  VMatrix A
)};

BysMcmc::@Config bsr.config = [[
//MCMC dimensions
  Real mcmc.burnin        =  Burnin; 
  Real mcmc.sampleLength  = SampleLength;
  Real mcmc.cacheLength   =  100;
  Real bsr.linBlk.MH.useAfterIter   = 1/0
]];

BysMcmc::@Cycler cycler = BysMcmc::Bsr::Gibbs::GetCycler(
  bsr.modelDef, 
  BysMcmc::@McmcPartialHandler::Null(0), 
  bsr.config, 
  BysMcmc::@Notifier::Null(0));

Real cycler::_.sampler::_.arm.blk::refreshFrequency := 0;

BysMcmc::@Estimation estim = BysMcmc::@Estimation::New(cycler);

Real estim::Run(0);

Matrix bsr.mcmc = SubCol(estim::report::mcmc,Range(1,n,1));

