  /* -*- mode: C++ -*- */
//////////////////////////////////////////////////////////////////////////////
// FILE   : GuiTools.tol
// PURPOSE: Defines Package GuiTools
//////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////
NameBlock GuiTools = [[
//////////////////////////////////////////////////////////////////////////////

Text _.autodoc.description = "Funciones y clases relacionadas con interfaces "
"gráficas de usuario GUI (Graphic User Interfaces)";
Text _.autodoc.url = "";
Set _.autodoc.keys = [["Graphic User Interfaces","GUI"]];
Set _.autodoc.authors = [[
   "josp@tol-project.org",
   "vdebuen@tol-project.org"   ]];

//////////////////////////////////////////////////////////////////////////////
//Clase abstracta para asignar menú contextual gráfico a las instancias
Class @MenuDesc
//////////////////////////////////////////////////////////////////////////////
{
  ////////////////////////////////////////////////////////////////////////////
  //Devuelve un conjunto de pares de texto con la etiqueta a mostrar en el 
  //menú y el nombre del método a ejecutar
  Set getMenuEntries(Real void)
  ////////////////////////////////////////////////////////////////////////////
};

//El archivo TCL debe leerse fuera de la clase para que se quede almacenado 
//en el OZA
Text _MultiDimSelect.tcl = ReadFile("MultiDimSelect.tcl");

//////////////////////////////////////////////////////////////////////////////
//Clase abstracta para selección múltiple en varias dimensiones
Class @MultiDimSelect
//////////////////////////////////////////////////////////////////////////////
{
  Static Set tcl_eval = Copy(Empty);

  ////////////////////////////////////////////////////////////////////////////
  Static Real LoadTcl(Real void)
  ////////////////////////////////////////////////////////////////////////////
  {
    Real If(Card(tcl_eval),True,
    {
    //WriteLn("LoadTcl _MultiDimSelect.tcl:\n"+MultiDimSelect.tcl+"\n");
      Text temp = TmpDir+"MultiDimSelect.tcl";
      Text WriteFile(temp, _MultiDimSelect.tcl);
      Set @MultiDimSelect::tcl_eval := 
        Tcl_EvalEx( [[ "source", temp ]] );
      WriteLn("LoadTcl _tcl_eval:\n"<<@MultiDimSelect::tcl_eval+"\n");
      True
    })
  };

  ////////////////////////////////////////////////////////////////////////////
  //Devuelve un conjunto de textos con los nombres de las dimensiones
  Set getDimensions(Real void);
  ////////////////////////////////////////////////////////////////////////////

  ////////////////////////////////////////////////////////////////////////////
  //Devuelve un conjunto de textos con los valores de una dimensión dada
  Set getDimValues(Text dimName);
  ////////////////////////////////////////////////////////////////////////////

  ////////////////////////////////////////////////////////////////////////////
  //Ejecuta una acción sobre los valores seleccionados de las dimensiones
  //El argumento debe ser un conjunto de tantos conjuntos como dimensiones
  //conteniendo cada uno los valores que han sido seleccionados por el
  //usuario para dicha dimensión.
  //Este método será lanzado por el propio sistema gráfico cuando el 
  //usuario pulse el botón de aceptar.
  Real onAccept(Set selected);
  ////////////////////////////////////////////////////////////////////////////

  ////////////////////////////////////////////////////////////////////////////
  //Devuelve un conjunto de pares de texto con la etiqueta a mostrar en el 
  //cada botón adicional y el nombre del método a ejecutar
  Set getButtonEntries(Real void)
  ////////////////////////////////////////////////////////////////////////////

}

]];

